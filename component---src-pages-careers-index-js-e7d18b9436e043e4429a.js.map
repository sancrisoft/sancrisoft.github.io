{"version":3,"sources":["webpack:///./src/components/galleryGrid/styledComponents.js","webpack:///./src/components/galleryGrid/index.js","webpack:///./src/components/joinUs/styledComponents.js","webpack:///./src/components/joinUs/index.js","webpack:///./src/styles/careers/styledComponents.js","webpack:///./src/pages/careers/index.js","webpack:///./src/components/title.js","webpack:///./src/components/button.js","webpack:///./src/components/bigGreyImage/styledComponents.js","webpack:///./src/components/bigGreyImage/index.js","webpack:///./src/components/ourValues/styledComponents.js","webpack:///./src/components/ourValues/index.js"],"names":["GridContainer","styled","div","breakpoint","ImageContainer","mobileColSpan","mobileRowSpan","tabletColSpan","tabletRowSpan","colSpan","rowSpan","index","renderGridImages","props","images","map","image","key","id","sizes","render","this","PureComponent","propTypes","PropTypes","arrayOf","shape","object","number","Container","emailRegexp","JoinUs","state","email","position","why","emailError","positionError","whyError","dirty","alertMessage","titleAlert","showAlert","alertType","validate","t","valid","test","setState","changeField","target","name","value","closeAlert","handleSubmit","e","preventDefault","captchaRef","execute","sendEmail","opts","axios","post","headers","then","response","grecaptcha","reset","typeAlert","catch","error","title","emailLabel","positionLabel","whyLabel","reminder","submitLabel","ref","form","joinUsForm","onSubmit","method","className","htmlFor","type","onChange","aria-invalid","size","sitekey","disabled","show","text","onConfirm","Component","string","isRequired","joinUsEmail","withNamespaces","SectionContainer","section","RecruitmentProcessContainer","PositonsContainer","PositionCard","H4","h4","PositionSubtitles","h5","SubTitle","ImgCustom","img","PositionDetailsContainer","PositionDetailsText","PositionDetailsForm","WrapperButton","onClick","padding","func","PositionCardItems","openPositions","onClickPosition","positionCard","i","push","defaultProps","IndexPage","openPositionSelected","renderOurRecruitment","recruitmentProcess","data","site","siteMetadata","careers","item","description","childImageSharp","contentCustomStyles","paddingBottom","positionId","element","document","getElementById","scrollIntoView","behavior","block","setTimeout","window","location","hash","renderBenefits","benefits","benefit","descDirection","chipOn","renderGalleryGrid","teamPhotos","tp","renderJoinUs","componentDidMount","friendlyIdToSearch","substr","i18n","keywords","careersMainImage","style","paddingTop","marginTop","src","withPrefix","ReactHtmlParser","query","Title","color","align","textAlign","PressButton","background","fontSize","MainContainer","GreyFilter","BigGreyImage","ContentOurValue","Box","direction","BoxImage","little","Boxtitle","BoxDesc","DescContainer","theme","breakpoints","xs","sm","md","lg","xl","desktop","OurValue"],"mappings":"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","file":"component---src-pages-careers-index-js-e7d18b9436e043e4429a.js","sourcesContent":["import styled from 'styled-components';\nimport breakpoint from 'styled-components-breakpoint';\n\nexport const GridContainer = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-auto-rows: minmax(100px, auto);\n  grid-auto-flow: dense;\n  grid-gap: 5px;\n  overflow: hidden;\n  ${breakpoint('tablet')`\n    grid-template-columns: repeat(2, 1fr);\n  `}\n  ${breakpoint('desktop')`\n    height: 80vh;\n    grid-template-columns: repeat(4, 1fr);\n  `}\n`;\n\nexport const ImageContainer = styled.div`\n  grid-column: ${({ mobileColSpan }) => mobileColSpan ? ('span ' + mobileColSpan) : 'unset'};\n  grid-row: ${({ mobileRowSpan }) => mobileRowSpan ? ('span ' + mobileRowSpan) : 'unset'};\n  ${breakpoint('tablet')`\n    grid-column: ${({ tabletColSpan }) => tabletColSpan ? ('span ' + tabletColSpan) : 'unset'};\n    grid-row: ${({ tabletRowSpan }) => tabletRowSpan ? ('span ' + tabletRowSpan) : 'unset'};\n  `}\n  ${breakpoint('desktop')`\n    grid-column: ${({ colSpan }) => colSpan ? ('span ' + colSpan) : 'unset'};\n    grid-row: ${({ rowSpan }) => rowSpan ? ('span ' + rowSpan) : 'unset'};\n  `}\n  .gatsby-image-wrapper {\n    height: 100%;\n    width: 100%;\n  }\n`;\n\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport Img from 'gatsby-image'\n\nimport {\n  GridContainer,\n  ImageContainer,\n} from './styledComponents'\n\nexport class index extends PureComponent {\n  static propTypes = {\n    images: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.id,\n      sizes: PropTypes.object,\n      colSpan: PropTypes.number,\n      rowSpan: PropTypes.number,\n      mobileColSpan: PropTypes.number,\n      mobileRowSpan: PropTypes.number,\n      tabletColSpan: PropTypes.number,\n      tabletRowSpan: PropTypes.number,\n    })),\n  }\n\n  renderGridImages = () => {\n    const { images } = this.props;\n    return images.map((image) => (\n      <ImageContainer \n        key={image.id}\n        colSpan={image.colSpan}\n        rowSpan={image.rowSpan}\n        mobileColSpan={image.mobileColSpan}\n        mobileRowSpan={image.mobileRowSpan}\n        tabletColSpan={image.tabletColSpan}\n        tabletRowSpan={image.tabletRowSpan}\n      >\n        <Img sizes={image.sizes}></Img>\n      </ImageContainer>\n    ));\n  }\n\n  render() {\n    return (\n      <GridContainer>\n        { this.renderGridImages() }\n      </GridContainer>\n    )\n  }\n}\n\nexport default index\n\n/* \n\n  How to use 'teamPhotos' layout system \n\n  The Team photos section is made using a CSS Grid\n  In order to make items take certain percent or cols, or rows of the Grid you need to know\n  how many rows or cols are in the grid in the current viewport\n  Desktop: 4 columns, implicit rows\n  Tablet: 2 columns, implicit rows\n  Phone: 1 colum, implicit rows\n\n  With implicit rows, we mean that tha rows are created on demand, it means, as it needs\n  The default row and col values for an item are 1x1, it means that if you don't define a PAIR of values\n  for a specific viewport: Desktop, mobile or tablet, the default will be 1x1, if you define a col value,\n  you need to specify the row value as well\n\n  The Grid will make the items to take that many rows or cols that you specified, for example, if there\n  are 5 items in the grid, and the first one is 2x2, and the other ones don't specify values for cols and rows\n  the Grid will place the first item to consume 2x2, and the rest being 1x1 will fit like so:\n\n  p1 p1 p2 p3\n  p1 p1 p4 p5\n\n  It's important to note that the Grid will increase the height of itself as it needs, but the items won't grow\n  automatically, you need to specify explicitly, taking the previous example, if we now have 3 items instead of \n  5, the Grid will be something like:\n\n  p1 p1 p2 p3\n  p1 p1 ee ee\n\n  With ee beint empty, that means that there will be a blank space, in those cases, the developer must be aware\n  of assigning values that will fill the Grid correctly, for that case, the first item will be 2x2, and the other 2\n  must be 1x2 and 1x2, or 2x1 and 2x1.\n\n  The idea is give the developer as much flexibility with the grid as posible, and with this srtup each item can\n  grow as much as the developer specifies.\n\n  Finally the viewport changes and the columns too, you need to be aware of those changes and test the grid in\n  desktop, tablet and mobile to see if the changes are consistent across layouts.\n*/\n\n/* End of using 'teamPhotos' layout system */\n","import styled from 'styled-components'\nimport breakpoint from 'styled-components-breakpoint';\n\nexport const Container = styled.div`\n  padding: 2em 2em;\n  border-radius: 10px;\n  background-color: #ebebeb;\n  margin: 1em;\n  position: sticky;\n  top: 80px;\n  ${breakpoint('tablet')`\n    margin: 2em;\n  `}\n  h3 {\n    text-align: center;\n  }\n  form {\n    display: flex;\n    flex-direction: column;\n    margin-top: 2em;\n    label.error {\n      margin-top: 5px;\n      font-weight: normal;\n      color: #d61400;\n      font-size: 14px;\n      font-style: italic;\n      position: relative;\n      top: -4px;\n    }\n    div.submit {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n    div.reminder > label {\n      font-style: italic;\n      font-size: 14px;\n      margin-top: 10px;\n    }\n    div.form-control {\n      display: flex;\n      flex-direction: column;\n      input[aria-invalid=\"true\"], textarea[aria-invalid=\"true\"] {\n        margin-bottom: 0;\n      }\n      input, textarea {\n        border: none;\n        margin: 10px 0 15px 0;\n        padding: 5px;\n        &:focus {\n          outline: 0;\n        }\n      }\n      textarea {\n        resize: vertical;\n      }\n    }\n    input[type=\"submit\"] {\n      background-color: #F28724;\n      border: none;\n      border-radius: 4px;\n      color: white;\n      padding: 6px 20px;\n      font-size: 0.9rem;\n      margin-top: 2em;\n      cursor: pointer;\n      &:hover {\n        background-color: #ffa44f;\n      }\n      &:focus {\n        outline: 0;\n      }\n    }\n  }\n`;","import React, { Component } from 'react'\nimport { withNamespaces } from \"react-i18next\"\nimport ReCAPTCHA from \"react-google-recaptcha\"\nimport PropTypes from 'prop-types'\nimport axios from 'axios'\nimport SweetAlert from 'sweetalert2-react'\n\n\nimport {\n  Container,\n} from './styledComponents'\n\nimport { H3 } from '../styledComponents';\n\nconst emailRegexp = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n\nclass JoinUs extends Component {\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n    joinUsEmail: PropTypes.string.isRequired,\n    emailLabel: PropTypes.string.isRequired,\n    positionLabel: PropTypes.string.isRequired,\n    whyLabel: PropTypes.string.isRequired,\n    reminder: PropTypes.string.isRequired,\n    submitLabel: PropTypes.string.isRequired,\n  }\n\n  state = {\n    email: '',\n    position: '',\n    why: '',\n    emailError: '',\n    positionError: '',\n    whyError: '',\n    dirty: false,\n    alertMessage: '',\n    titleAlert: '',\n    showAlert: false,\n    alertType: 'success',\n  }\n\n  validate = () => {\n    const {\n      email, \n      position,\n      why,\n    } = this.state;\n    const { t } = this.props;\n    let valid = true;\n    if (!email) {\n      valid = false;\n      this.setState({ emailError: t('careers.join.noFieldError'), dirty: true });\n    } else if (email && !emailRegexp.test(email)) {\n      valid = false;\n      this.setState({ emailError: t('careers.join.emailError'), dirty: true });\n    } else this.setState({ emailError: '' });\n\n    if (!position) {\n      valid = false;\n      this.setState({ positionError: t('careers.join.noFieldError'), dirty: true });\n    } else this.setState({ positionError: '' }); \n\n    if (!why) {\n      valid = false;\n      this.setState({ whyError: t('careers.join.noFieldError'), dirty: true });\n    } else this.setState({ whyError: '' });\n\n    return valid;\n  }\n\n  changeField = ({ target: { name, value }}) => {\n    this.setState({ [name]: value }, () => {\n      if (this.state.dirty) this.validate();\n    });\n  }\n\n  closeAlert = () => this.setState({ showAlert: false });\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if(this.validate()) this.captchaRef.execute();\n  }\n\n  sendEmail = (value) => {\n    const {\n      email,\n      position,\n      why,\n    } = this.state;\n    const { t } = this.props;\n    if (value) {\n      const opts = {\n        email,\n        position,\n        why,\n      };\n      axios.post(\n          \"https://submit-form.com/4giIQwtVFQRA95qYQrYHS\", \n          opts, \n          {headers: {\"Accept\": \"application/json\"}}\n      )\n      .then((response) => {\n        this.captchaRef.props.grecaptcha.reset();\n        this.setState({\n          email: '',\n          position: '',\n          why: '',\n          titleAlert: t('careers.join.successTitle'),\n          typeAlert: 'success',\n          alertMessage: t('careers.join.successBody'),\n          showAlert: true,\n          alertType: 'success'\n        });\n      })\n      .catch((error) => {\n        this.captchaRef.props.grecaptcha.reset();\n        this.setState({\n          titleAlert: t('careers.join.errorTitle'),\n          typeAlert: 'info',\n          alertMessage: t('careers.join.errorBody'),\n          showAlert: true,\n          alertType: 'error'\n        });\n      });\n    }\n  }\n\n  render() {\n    const {\n      title,\n      emailLabel,\n      positionLabel,\n      whyLabel,\n      reminder,\n      submitLabel,\n    } = this.props;\n    const {\n      email,\n      position,\n      why,\n      emailError,\n      positionError,\n      whyError,\n      showAlert,\n      titleAlert,\n      alertMessage,\n      alertType,\n    } = this.state;\n    return (\n      <Container>\n        <H3>{title}</H3>\n        <form \n          ref={(form) => this.joinUsForm = form} \n          onSubmit={this.handleSubmit}\n          method=\"POST\"\n        >\n          <div className=\"form-control\">\n            <label htmlFor=\"email\">{emailLabel}</label>\n            <input \n              id=\"email\" \n              type=\"email\" \n              name=\"email\"\n              value={email}\n              onChange={this.changeField}\n              aria-invalid={emailError !== ''}\n            />\n            { emailError && (<label className=\"error\">{emailError}</label>) }\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"position\">{positionLabel}</label>\n            <input\n              id=\"position\" \n              type=\"text\" \n              name=\"position\" \n              value={position}\n              onChange={this.changeField}\n              aria-invalid={positionError !== ''}\n            />\n            { positionError && (<label className=\"error\">{positionError}</label>) }\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"why\">{whyLabel}</label>\n            <textarea \n              id=\"why\"\n              name=\"why\"\n              value={why}\n              onChange={this.changeField}\n              aria-invalid={whyError !== ''}\n            />\n            { whyError && (<label className=\"error\">{whyError}</label>) }\n          </div>\n          <div className=\"reminder\">\n            <label>{reminder}</label>\n          </div>\n          <ReCAPTCHA\n            ref={(ref) => this.captchaRef = ref}\n            size=\"invisible\"\n            sitekey=\"6LdeBokUAAAAAM01lWglTU0siI1fmMRoGjCE_94b\"\n            onChange={this.sendEmail}\n          />\n          <div className=\"submit\">\n            <input \n              type=\"submit\" \n              value={submitLabel}\n              disabled={emailError || positionError || whyError}\n            />\n          </div>\n        </form>\n        <SweetAlert\n          show={showAlert}\n          title={titleAlert}\n          text={alertMessage}\n          onConfirm={this.closeAlert}\n          type={alertType}\n        />\n      </Container>\n    )\n  }\n}\n\nexport default withNamespaces('translations')(JoinUs);","import styled from 'styled-components'\nimport breakpoint from 'styled-components-breakpoint'\n\nexport const SectionContainer = styled.section`\n  padding-top: 2em;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const RecruitmentProcessContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 2em 0 0 0;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nexport const PositonsContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 2em 0;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nexport const PositionCard = styled.div`\n  width: 15em;\n  background-color: #ebebeb;\n  padding: 1.5em 2em;\n  border-radius: 0.3em;\n  margin: 20px;\n`\n\nexport const H4 = styled.h4`\n  font-size: 1em;\n  margin-bottom: 1em;\n  height: 2em;\n`;\n\nexport const PositionSubtitles = styled.h5`\n  font-size: 1.2em;\n  margin-bottom: 1em;\n`;\n\nexport const SubTitle = styled.h5`\n  font-size: 0.75em;\n  margin: 1em 0;\n  font-family: \"LatoBold\";\n  color: #000;\n`\n\nexport const ImgCustom = styled.img`\n  max-height: 200px;\n  margin: 1em 0 0 0;\n  width: 100%;\n  object-fit: cover;\n`;\n\nexport const PositionDetailsContainer = styled.div`\n  padding: 0 1em;\n  display: flex;\n  flex-direction: column;\n  ${breakpoint('tablet')`\n    flex-direction: row;\n  `}\n  ${breakpoint('desktop')`\n    padding: 0;\n  `}\n`;\n\nexport const PositionDetailsText = styled.div`\n  width: 100%;\n  ${breakpoint('tablet')`\n    width: 60%;\n  `}\n`;\n\nexport const PositionDetailsForm = styled.div`\n  width: 100%;\n  ${breakpoint('tablet')`\n    width: 40%;\n  `}\n`;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql, withPrefix } from 'gatsby'\nimport ReactHtmlParser from 'react-html-parser';\nimport BigGreyImage from '../../components/bigGreyImage'\nimport Layout from '../../components/layout'\nimport SEO from '../../components/seo'\nimport { I18nextProvider, withNamespaces } from \"react-i18next\"\nimport i18n from '../../data/translations'\nimport Button from '../../components/button'\nimport OurRecruitment from '../../components/ourValues'\nimport OurValues from '../../components/ourValues'\nimport GalleryGrid from '../../components/galleryGrid'\nimport JoinUs from '../../components/joinUs'\nimport {\n  H3,\n  PageSizer,\n} from '../../components/styledComponents'\nimport {\n  H4,\n  SectionContainer,\n  PositonsContainer,\n  PositionCard,\n  SubTitle,\n  RecruitmentProcessContainer,\n  ImgCustom,\n  PositionSubtitles,\n  PositionDetailsContainer,\n  PositionDetailsText,\n  PositionDetailsForm,\n} from '../../styles/careers/styledComponents';\n\nconst WrapperButton = ({ id, onClick, text }) => {\n  const handleClick = () => {\n    onClick(id);\n  }\n  return (\n    <Button\n      text={text}\n      padding=\"5px 10px\"\n      size=\"12px\"\n      onClick={handleClick}\n    />\n  );\n}\n\nWrapperButton.propTypes = {\n  id: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n}\n\nconst PositionCardItems = ({ openPositions, t, onClickPosition }) => {\n  const positionCard = [];\n  for (var i = 0; i < openPositions; i++) {\n    positionCard.push(\n      <PositionCard key={`position-card-${i}`}>\n        <H4>{t(`careers.openPositions.positions.${i}.title`)}</H4>\n        <SubTitle>{t(`careers.openPositions.positions.${i}.mode`)}</SubTitle>\n        <WrapperButton id={i} onClick={onClickPosition} text={t(`careers.openPositions.positions.${i}.moreLink`)}/>\n      </PositionCard>\n    );\n  }\n  return (\n    <PositonsContainer>\n      {positionCard}\n    </PositonsContainer>\n  );\n};\n\nPositionCardItems.defaultProps = {\n  openPositions: PropTypes.number.isRequired,\n  t: PropTypes.object.isRequired,\n  onClickPosition: PropTypes.func.isRequired,\n}\n\nclass IndexPage extends Component {\n  state = {\n    openPositionSelected: null,\n  };\n\n  componentDidMount() {\n    const {\n      data: {\n        site: {\n          siteMetadata: {\n            careers: {\n              openPositions,\n            },\n          },\n        },\n      },\n      t,\n    } = this.props;\n    const friendlyIdToSearch = window.location.hash ? window.location.hash.substr(1) : null;\n    if (friendlyIdToSearch) {\n      for (var i = 0; i < openPositions; i++) {\n        if (t(`careers.openPositions.positions.${i}.friendlyId`) === friendlyIdToSearch) {\n          this.setState({\n            openPositionSelected: i,\n          });\n          setTimeout(() => {\n            document.getElementById(friendlyIdToSearch).scrollIntoView({\n              behavior: 'smooth',\n              block: 'start'\n            });\n          }, 1000);\n          return;\n        }\n      }\n    }\n  }\n\n  renderOurRecruitment = () => {\n    const {\n      data: {\n        site: {\n          siteMetadata: {\n            careers: {\n              recruitmentProcess,\n            },\n          },\n        },\n      },\n      data,\n      t,\n    } = this.props;\n    return recruitmentProcess.map((item, index) => (\n      <OurRecruitment\n        key={`${index}-${item}`}\n        title={t(`careers.recruitmentProcess.${item}.title`)}\n        description={t(`careers.recruitmentProcess.${item}.description`)}\n        image={data[`${item}Icon`].childImageSharp.sizes}\n        contentCustomStyles={{ paddingBottom: 0 }}\n      />\n    ));\n  }\n\n  onClickPosition = ( positionId ) => {\n    const { t } = this.props;\n    const element = t(`careers.openPositions.positions.${positionId}.friendlyId`);\n    this.setState({\n      openPositionSelected: positionId,\n    }, () => {\n      document.getElementById(element).scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      });\n    })\n    setTimeout(() => {\n      window.location.hash = element;\n    }, 300)\n  }\n\n  renderBenefits = () => {\n    const {\n      data: {\n        site: {\n          siteMetadata: {\n            careers: {\n              benefits,\n            },\n          },\n        },\n      },\n      data,\n      t,\n    } = this.props;\n    return benefits.map((benefit) => (\n      <OurValues\n        key={benefit}\n        description={t(`careers.benefits.${benefit}.description`)}\n        title={t(`careers.benefits.${benefit}.title`)}\n        image={data[`${benefit}`].childImageSharp.sizes}\n        descDirection={'row'}\n        chipOn\n      />\n    ));\n  }\n\n  renderGalleryGrid = () => {\n    const {\n      data: {\n        site: {\n          siteMetadata: {\n            careers: {\n              teamPhotos,\n            },\n          },\n        },\n      },\n      data,\n    } = this.props;\n    return(\n      <GalleryGrid\n        images={teamPhotos.map((tp) => ({ ...tp, sizes: data[tp.id].childImageSharp.sizes }))}\n      />\n    );\n  }\n\n  renderJoinUs = () => {\n    const {\n      data: {\n        site: {\n          siteMetadata: {\n            careers: {\n              joinUsEmail,\n            },\n          },\n        },\n      },\n      t,\n    } = this.props;\n    return (\n      <JoinUs\n        joinUsEmail={joinUsEmail}\n        title={t('careers.join.title')}\n        emailLabel={t('careers.join.emailLabel')}\n        positionLabel={t('careers.join.positionLabel')}\n        whyLabel={t('careers.join.whyLabel')}\n        reminder={t('careers.join.reminder')}\n        submitLabel={t('careers.join.submitLabel')}\n      />\n    );\n  }\n\n  render() {\n    const { openPositionSelected } = this.state;\n    const {\n      data: {\n        site: {\n          siteMetadata: {\n            careers: {\n              openPositions,\n            },\n          },\n        },\n      },\n      data,\n      t,\n    } = this.props;\n    return (\n      <I18nextProvider i18n={i18n}>\n      <Layout>\n        <SEO title=\"Sancrisoft | Careers\" keywords={['sancrisoft', 'digital-solutions']} description=\"page Careers\" />\n        <section>\n          <BigGreyImage\n            image={data.careersMainImage.childImageSharp.sizes}\n            title={t('careers.bigImage.title')}\n            description={t('careers.bigImage.description')}\n          />\n        </section>\n        <PageSizer>\n          <SectionContainer>\n            <H3>{t('careers.recruitment.title')}</H3>\n            <RecruitmentProcessContainer>\n              {this.renderOurRecruitment()}\n            </RecruitmentProcessContainer>\n            <H3>{t('careers.openPositions.title')}</H3>\n            <PositionCardItems\n              openPositions={openPositions}\n              t={t}\n              onClickPosition={this.onClickPosition}\n            />\n          </SectionContainer>\n          {openPositionSelected !== null && <PositionDetailsContainer>\n            <PositionDetailsText>\n              <div id={t(`careers.openPositions.positions.${openPositionSelected}.friendlyId`)} style={{paddingTop: '100px', marginTop: '-100px'}}>\n                <H3>{t(`careers.openPositions.positions.${openPositionSelected}.title`)}</H3>\n              </div>\n              {(t([`careers.openPositions.positions.${openPositionSelected}.image`, ''])) && (\n                <ImgCustom src={withPrefix(`/images/careers/${t(`careers.openPositions.positions.${openPositionSelected}.image`)}`)} />\n              )}\n              {(t([`careers.openPositions.positions.${openPositionSelected}.positionDescription`, ''])) && (\n                <div>\n                  <PositionSubtitles style={{ marginTop: '1em' }}>{t(`careers.openPositions.positionDescriptionTitle`)}</PositionSubtitles>\n                  {ReactHtmlParser(t(`careers.openPositions.positions.${openPositionSelected}.positionDescription`))}\n                </div>\n\n              )}\n              {(t([`careers.openPositions.positions.${openPositionSelected}.technicalSkills`, ''])) && (\n                <div>\n                  <PositionSubtitles>{t(`careers.openPositions.technicalSkillsTitle`)}</PositionSubtitles>\n                  {ReactHtmlParser(t(`careers.openPositions.positions.${openPositionSelected}.technicalSkills`))}\n                </div>\n\n              )}\n              {(t([`careers.openPositions.positions.${openPositionSelected}.responsabilities`, ''])) && (\n                <div>\n                  <PositionSubtitles>{t(`careers.openPositions.responsabilitiesTitle`)}</PositionSubtitles>\n                  {ReactHtmlParser(t(`careers.openPositions.positions.${openPositionSelected}.responsabilities`))}\n                </div>\n\n              )}\n              {(t([`careers.openPositions.positions.${openPositionSelected}.extraContent`, ''])) && (\n                <div>\n                  <PositionSubtitles>{t(`careers.openPositions.positions.${openPositionSelected}.extraTitle`)}</PositionSubtitles>\n                  {ReactHtmlParser(t(`careers.openPositions.positions.${openPositionSelected}.extraContent`))}\n                </div>\n              )}\n            </PositionDetailsText>\n            <PositionDetailsForm>\n              { this.renderJoinUs() }\n            </PositionDetailsForm>\n          </PositionDetailsContainer>}\n          <SectionContainer>\n            <H3>{t('careers.benefits.title')}</H3>\n            <RecruitmentProcessContainer>\n              {this.renderBenefits()}\n            </RecruitmentProcessContainer>\n          </SectionContainer>\n        </PageSizer>\n        { this.renderGalleryGrid() }\n      </Layout>\n      </I18nextProvider>\n    );\n  }\n}\n\n// Queries for images (One query by image)\nexport const query = graphql`\nquery portfolioQuery {\n  careersMainImage:file(relativePath: { eq: \"careers/work.jpg\" }) {\n    ...imageFragment\n  }\n  astronaut:file(relativePath: { eq: \"home/gatsby-astronaut.png\" }) {\n    ...imageFragment\n  }\n  icon:file(relativePath: { eq: \"gatsby-icon.png\" }) {\n    ...imageFragment\n  }\n  applicationIcon:file(relativePath: { eq: \"careers/recruitment/application.png\" }) {\n    ...imageFragment\n  }\n  assigmentIcon:file(relativePath: { eq: \"careers/recruitment/assignment.png\" }) {\n    ...imageFragment\n  }\n  interviewIcon:file(relativePath: { eq: \"careers/recruitment/interview.png\" }) {\n    ...imageFragment\n  }\n  offerIcon:file(relativePath: { eq: \"careers/recruitment/offer.png\" }) {\n    ...imageFragment\n  }\n  salary:file(relativePath: { eq: \"careers/benefits/salary.png\" }) {\n    ...imageFragment\n  }\n  vacations:file(relativePath: { eq: \"careers/benefits/vacations.png\" }) {\n    ...imageFragment\n  }\n  remote:file(relativePath: { eq: \"careers/benefits/remote.png\" }) {\n    ...imageFragment\n  }\n  environment:file(relativePath: { eq: \"careers/benefits/environment.png\" }) {\n    ...imageFragment\n  }\n  bonus:file(relativePath: { eq: \"careers/benefits/bonus.png\" }) {\n    ...imageFragment\n  }\n  snack:file(relativePath: { eq: \"careers/benefits/snack.png\" }) {\n    ...imageFragment\n  }\n  happy:file(relativePath: { eq: \"careers/benefits/happy.png\" }) {\n    ...imageFragment\n  }\n  workstation:file(relativePath: { eq: \"careers/benefits/workstation.png\" }) {\n    ...imageFragment\n  }\n  support:file(relativePath: { eq: \"careers/benefits/support.png\" }) {\n    ...imageFragment\n  }\n  careersPhoto1:file(relativePath: { eq: \"careers/team/chicamocha1.jpg\" }) {\n    ...imageFragment\n  }\n  careersPhoto2:file(relativePath: { eq: \"careers/team/chicamocha2.jpg\" }) {\n    ...imageFragment\n  }\n  careersPhoto3:file(relativePath: { eq: \"careers/team/chicamocha3.jpg\" }) {\n    ...imageFragment\n  }\n  careersPhoto4:file(relativePath: { eq: \"careers/team/chicamocha4.jpg\" }) {\n    ...imageFragment\n  }\n  careersPhoto5:file(relativePath: { eq: \"careers/team/chicamocha5.jpg\" }) {\n    ...imageFragment\n  }\n  careersPhoto6:file(relativePath: { eq: \"careers/team/chicamocha6.jpg\" }) {\n    ...imageFragment\n  }\n  site {\n    siteMetadata {\n      title\n      careers {\n        recruitmentProcess\n        openPositions\n        benefits\n        teamPhotos {\n          id\n          colSpan\n          rowSpan\n          mobileColSpan\n          mobileRowSpan\n          tabletColSpan\n          tabletRowSpan\n        }\n        joinUsEmail\n      }\n    }\n  }\n}\n`;\n\nexport default withNamespaces('translations')(IndexPage)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { H1, H2, H3, H4, H5, H6 } from './styledComponents'\n\nconst Title = ({ type, text, color, align }) => {\n    switch(type) {\n        case 2 :\n          return (\n            <H2\n              style={{\n                color: `${color}`,\n                textAlign: `${align}`\n              }}>\n              {text}\n            </H2>\n          );\n        case 3 :\n          return (\n            <H3\n              style={{\n                color: `${color}`,\n                textAlign: `${align}`\n              }}>\n              {text}\n            </H3>\n          );\n        case 4 :\n          return (\n            <H4\n              style={{\n                color: `${color}`,\n                textAlign: `${align}`\n              }}>\n              {text}\n            </H4>\n          );\n        case 5 :\n          return (\n            <H5\n              style={{\n                color: `${color}`,\n                textAlign: `${align}`\n              }}>\n              {text}\n            </H5>\n          );\n        case 6 :\n          return (\n            <H6\n              style={{\n                color: `${color}`,\n                textAlign: `${align}`\n              }}>\n              {text}\n            </H6>\n          );\n        default:\n          return (\n            <H1\n              style={{\n                color: `${color}`,\n                textAlign: `${align}`\n              }}>\n              {text}\n            </H1>\n          );\n    }\n}\n\nTitle.propTypes = {\n  type: PropTypes.number,\n  color: PropTypes.string,\n  align: PropTypes.string\n}\n\nTitle.defaultProps = {\n  type: 1,\n  color: \"#333\",\n  align: \"center\"\n}\n\nexport default Title\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from './styledComponents'\n\nconst PressButton = ({ text, color, background, size, padding, onClick, className }) => {\n  return(\n    <Button\n      className={className}\n      style={{\n        color: `${color}`,\n        background: `${background}`,\n        fontSize: `${size}`,\n        padding: `${padding}`,\n      }}\n      onClick={onClick}\n    >\n      {text}\n    </Button>\n  )\n}\n\nPressButton.propTypes = {\n  color: PropTypes.string,\n  text: PropTypes.string,\n  size: PropTypes.string,\n  background: PropTypes.string,\n  onClick: PropTypes.func,\n}\n\nPressButton.defaultProps = {\n  color: \"#fff\",\n  background: \"#F28724\",\n  text: \"Get a Quote\",\n  size: \"14px\",\n  padding: \"10px 20px\",\n  onClick: () => {},\n}\n\nexport default PressButton\n","import styled from 'styled-components'\n\nexport const MainContainer = styled.div`\n  width: 100%;\n  height: 50vh;\n  position: relative;\n  div.detail {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    position: absolute;\n    top: 0;\n    z-index: 3;\n    width: 100%;\n    height: 100%;\n    h2, p {\n      color: white;\n      text-align: center;\n      padding: 0 1em;\n    }\n  }\n  .image-container {\n    width: 100%;\n    height: 100%;\n    img {\n      flex: 1;\n      object-fit: cover;\n      position: absolute;\n      z-index: 1;\n    }\n  }\n`;\n\nexport const GreyFilter = styled.div`\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0,0,0,0.55);\n  z-index: 2;\n`;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Img from 'gatsby-image'\nimport {\n  MainContainer,\n  GreyFilter,\n} from './styledComponents'\nimport { H2 } from '../styledComponents'\n\nconst BigGreyImage = ({ title, description, image }) => (\n  <MainContainer>\n    <GreyFilter />\n    <Img className={'image-container'} sizes={image} />\n    <div className=\"detail\">\n      <H2>{title}</H2>\n      <p>{description}</p>\n    </div>\n  </MainContainer>\n);\n\nBigGreyImage.propTypes = {\n  image: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n};\n\nexport default BigGreyImage\n","import styled from 'styled-components';\nimport breakpoint from 'styled-components-breakpoint';\n\nexport const ContentOurValue = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding-bottom: 2em;\n  ${breakpoint('sm')`\n    width: 48%;\n  `}\n  ${breakpoint('md')`\n    width: 32%;\n  `}\n  ${breakpoint('lg')`\n    width: 24%;\n  `}\n\n`;\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 90%;\n  margin: 0 auto;\n  ${breakpoint('md')`\n    width: 95%;\n    flex-direction: ${({ direction }) => direction};\n  `}\n`;\nexport const BoxImage = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-bottom: 15px;\n  .gatsby-image-wrapper {\n    width: ${({ little }) => little ? '70px' : '150px'};\n    ${breakpoint('md')`\n      width: ${({ little }) => little ? '60px' : '130px'};\n    `}\n    ${breakpoint('lg')`\n      width: ${({ little }) => little ? '50px' : '150px'};\n    `}\n  }\n`;\nexport const Boxtitle = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  h3, h6 {\n    width: 100%;\n    font-size: 20px;\n  }\n`;\nexport const BoxDesc = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  p {\n    text-align: center;\n    font-size: 16px;\n    line-height: 1.2;\n  }\n`;\n\nexport const DescContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  ${breakpoint('md')`\n    margin-left: ${({ direction }) => direction === 'row' ? '1em' : 0 };\n  `}\n  ${Boxtitle} {\n    h6, h3 {\n      text-align: center;\n      font-size: ${({ direction }) => direction === 'row' ? '16px' : '20px' };\n      ${breakpoint('md')`\n        text-align: ${({ direction }) => direction === 'row' ? 'start !important' : 'center' };\n      `}\n    }\n  }\n  p {\n    text-align: center;\n    font-size: ${({ direction }) => direction === 'row' ? '14px' : '16px' };\n    ${breakpoint('md')`\n      text-align: ${({ direction }) => direction === 'row' ? 'start !important' : 'center' };\n    `}\n  }\n`;\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport Img from 'gatsby-image'\nimport {ThemeProvider} from 'styled-components'\n\nimport Title from '../title'\n\nimport {\n  ContentOurValue,\n  Box,\n  BoxImage,\n  Boxtitle,\n  BoxDesc,\n  DescContainer,\n} from './styledComponents.js'\n\nconst theme = {\n  breakpoints: {\n    xs: 0,\n    sm: 568,\n    md: 768,\n    lg: 992,\n    xl: 1200,\n    desktop: 992,\n  }\n};\nconst OurValue = ({ description, title, image, contentCustomStyles, descDirection }) => {\n  const little = descDirection === 'row';\n  return (\n    <ThemeProvider theme={theme}>\n      <ContentOurValue style={contentCustomStyles}>\n        <Box direction={descDirection}>\n          <BoxImage little={little}>\n            <Img\n              sizes={image}\n            />\n          </BoxImage>\n          <DescContainer direction={descDirection}>\n            <Boxtitle>\n              <Title\n                type={little ? 6 : 3}\n                text={title}\n              />\n            </Boxtitle>\n            <BoxDesc>\n              <p>{description}</p>\n            </BoxDesc>\n          </DescContainer>\n        </Box>\n      </ContentOurValue>\n    </ThemeProvider>\n  )\n}\n\nOurValue.defaultProps = {\n  contentCustomStyles: {},\n  descDirection: 'column',\n};\n\nOurValue.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string,\n  image: PropTypes.object,\n  contentCustomStyles: PropTypes.object,\n  descDirection: PropTypes.string,\n};\n\nexport default OurValue\n"],"sourceRoot":""}