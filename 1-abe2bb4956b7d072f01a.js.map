{"version":3,"sources":["webpack:///./node_modules/gatsby-image/index.js","webpack:///./node_modules/react-burger-menu/lib/menuFactory.js","webpack:///./node_modules/core-js/modules/es7.array.includes.js","webpack:///./node_modules/core-js/modules/es6.string.includes.js","webpack:///./node_modules/react-burger-menu/lib/BurgerMenu.js","webpack:///./node_modules/react-burger-menu/lib/snapsvgImporter.js","webpack:///./node_modules/core-js/modules/_string-context.js","webpack:///./node_modules/core-js/modules/_fails-is-regexp.js","webpack:///./node_modules/react-burger-menu/lib/menus/slide.js","webpack:///./node_modules/react-burger-menu/lib/baseStyles.js","webpack:///./node_modules/react-burger-menu/lib/BurgerIcon.js","webpack:///./node_modules/react-burger-menu/lib/CrossIcon.js","webpack:///./node_modules/react-burger-menu/lib/menus/stack.js","webpack:///./node_modules/react-burger-menu/lib/menus/elastic.js","webpack:///./node_modules/snapsvg-cjs/dist/snap.svg-cjs.js","webpack:///./node_modules/eve/eve.js","webpack:///./node_modules/react-burger-menu/lib/menus/bubble.js","webpack:///./node_modules/react-burger-menu/lib/menus/push.js","webpack:///./node_modules/react-burger-menu/lib/menus/pushRotate.js","webpack:///./node_modules/react-burger-menu/lib/menus/scaleDown.js","webpack:///./node_modules/react-burger-menu/lib/menus/scaleRotate.js","webpack:///./node_modules/react-burger-menu/lib/menus/fallDown.js","webpack:///./node_modules/react-burger-menu/lib/menus/reveal.js"],"names":["_interopRequireDefault","__webpack_require__","exports","__esModule","default","io","_inheritsLoose2","_assertThisInitialized2","_objectWithoutPropertiesLoose2","_extends2","_react","_propTypes","convertProps","props","convertedProps","resolutions","sizes","critical","fixed","fluid","loading","groupByMedia","concat","getImageSrcKey","_ref","src","imageCache","Object","create","inImageCache","hasNativeLazyLoadSupport","HTMLImageElement","prototype","isBrowser","window","hasIOSupport","IntersectionObserver","listeners","WeakMap","generateImageSources","imageVariants","map","_ref2","srcSet","srcSetWebp","media","createElement","Fragment","key","type","withMedia","without","forEach","variant","push","generateTracedSVGSources","_ref3","tracedSVG","generateBase64Sources","_ref4","base64","generateNoscriptSource","_ref5","isWebp","listenToIntersections","el","cb","observer","entries","entry","has","target","get","isIntersecting","intersectionRatio","unobserve","delete","rootMargin","observe","set","noscriptImg","title","alt","width","height","crossOrigin","draggable","join","Placeholder","_ref6","generateSources","spreadProps","baseImage","Img","length","forwardRef","ref","style","onLoad","onError","otherProps","position","top","left","objectFit","objectPosition","propTypes","object","func","Image","_React$Component","_this","call","this","seenBefore","addNoScript","fadeIn","useIOSupport","isVisible","state","imgLoaded","imgCached","imageRef","createRef","handleImageLoaded","bind","handleRef","_proto","componentDidMount","onStartLoad","wasCached","img","current","complete","componentWillUnmount","cleanUpListeners","_this2","imageInCache","setState","currentSrc","render","_convertProps","className","_convertProps$style","_convertProps$imgStyl","imgStyle","_convertProps$placeho","placeholderStyle","placeholderClassName","backgroundColor","durationFadeIn","Tag","itemProp","shouldReveal","shouldFadeIn","imageStyle","opacity","transition","bgColor","delayHideStyle","transitionDelay","imagePlaceholderStyle","placeholderImageProps","image","overflow","JSON","stringify","paddingBottom","aspectRatio","bottom","right","dangerouslySetInnerHTML","__html","_imageVariants","_image","divStyle","display","Component","defaultProps","fixedObject","shape","number","isRequired","string","srcWebp","fluidObject","oneOfType","arrayOf","bool","oneOf","_default","defineProperty","value","_extends","assign","i","arguments","source","hasOwnProperty","_createClass","defineProperties","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_get","_x3","_x4","_x5","_again","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","getter","parent","getPrototypeOf","obj","_react2","_reactDom2","_propTypes2","_baseStyles2","_BurgerIcon2","_CrossIcon2","styles","Menu","_Component","instance","TypeError","_classCallCheck","isOpen","subClass","superClass","constructor","setPrototypeOf","__proto__","_inherits","options","noStateChange","newState","applyWrapperStyles","onStateChange","timeoutId","clearTimeout","setTimeout","bodyClassName","document","querySelector","classList","pageWrap","pageWrapId","handleExternalWrapper","outerContainer","outerContainerId","id","wrapperStyles","html","body","wrapper","getElementById","builtStyles","getStyle","prop","element","console","error","index","inline","propName","replace","charAt","toUpperCase","output","formattedWidth","e","event","keyCode","toggleMenu","disableOverlayClick","Error","customOnKeyDown","onkeydown","disableCloseOnEsc","listenForClose","morphShape","path","svg","findDOMNode","lib","select","animate","attr","pathInitial","nextProps","_this3","noOverlay","overlayClassName","trim","onClick","shouldDisableOverlayClick","getStyles","morphShapeClassName","viewBox","preserveAspectRatio","d","menuClassName","itemListClassName","Children","children","item","extraProps","itemClassName","filter","cloneElement","customCrossIcon","customIcon","crossButtonClassName","crossClassName","customBurgerIcon","burgerButtonClassName","barClassName","burgerBarClassName","module","$export","$includes","P","includes","context","F","searchString","indexOf","slide","stack","elastic","bubble","pushRotate","scaleDown","scaleRotate","fallDown","reveal","Snap","isRegExp","defined","that","NAME","String","MATCH","KEY","re","f","_menuFactory","_menuFactory2","overlay","zIndex","background","MozTransform","MsTransform","OTransform","WebkitTransform","transform","menuWrap","menu","boxSizing","itemList","outline","_x","_x2","BurgerIcon","hover","icon","bmIcon","bar","getLineStyle","bmBurgerBars","bmBurgerButton","onMouseOver","onMouseOut","margin","padding","border","fontSize","cursor","CrossIcon","apply","bmCross","getCrossStyle","bmCrossButton","color","nthChild","_snapsvgImporter2","pathOpen","mina","easeinout","whiteSpace","eve","requestID","animations","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","Date","getTime","isArray","Array","a","toString","idgen","idprefix","timer","now","sta","val","s","ds","b","dur","B","speed","spd","duration","stopit","update","pause","pdif","resume","frame","res","start","j","jj","end","easing","timeStamp","len","A","anim","linear","status","stop","time","getById","n","easeout","Math","pow","easein","q","Q","sqrt","x","y","t","abs","backin","backout","sin","PI","bounce","p","root","w","h","nodeType","wrap","is","Element","glob","doc","Paper","version","_","win","tokenRegex","objNotationRegex","Str","toFloat","parseFloat","toInt","parseInt","math","mmax","max","mmin","min","E","round","objectToString","colourRegExp","commaSpaces","separator","hsrg","hs","rg","pathCommand","tCommand","pathValues","ID","xlink","xmlns","hub","url","$","createTextNode","text","createComment","substring","getAttributeNS","getAttribute","nodeValue","setAttributeNS","setAttribute","removeAttribute","createElementNS","o","toLowerCase","isFinite","slice","cacher","scope","postprocessor","newf","arg","args","cache","count","array","ii","splice","repush","shift","rad","deg","format","str","all","name","quote","quotedName","isFunc","replacer","clone","angle","tan","cos","asin","num","acos","atan","atan2","x1","y1","x2","y2","x3","y3","len2","closestPoint","distance2","dx","dy","best","bestLength","scan","scanDistance","pathNode","node","pathLength","getTotalLength","precision","pathSegList","numberOfItems","bestDistance","Infinity","scanLength","getPointAtLength","before","after","beforeLength","afterLength","beforeDistance","afterDistance","distance","snapTo","values","tolerance","rem","getRGB","colour","r","g","hex","rgbtoString","toHex","red","green","blue","rgb","match","split","hsb2rgb","hsl2rgb","hsb","hsl","l","toFixed","getElementsByTagName","out","defaultView","getComputedStyle","getPropertyValue","hsbtoString","hsltoString","prepareRGB","clr","packageRGB","rgb2hsl","rgb2hsb","v","R","G","X","C","V","L","M","m","parsePathString","pathString","pth","arr","paramCounts","c","u","z","data","params","parseTransformString","TString","svgTransform2string","tstr","rgTransform","transform2matrix","bbox","tdata","Matrix","bb","tlen","command","absolute","inver","invert","translate","rotate","scale","add","_unit2px","getSomeSVG","mgr","class","fill","appendChild","getW","getBBox","getH","nam","removeChild","contains","compareDocumentPosition","ownerSVGElement","add2group","list","childNodes","snap","paper","tagName","nodeName","anims","mask","pattern","symbol","method","frag","make","defs","proto","ownerDocument","dom","contentDocument","getSomeDefs","parentNode","pdefs","query","selectAll","nodelist","querySelectorAll","setInterval","attributes","firstDefined","json","att","parse","createDocumentFragment","full","div","innerHTML","firstChild","fragment","ch","toJSON","jsonFiller","on","nt","css","lastIndexOf","letter","cssAttr","alignment-baseline","baseline-shift","clip","clip-path","clip-rule","color-interpolation","color-interpolation-filters","color-profile","color-rendering","direction","dominant-baseline","enable-background","fill-opacity","fill-rule","flood-color","flood-opacity","font","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","glyph-orientation-horizontal","glyph-orientation-vertical","image-rendering","kerning","letter-spacing","lighting-color","marker","marker-end","marker-mid","marker-start","pointer-events","shape-rendering","stop-color","stop-opacity","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-anchor","text-decoration","text-rendering","unicode-bidi","visibility","word-spacing","writing-mode","ajax","postData","req","XMLHttpRequest","pd","encodeURIComponent","open","setRequestHeader","once","onreadystatechange","readyState","send","load","responseText","getElementByPoint","canvas","elem","box","docElem","clientTop","clientLeft","elementFromPoint","opera","so","getBoundingClientRect","documentElement","pageYOffset","scrollTop","pageXOffset","scrollLeft","sr","createSVGRect","hits","getIntersectionList","plugin","elproto","unit2px","isWithoutTransform","getClientRects","removed","localMatrix","original","href","pathfinder","deflt","bboxwt","realPath","matrix","propString","extractTransform","doReturn","test","papa","global","getCTM","local","ms","localString","toTransformString","globalMatrix","totalMatrix","diffMatrix","total","gradientTransform","patternTransform","append","it","appendTo","prepend","first","insertBefore","prependTo","nextSibling","insertAfter","remove","asPX","use","xlink:href","cloneNode","els","ids","uses","urltest","linktest","oldid","old","fs","fixids","toDefs","toPattern","patternUnits","refX","refY","cx","cy","markerWidth","markerHeight","orient","eldata","chld","removeData","outerSVG","innerSVG","toDataURL","btoa","contents","unescape","matrixproto","norm","normalize","mag","aNew","bNew","multLeft","cNew","eNew","me","skewX","skew","skewY","fromCharCode","offset","determinant","row","scalex","shear","scaley","isSimple","isSuperSimple","noRotation","shorter","clipIt","reURLValue","URL","fillStroke","grad","gradient","attrs","deurl","gradrg","setFontSize","getFontSize","tokens","stops","seed","step","k","toAbsolute","txt","baseVal","vb","rx","ry","tp","textPath","tuner","chunk","tuned","setter","textExtract","chi","textContent","internal","rgNotSpace","addClass","clazz","finalValue","classes","curClasses","removeClass","pos","hasClass","toggleClass","flag","operators","+","-","/","*","reUnit","reAddon","getNumber","plus","evnt","atr","unit","aUnit","op","isNaN","bplus","from","to","getUnit","rect","circle","preload","onerror","cssText","onload","offsetWidth","offsetHeight","ellipse","group","vbx","vby","vbw","vbh","ptrn","vx","vy","vw","vh","line","polyline","points","polygon","Gstops","GaddStop","inserted","GgetBBox","GsetStops","addStop","gradientLinear","setStops","gradientRadial","fx","fy","unshift","gradientUnits","clear","next","p2s","paths","ps","sleep","r1","r2","r0","rectPath","pathClone","pathArray","getPointAtSegmentLength","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","bezlen","findDotsAtSegment","x4","y4","ll","t2","getTotLen","getLengthFactory","istotal","subpath","O","onlystart","point","sp","subpaths","path2curve","getSubpathsAtLength","t1","t13","t12","t3","mx","my","nx","ny","alpha","bezierBBox","curveDim","isPointInsideBBox","isBBoxIntersect","bbox1","bbox2","base3","p1","p2","p3","p4","z2","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","intersect","denominator","px","py","px2","py2","interHelper","bez1","bez2","justCount","n1","n2","dots1","dots2","xy","di","di1","dj","dj1","ci","cj","interPathHelper","path1","path2","x1m","y1m","x2m","y2m","pi","pj","intr","kk","segment1","segment2","pathBBox","Y","dim","xmin","ymin","ellipsePath","getPath","pathToAbsolute","pa0","pa","crz","dots","pop","catmullRom2bezier","l2c","q2c","ax","ay","x0","y0","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","curve","bx","by","qx","qy","attrs2","processPath","pcom","T","a2c","large_arc_flag","sweep_flag","recursive","_120","f1","f2","rx2","ry2","df","f2old","x2old","y2old","c1","s1","c2","s2","hx","hy","m1","m2","m3","m4","newres","fixArc","pp","pcoms1","pcoms2","fixM","a1","a2","pfirst","seg","seg2","seglen","seg2len","crp","iLen","getSubpath","closest","inside","found","intersection","intersectionNumber","isPointInside","toRelative","lowerCase","rel","toCubic","pathi","Set","items","bindings","setproto","thisArg","Animation","each","begin","handler","callbacker","aname","unbound","insertion","tail","todel","arglen","exclude","names","getEmpty","getViewBox","getColour","path2array","isNumeric","equal","Number","tt1","tt2","maxlength","equaliseTransform","arr1","arr2","bUnit","supportsTouch","events","touchMap","mousedown","mousemove","mouseup","getScroll","preventTouch","originalEvent","preventDefault","stopTouch","stopPropagation","addEvent","fn","realName","scrollY","scrollX","targetTouches","olde","clientX","clientY","addEventListener","removeEventListener","drag","dragMove","dragi","touch","touches","identifier","_drag","move_scope","dragUp","unmousemove","unmouseup","end_scope","start_scope","off","eventName","unbind","f_in","f_out","scope_in","scope_out","mouseover","mouseout","unhover","unmouseover","unmouseout","onmove","onstart","onend","origTransform","init","undrag","unmousedown","pproto","rgurl","filstr","filterUnits","blur","def","shadow","grayscale","amount","sepia","saturate","hueRotate","amount2","brightness","contrast","firstLetter","getAlign","way","align","animation","inAnim","_attrs","_callback","curStatus","eq","fkeys","tkeys","keys","saveColor","colors","A100","A200","A400","A700","mui","flat","pink","purple","deeppurple","indigo","lightblue","cyan","teal","lightgreen","lime","yellow","amber","orange","deeporange","brown","grey","bluegrey","turquoise","greensea","sunflower","emerland","nephritis","carrot","pumpkin","peterriver","belizehole","alizarin","pomegranate","amethyst","wisteria","clouds","silver","wetasphalt","midnightblue","concrete","asbestos","importMUIColors","__WEBPACK_AMD_DEFINE_RESULT__","current_event","comaseparator","numsort","lastDefined","objtos","ar","oldstop","indexed","queue","ce","sort","_events","nes","es","sep","RegExp","exist","subname","cur","nts","inodes","funcs","prune","steps","stepsTotal","nextStep","closeButton","transformOrigin","transformStyle","perspective","perspectiveOrigin","burgerIcon"],"mappings":"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","file":"1-abe2bb4956b7d072f01a.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar logDeprecationNotice = function logDeprecationNotice(prop, replacement) {\n  if (process.env.NODE_ENV === \"production\") {\n    return;\n  }\n\n  console.log(\"\\n    The \\\"\" + prop + \"\\\" prop is now deprecated and will be removed in the next major version\\n    of \\\"gatsby-image\\\".\\n    \");\n\n  if (replacement) {\n    console.log(\"Please use \" + replacement + \" instead of \\\"\" + prop + \"\\\".\");\n  }\n}; // Handle legacy props during their deprecation phase\n\n\nvar convertProps = function convertProps(props) {\n  var convertedProps = (0, _extends2.default)({}, props);\n  var resolutions = convertedProps.resolutions,\n      sizes = convertedProps.sizes,\n      critical = convertedProps.critical;\n\n  if (resolutions) {\n    convertedProps.fixed = resolutions;\n    delete convertedProps.resolutions;\n  }\n\n  if (sizes) {\n    convertedProps.fluid = sizes;\n    delete convertedProps.sizes;\n  }\n\n  if (critical) {\n    logDeprecationNotice(\"critical\", \"the native \\\"loading\\\" attribute\");\n    convertedProps.loading = \"eager\";\n  } // convert fluid & fixed to arrays so we only have to work with arrays\n\n\n  if (convertedProps.fluid) {\n    convertedProps.fluid = groupByMedia([].concat(convertedProps.fluid));\n  }\n\n  if (convertedProps.fixed) {\n    convertedProps.fixed = groupByMedia([].concat(convertedProps.fixed));\n  }\n\n  return convertedProps;\n};\n/**\n * Find the source of an image to use as a key in the image cache.\n * Use `the first image in either `fixed` or `fluid`\n * @param {{fluid: {src: string}[], fixed: {src: string}[]}} args\n * @return {string}\n */\n\n\nvar getImageSrcKey = function getImageSrcKey(_ref) {\n  var fluid = _ref.fluid,\n      fixed = _ref.fixed;\n  var data = fluid && fluid[0] || fixed && fixed[0];\n  return data.src;\n}; // Cache if we've seen an image before so we don't bother with\n// lazy-loading & fading in on subsequent mounts.\n\n\nvar imageCache = Object.create({});\n\nvar inImageCache = function inImageCache(props) {\n  var convertedProps = convertProps(props); // Find src\n\n  var src = getImageSrcKey(convertedProps);\n  return imageCache[src] || false;\n};\n\nvar activateCacheForImage = function activateCacheForImage(props) {\n  var convertedProps = convertProps(props); // Find src\n\n  var src = getImageSrcKey(convertedProps);\n  imageCache[src] = true;\n}; // Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\n\n\nvar hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nvar isBrowser = typeof window !== \"undefined\";\nvar hasIOSupport = isBrowser && window.IntersectionObserver;\nvar io;\nvar listeners = new WeakMap();\n\nfunction getIO() {\n  if (typeof io === \"undefined\" && typeof window !== \"undefined\" && window.IntersectionObserver) {\n    io = new window.IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        if (listeners.has(entry.target)) {\n          var cb = listeners.get(entry.target); // Edge doesn't currently support isIntersecting, so also test for an intersectionRatio > 0\n\n          if (entry.isIntersecting || entry.intersectionRatio > 0) {\n            io.unobserve(entry.target);\n            listeners.delete(entry.target);\n            cb();\n          }\n        }\n      });\n    }, {\n      rootMargin: \"200px\"\n    });\n  }\n\n  return io;\n}\n\nfunction generateImageSources(imageVariants) {\n  return imageVariants.map(function (_ref2) {\n    var src = _ref2.src,\n        srcSet = _ref2.srcSet,\n        srcSetWebp = _ref2.srcSetWebp,\n        media = _ref2.media,\n        sizes = _ref2.sizes;\n    return _react.default.createElement(_react.default.Fragment, {\n      key: src\n    }, srcSetWebp && _react.default.createElement(\"source\", {\n      type: \"image/webp\",\n      media: media,\n      srcSet: srcSetWebp,\n      sizes: sizes\n    }), _react.default.createElement(\"source\", {\n      media: media,\n      srcSet: srcSet,\n      sizes: sizes\n    }));\n  });\n} // Return an array ordered by elements having a media prop, does not use\n// native sort, as a stable sort is not guaranteed by all browsers/versions\n\n\nfunction groupByMedia(imageVariants) {\n  var withMedia = [];\n  var without = [];\n  imageVariants.forEach(function (variant) {\n    return (variant.media ? withMedia : without).push(variant);\n  });\n\n  if (without.length > 1 && process.env.NODE_ENV !== \"production\") {\n    console.warn(\"We've found \" + without.length + \" sources without a media property. They might be ignored by the browser, see: https://www.gatsbyjs.org/packages/gatsby-image/#art-directing-multiple-images\");\n  }\n\n  return withMedia.concat(without);\n}\n\nfunction generateTracedSVGSources(imageVariants) {\n  return imageVariants.map(function (_ref3) {\n    var src = _ref3.src,\n        media = _ref3.media,\n        tracedSVG = _ref3.tracedSVG;\n    return _react.default.createElement(\"source\", {\n      key: src,\n      media: media,\n      srcSet: tracedSVG\n    });\n  });\n}\n\nfunction generateBase64Sources(imageVariants) {\n  return imageVariants.map(function (_ref4) {\n    var src = _ref4.src,\n        media = _ref4.media,\n        base64 = _ref4.base64;\n    return _react.default.createElement(\"source\", {\n      key: src,\n      media: media,\n      srcSet: base64\n    });\n  });\n}\n\nfunction generateNoscriptSource(_ref5, isWebp) {\n  var srcSet = _ref5.srcSet,\n      srcSetWebp = _ref5.srcSetWebp,\n      media = _ref5.media,\n      sizes = _ref5.sizes;\n  var src = isWebp ? srcSetWebp : srcSet;\n  var mediaAttr = media ? \"media=\\\"\" + media + \"\\\" \" : \"\";\n  var typeAttr = isWebp ? \"type='image/webp' \" : \"\";\n  var sizesAttr = sizes ? \"sizes=\\\"\" + sizes + \"\\\" \" : \"\";\n  return \"<source \" + typeAttr + mediaAttr + \"srcset=\\\"\" + src + \"\\\" \" + sizesAttr + \"/>\";\n}\n\nfunction generateNoscriptSources(imageVariants) {\n  return imageVariants.map(function (variant) {\n    return (variant.srcSetWebp ? generateNoscriptSource(variant, true) : \"\") + generateNoscriptSource(variant);\n  }).join(\"\");\n}\n\nvar listenToIntersections = function listenToIntersections(el, cb) {\n  var observer = getIO();\n\n  if (observer) {\n    observer.observe(el);\n    listeners.set(el, cb);\n  }\n\n  return function () {\n    observer.unobserve(el);\n    listeners.delete(el);\n  };\n};\n\nvar noscriptImg = function noscriptImg(props) {\n  // Check if prop exists before adding each attribute to the string output below to prevent\n  // HTML validation issues caused by empty values like width=\"\" and height=\"\"\n  var src = props.src ? \"src=\\\"\" + props.src + \"\\\" \" : \"src=\\\"\\\" \"; // required attribute\n\n  var sizes = props.sizes ? \"sizes=\\\"\" + props.sizes + \"\\\" \" : \"\";\n  var srcSet = props.srcSet ? \"srcset=\\\"\" + props.srcSet + \"\\\" \" : \"\";\n  var title = props.title ? \"title=\\\"\" + props.title + \"\\\" \" : \"\";\n  var alt = props.alt ? \"alt=\\\"\" + props.alt + \"\\\" \" : \"alt=\\\"\\\" \"; // required attribute\n\n  var width = props.width ? \"width=\\\"\" + props.width + \"\\\" \" : \"\";\n  var height = props.height ? \"height=\\\"\" + props.height + \"\\\" \" : \"\";\n  var crossOrigin = props.crossOrigin ? \"crossorigin=\\\"\" + props.crossOrigin + \"\\\" \" : \"\";\n  var loading = props.loading ? \"loading=\\\"\" + props.loading + \"\\\" \" : \"\";\n  var draggable = props.draggable ? \"draggable=\\\"\" + props.draggable + \"\\\" \" : \"\";\n  var sources = generateNoscriptSources(props.imageVariants);\n  return \"<picture>\" + sources + \"<img \" + loading + width + height + sizes + srcSet + src + alt + title + crossOrigin + draggable + \"style=\\\"position:absolute;top:0;left:0;opacity:1;width:100%;height:100%;object-fit:cover;object-position:center\\\"/></picture>\";\n}; // Earlier versions of gatsby-image during the 2.x cycle did not wrap\n// the `Img` component in a `picture` element. This maintains compatibility\n// until a breaking change can be introduced in the next major release\n\n\nvar Placeholder = function Placeholder(_ref6) {\n  var src = _ref6.src,\n      imageVariants = _ref6.imageVariants,\n      generateSources = _ref6.generateSources,\n      spreadProps = _ref6.spreadProps;\n\n  var baseImage = _react.default.createElement(Img, (0, _extends2.default)({\n    src: src\n  }, spreadProps));\n\n  return imageVariants.length > 1 ? _react.default.createElement(\"picture\", null, generateSources(imageVariants), baseImage) : baseImage;\n};\n\nvar Img = _react.default.forwardRef(function (props, ref) {\n  var sizes = props.sizes,\n      srcSet = props.srcSet,\n      src = props.src,\n      style = props.style,\n      onLoad = props.onLoad,\n      onError = props.onError,\n      loading = props.loading,\n      draggable = props.draggable,\n      otherProps = (0, _objectWithoutPropertiesLoose2.default)(props, [\"sizes\", \"srcSet\", \"src\", \"style\", \"onLoad\", \"onError\", \"loading\", \"draggable\"]);\n  return _react.default.createElement(\"img\", (0, _extends2.default)({\n    sizes: sizes,\n    srcSet: srcSet,\n    src: src\n  }, otherProps, {\n    onLoad: onLoad,\n    onError: onError,\n    ref: ref,\n    loading: loading,\n    draggable: draggable,\n    style: (0, _extends2.default)({\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      objectFit: \"cover\",\n      objectPosition: \"center\"\n    }, style)\n  }));\n});\n\nImg.propTypes = {\n  style: _propTypes.default.object,\n  onError: _propTypes.default.func,\n  onLoad: _propTypes.default.func\n};\n\nvar Image =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(Image, _React$Component);\n\n  function Image(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this; // If this image has already been loaded before then we can assume it's\n    // already in the browser cache so it's cheap to just show directly.\n\n    _this.seenBefore = isBrowser && inImageCache(props);\n    _this.addNoScript = !(props.critical && !props.fadeIn);\n    _this.useIOSupport = !hasNativeLazyLoadSupport && hasIOSupport && !props.critical && !_this.seenBefore;\n    var isVisible = props.critical || isBrowser && (hasNativeLazyLoadSupport || !_this.useIOSupport);\n    _this.state = {\n      isVisible: isVisible,\n      imgLoaded: false,\n      imgCached: false,\n      fadeIn: !_this.seenBefore && props.fadeIn\n    };\n    _this.imageRef = _react.default.createRef();\n    _this.handleImageLoaded = _this.handleImageLoaded.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    _this.handleRef = _this.handleRef.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    return _this;\n  }\n\n  var _proto = Image.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (this.state.isVisible && typeof this.props.onStartLoad === \"function\") {\n      this.props.onStartLoad({\n        wasCached: inImageCache(this.props)\n      });\n    }\n\n    if (this.props.critical) {\n      var img = this.imageRef.current;\n\n      if (img && img.complete) {\n        this.handleImageLoaded();\n      }\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.cleanUpListeners) {\n      this.cleanUpListeners();\n    }\n  }; // Specific to IntersectionObserver based lazy-load support\n\n\n  _proto.handleRef = function handleRef(ref) {\n    var _this2 = this;\n\n    if (this.useIOSupport && ref) {\n      this.cleanUpListeners = listenToIntersections(ref, function () {\n        var imageInCache = inImageCache(_this2.props);\n\n        if (!_this2.state.isVisible && typeof _this2.props.onStartLoad === \"function\") {\n          _this2.props.onStartLoad({\n            wasCached: imageInCache\n          });\n        } // imgCached and imgLoaded must update after isVisible,\n        // Once isVisible is true, imageRef becomes accessible, which imgCached needs access to.\n        // imgLoaded and imgCached are in a 2nd setState call to be changed together,\n        // avoiding initiating unnecessary animation frames from style changes.\n\n\n        _this2.setState({\n          isVisible: true\n        }, function () {\n          return _this2.setState({\n            imgLoaded: imageInCache,\n            // `currentSrc` should be a string, but can be `undefined` in IE,\n            // !! operator validates the value is not undefined/null/\"\"\n            imgCached: !!_this2.imageRef.current.currentSrc\n          });\n        });\n      });\n    }\n  };\n\n  _proto.handleImageLoaded = function handleImageLoaded() {\n    activateCacheForImage(this.props);\n    this.setState({\n      imgLoaded: true\n    });\n\n    if (this.props.onLoad) {\n      this.props.onLoad();\n    }\n  };\n\n  _proto.render = function render() {\n    var _convertProps = convertProps(this.props),\n        title = _convertProps.title,\n        alt = _convertProps.alt,\n        className = _convertProps.className,\n        _convertProps$style = _convertProps.style,\n        style = _convertProps$style === void 0 ? {} : _convertProps$style,\n        _convertProps$imgStyl = _convertProps.imgStyle,\n        imgStyle = _convertProps$imgStyl === void 0 ? {} : _convertProps$imgStyl,\n        _convertProps$placeho = _convertProps.placeholderStyle,\n        placeholderStyle = _convertProps$placeho === void 0 ? {} : _convertProps$placeho,\n        placeholderClassName = _convertProps.placeholderClassName,\n        fluid = _convertProps.fluid,\n        fixed = _convertProps.fixed,\n        backgroundColor = _convertProps.backgroundColor,\n        durationFadeIn = _convertProps.durationFadeIn,\n        Tag = _convertProps.Tag,\n        itemProp = _convertProps.itemProp,\n        loading = _convertProps.loading,\n        draggable = _convertProps.draggable;\n\n    var shouldReveal = this.state.fadeIn === false || this.state.imgLoaded;\n    var shouldFadeIn = this.state.fadeIn === true && !this.state.imgCached;\n    var imageStyle = (0, _extends2.default)({\n      opacity: shouldReveal ? 1 : 0,\n      transition: shouldFadeIn ? \"opacity \" + durationFadeIn + \"ms\" : \"none\"\n    }, imgStyle);\n    var bgColor = typeof backgroundColor === \"boolean\" ? \"lightgray\" : backgroundColor;\n    var delayHideStyle = {\n      transitionDelay: durationFadeIn + \"ms\"\n    };\n    var imagePlaceholderStyle = (0, _extends2.default)({\n      opacity: this.state.imgLoaded ? 0 : 1\n    }, shouldFadeIn && delayHideStyle, imgStyle, placeholderStyle);\n    var placeholderImageProps = {\n      title: title,\n      alt: !this.state.isVisible ? alt : \"\",\n      style: imagePlaceholderStyle,\n      className: placeholderClassName\n    };\n\n    if (fluid) {\n      var imageVariants = fluid;\n      var image = imageVariants[0];\n      return _react.default.createElement(Tag, {\n        className: (className ? className : \"\") + \" gatsby-image-wrapper\",\n        style: (0, _extends2.default)({\n          position: \"relative\",\n          overflow: \"hidden\"\n        }, style),\n        ref: this.handleRef,\n        key: \"fluid-\" + JSON.stringify(image.srcSet)\n      }, _react.default.createElement(Tag, {\n        style: {\n          width: \"100%\",\n          paddingBottom: 100 / image.aspectRatio + \"%\"\n        }\n      }), bgColor && _react.default.createElement(Tag, {\n        title: title,\n        style: (0, _extends2.default)({\n          backgroundColor: bgColor,\n          position: \"absolute\",\n          top: 0,\n          bottom: 0,\n          opacity: !this.state.imgLoaded ? 1 : 0,\n          right: 0,\n          left: 0\n        }, shouldFadeIn && delayHideStyle)\n      }), image.base64 && _react.default.createElement(Placeholder, {\n        src: image.base64,\n        spreadProps: placeholderImageProps,\n        imageVariants: imageVariants,\n        generateSources: generateBase64Sources\n      }), image.tracedSVG && _react.default.createElement(Placeholder, {\n        src: image.tracedSVG,\n        spreadProps: placeholderImageProps,\n        imageVariants: imageVariants,\n        generateSources: generateTracedSVGSources\n      }), this.state.isVisible && _react.default.createElement(\"picture\", null, generateImageSources(imageVariants), _react.default.createElement(Img, {\n        alt: alt,\n        title: title,\n        sizes: image.sizes,\n        src: image.src,\n        crossOrigin: this.props.crossOrigin,\n        srcSet: image.srcSet,\n        style: imageStyle,\n        ref: this.imageRef,\n        onLoad: this.handleImageLoaded,\n        onError: this.props.onError,\n        itemProp: itemProp,\n        loading: loading,\n        draggable: draggable\n      })), this.addNoScript && _react.default.createElement(\"noscript\", {\n        dangerouslySetInnerHTML: {\n          __html: noscriptImg((0, _extends2.default)({\n            alt: alt,\n            title: title,\n            loading: loading\n          }, image, {\n            imageVariants: imageVariants\n          }))\n        }\n      }));\n    }\n\n    if (fixed) {\n      var _imageVariants = fixed;\n      var _image = _imageVariants[0];\n      var divStyle = (0, _extends2.default)({\n        position: \"relative\",\n        overflow: \"hidden\",\n        display: \"inline-block\",\n        width: _image.width,\n        height: _image.height\n      }, style);\n\n      if (style.display === \"inherit\") {\n        delete divStyle.display;\n      }\n\n      return _react.default.createElement(Tag, {\n        className: (className ? className : \"\") + \" gatsby-image-wrapper\",\n        style: divStyle,\n        ref: this.handleRef,\n        key: \"fixed-\" + JSON.stringify(_image.srcSet)\n      }, bgColor && _react.default.createElement(Tag, {\n        title: title,\n        style: (0, _extends2.default)({\n          backgroundColor: bgColor,\n          width: _image.width,\n          opacity: !this.state.imgLoaded ? 1 : 0,\n          height: _image.height\n        }, shouldFadeIn && delayHideStyle)\n      }), _image.base64 && _react.default.createElement(Placeholder, {\n        src: _image.base64,\n        spreadProps: placeholderImageProps,\n        imageVariants: _imageVariants,\n        generateSources: generateBase64Sources\n      }), _image.tracedSVG && _react.default.createElement(Placeholder, {\n        src: _image.tracedSVG,\n        spreadProps: placeholderImageProps,\n        imageVariants: _imageVariants,\n        generateSources: generateTracedSVGSources\n      }), this.state.isVisible && _react.default.createElement(\"picture\", null, generateImageSources(_imageVariants), _react.default.createElement(Img, {\n        alt: alt,\n        title: title,\n        width: _image.width,\n        height: _image.height,\n        sizes: _image.sizes,\n        src: _image.src,\n        crossOrigin: this.props.crossOrigin,\n        srcSet: _image.srcSet,\n        style: imageStyle,\n        ref: this.imageRef,\n        onLoad: this.handleImageLoaded,\n        onError: this.props.onError,\n        itemProp: itemProp,\n        loading: loading,\n        draggable: draggable\n      })), this.addNoScript && _react.default.createElement(\"noscript\", {\n        dangerouslySetInnerHTML: {\n          __html: noscriptImg((0, _extends2.default)({\n            alt: alt,\n            title: title,\n            loading: loading\n          }, _image, {\n            imageVariants: _imageVariants\n          }))\n        }\n      }));\n    }\n\n    return null;\n  };\n\n  return Image;\n}(_react.default.Component);\n\nImage.defaultProps = {\n  fadeIn: true,\n  durationFadeIn: 500,\n  alt: \"\",\n  Tag: \"div\",\n  // We set it to `lazy` by default because it's best to default to a performant\n  // setting and let the user \"opt out\" to `eager`\n  loading: \"lazy\"\n};\n\nvar fixedObject = _propTypes.default.shape({\n  width: _propTypes.default.number.isRequired,\n  height: _propTypes.default.number.isRequired,\n  src: _propTypes.default.string.isRequired,\n  srcSet: _propTypes.default.string.isRequired,\n  base64: _propTypes.default.string,\n  tracedSVG: _propTypes.default.string,\n  srcWebp: _propTypes.default.string,\n  srcSetWebp: _propTypes.default.string,\n  media: _propTypes.default.string\n});\n\nvar fluidObject = _propTypes.default.shape({\n  aspectRatio: _propTypes.default.number.isRequired,\n  src: _propTypes.default.string.isRequired,\n  srcSet: _propTypes.default.string.isRequired,\n  sizes: _propTypes.default.string.isRequired,\n  base64: _propTypes.default.string,\n  tracedSVG: _propTypes.default.string,\n  srcWebp: _propTypes.default.string,\n  srcSetWebp: _propTypes.default.string,\n  media: _propTypes.default.string\n});\n\nImage.propTypes = {\n  resolutions: fixedObject,\n  sizes: fluidObject,\n  fixed: _propTypes.default.oneOfType([fixedObject, _propTypes.default.arrayOf(fixedObject)]),\n  fluid: _propTypes.default.oneOfType([fluidObject, _propTypes.default.arrayOf(fluidObject)]),\n  fadeIn: _propTypes.default.bool,\n  durationFadeIn: _propTypes.default.number,\n  title: _propTypes.default.string,\n  alt: _propTypes.default.string,\n  className: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]),\n  // Support Glamor's css prop.\n  critical: _propTypes.default.bool,\n  crossOrigin: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),\n  style: _propTypes.default.object,\n  imgStyle: _propTypes.default.object,\n  placeholderStyle: _propTypes.default.object,\n  placeholderClassName: _propTypes.default.string,\n  backgroundColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),\n  onLoad: _propTypes.default.func,\n  onError: _propTypes.default.func,\n  onStartLoad: _propTypes.default.func,\n  Tag: _propTypes.default.string,\n  itemProp: _propTypes.default.string,\n  loading: _propTypes.default.oneOf([\"auto\", \"lazy\", \"eager\"]),\n  draggable: _propTypes.default.bool\n};\nvar _default = Image;\nexports.default = _default;","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x3, _x4, _x5) { var _again = true; _function: while (_again) { var object = _x3, property = _x4, receiver = _x5; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x3 = parent; _x4 = property; _x5 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _baseStyles = require('./baseStyles');\n\nvar _baseStyles2 = _interopRequireDefault(_baseStyles);\n\nvar _BurgerIcon = require('./BurgerIcon');\n\nvar _BurgerIcon2 = _interopRequireDefault(_BurgerIcon);\n\nvar _CrossIcon = require('./CrossIcon');\n\nvar _CrossIcon2 = _interopRequireDefault(_CrossIcon);\n\nexports['default'] = function (styles) {\n  var Menu = (function (_Component) {\n    _inherits(Menu, _Component);\n\n    function Menu(props) {\n      _classCallCheck(this, Menu);\n\n      _get(Object.getPrototypeOf(Menu.prototype), 'constructor', this).call(this, props);\n      this.state = {\n        isOpen: false\n      };\n    }\n\n    _createClass(Menu, [{\n      key: 'toggleMenu',\n      value: function toggleMenu() {\n        var _this = this;\n\n        var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n        var isOpen = options.isOpen;\n        var noStateChange = options.noStateChange;\n\n        var newState = {\n          isOpen: typeof isOpen !== 'undefined' ? isOpen : !this.state.isOpen\n        };\n\n        this.applyWrapperStyles();\n\n        this.setState(newState, function () {\n          !noStateChange && _this.props.onStateChange(newState);\n\n          // Timeout ensures wrappers are cleared after animation finishes.\n          _this.timeoutId && clearTimeout(_this.timeoutId);\n          _this.timeoutId = setTimeout(function () {\n            _this.timeoutId = null;\n            if (!newState.isOpen) {\n              _this.applyWrapperStyles(false);\n            }\n          }, 500);\n        });\n      }\n\n      // Applies component-specific styles to external wrapper elements.\n    }, {\n      key: 'applyWrapperStyles',\n      value: function applyWrapperStyles() {\n        var set = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\n        if (this.props.bodyClassName) {\n          var body = document.querySelector('body');\n          body.classList[set ? 'add' : 'remove'](this.props.bodyClassName);\n        }\n\n        if (styles.pageWrap && this.props.pageWrapId) {\n          this.handleExternalWrapper(this.props.pageWrapId, styles.pageWrap, set);\n        }\n\n        if (styles.outerContainer && this.props.outerContainerId) {\n          this.handleExternalWrapper(this.props.outerContainerId, styles.outerContainer, set);\n        }\n      }\n\n      // Sets or unsets styles on DOM elements outside the menu component.\n      // This is necessary for correct page interaction with some of the menus.\n      // Throws and returns if the required external elements don't exist,\n      // which means any external page animations won't be applied.\n    }, {\n      key: 'handleExternalWrapper',\n      value: function handleExternalWrapper(id, wrapperStyles, set) {\n        var html = document.querySelector('html');\n        var body = document.querySelector('body');\n        var wrapper = document.getElementById(id);\n\n        if (!wrapper) {\n          console.error(\"Element with ID '\" + id + \"' not found\");\n          return;\n        }\n\n        var builtStyles = this.getStyle(wrapperStyles);\n\n        for (var prop in builtStyles) {\n          if (builtStyles.hasOwnProperty(prop)) {\n            wrapper.style[prop] = set ? builtStyles[prop] : '';\n          }\n        }\n\n        // Prevent any horizontal scroll.\n        [html, body].forEach(function (element) {\n          element.style['overflow-x'] = set ? 'hidden' : '';\n        });\n      }\n\n      // Builds styles incrementally for a given element.\n    }, {\n      key: 'getStyles',\n      value: function getStyles(el, index, inline) {\n        var propName = 'bm' + el.replace(el.charAt(0), el.charAt(0).toUpperCase());\n\n        // Set base styles.\n        var output = _baseStyles2['default'][el] ? this.getStyle(_baseStyles2['default'][el]) : {};\n\n        // Add animation-specific styles.\n        if (styles[el]) {\n          output = _extends({}, output, this.getStyle(styles[el], index + 1));\n        }\n\n        // Add custom styles.\n        if (this.props.styles[propName]) {\n          output = _extends({}, output, this.props.styles[propName]);\n        }\n\n        // Add element inline styles.\n        if (inline) {\n          output = _extends({}, output, inline);\n        }\n\n        return output;\n      }\n    }, {\n      key: 'getStyle',\n      value: function getStyle(style, index) {\n        var width = this.props.width;\n\n        var formattedWidth = typeof width !== 'string' ? width + 'px' : width;\n        return style(this.state.isOpen, formattedWidth, this.props.right, index);\n      }\n    }, {\n      key: 'listenForClose',\n      value: function listenForClose(e) {\n        e = e || window.event;\n\n        if (this.state.isOpen && (e.key === 'Escape' || e.keyCode === 27)) {\n          this.toggleMenu();\n        }\n      }\n    }, {\n      key: 'shouldDisableOverlayClick',\n      value: function shouldDisableOverlayClick() {\n        if (typeof this.props.disableOverlayClick === 'function') {\n          return this.props.disableOverlayClick();\n        } else {\n          return this.props.disableOverlayClick;\n        }\n      }\n    }, {\n      key: 'componentWillMount',\n      value: function componentWillMount() {\n        if (!styles) {\n          throw new Error('No styles supplied');\n        }\n      }\n    }, {\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        // Bind ESC key handler (unless disabled or custom function supplied).\n        if (this.props.customOnKeyDown) {\n          window.onkeydown = this.props.customOnKeyDown;\n        } else if (!this.props.disableCloseOnEsc) {\n          window.onkeydown = this.listenForClose.bind(this);\n        }\n\n        // Allow initial open state to be set by props.\n        if (this.props.isOpen) {\n          this.toggleMenu({ isOpen: true, noStateChange: true });\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        window.onkeydown = null;\n\n        this.applyWrapperStyles(false);\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate() {\n        var _this2 = this;\n\n        if (styles.svg) {\n          (function () {\n            var morphShape = _reactDom2['default'].findDOMNode(_this2, 'bm-morph-shape');\n            var path = styles.svg.lib(morphShape).select('path');\n\n            if (_this2.state.isOpen) {\n              // Animate SVG path.\n              styles.svg.animate(path);\n            } else {\n              // Reset path (timeout ensures animation happens off screen).\n              setTimeout(function () {\n                path.attr('d', styles.svg.pathInitial);\n              }, 300);\n            }\n          })();\n        }\n      }\n    }, {\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(nextProps) {\n        if (typeof nextProps.isOpen !== 'undefined' && nextProps.isOpen !== this.state.isOpen) {\n          this.toggleMenu();\n        }\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this3 = this;\n\n        return _react2['default'].createElement(\n          'div',\n          null,\n          !this.props.noOverlay && _react2['default'].createElement('div', {\n            className: ('bm-overlay ' + this.props.overlayClassName).trim(),\n            onClick: function () {\n              return !_this3.shouldDisableOverlayClick() && _this3.toggleMenu();\n            },\n            style: this.getStyles('overlay')\n          }),\n          _react2['default'].createElement(\n            'div',\n            {\n              id: this.props.id,\n              className: ('bm-menu-wrap ' + this.props.className).trim(),\n              style: this.getStyles('menuWrap')\n            },\n            styles.svg && _react2['default'].createElement(\n              'div',\n              {\n                className: ('bm-morph-shape ' + this.props.morphShapeClassName).trim(),\n                style: this.getStyles('morphShape')\n              },\n              _react2['default'].createElement(\n                'svg',\n                {\n                  width: '100%',\n                  height: '100%',\n                  viewBox: '0 0 100 800',\n                  preserveAspectRatio: 'none'\n                },\n                _react2['default'].createElement('path', { d: styles.svg.pathInitial })\n              )\n            ),\n            _react2['default'].createElement(\n              'div',\n              {\n                className: ('bm-menu ' + this.props.menuClassName).trim(),\n                style: this.getStyles('menu')\n              },\n              _react2['default'].createElement(\n                'nav',\n                {\n                  className: ('bm-item-list ' + this.props.itemListClassName).trim(),\n                  style: this.getStyles('itemList')\n                },\n                _react2['default'].Children.map(this.props.children, function (item, index) {\n                  if (item) {\n                    var classList = ['bm-item', _this3.props.itemClassName, item.props.className].filter(function (className) {\n                      return !!className;\n                    }).join(' ');\n                    var extraProps = {\n                      key: index,\n                      className: classList,\n                      style: _this3.getStyles('item', index, item.props.style)\n                    };\n                    return _react2['default'].cloneElement(item, extraProps);\n                  }\n                })\n              )\n            ),\n            this.props.customCrossIcon !== false && _react2['default'].createElement(\n              'div',\n              { style: this.getStyles('closeButton') },\n              _react2['default'].createElement(_CrossIcon2['default'], {\n                onClick: function () {\n                  return _this3.toggleMenu();\n                },\n                styles: this.props.styles,\n                customIcon: this.props.customCrossIcon,\n                className: this.props.crossButtonClassName,\n                crossClassName: this.props.crossClassName\n              })\n            )\n          ),\n          this.props.customBurgerIcon !== false && _react2['default'].createElement(\n            'div',\n            { style: this.getStyles('burgerIcon') },\n            _react2['default'].createElement(_BurgerIcon2['default'], {\n              onClick: function () {\n                return _this3.toggleMenu();\n              },\n              styles: this.props.styles,\n              customIcon: this.props.customBurgerIcon,\n              className: this.props.burgerButtonClassName,\n              barClassName: this.props.burgerBarClassName\n            })\n          )\n        );\n      }\n    }]);\n\n    return Menu;\n  })(_react.Component);\n\n  Menu.propTypes = {\n    bodyClassName: _propTypes2['default'].string,\n    burgerBarClassName: _propTypes2['default'].string,\n    burgerButtonClassName: _propTypes2['default'].string,\n    crossButtonClassName: _propTypes2['default'].string,\n    crossClassName: _propTypes2['default'].string,\n    customBurgerIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    customCrossIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    customOnKeyDown: _propTypes2['default'].func,\n    disableCloseOnEsc: _propTypes2['default'].bool,\n    disableOverlayClick: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].func]),\n    id: _propTypes2['default'].string,\n    isOpen: _propTypes2['default'].bool,\n    itemClassName: _propTypes2['default'].string,\n    itemListClassName: _propTypes2['default'].string,\n    menuClassName: _propTypes2['default'].string,\n    morphShapeClassName: _propTypes2['default'].string,\n    noOverlay: _propTypes2['default'].bool,\n    onStateChange: _propTypes2['default'].func,\n    outerContainerId: styles && styles.outerContainer ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    overlayClassName: _propTypes2['default'].string,\n    pageWrapId: styles && styles.pageWrap ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    right: _propTypes2['default'].bool,\n    styles: _propTypes2['default'].object,\n    width: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string])\n  };\n\n  Menu.defaultProps = {\n    bodyClassName: '',\n    burgerBarClassName: '',\n    burgerButtonClassName: '',\n    className: '',\n    crossButtonClassName: '',\n    crossClassName: '',\n    disableCloseOnEsc: false,\n    id: '',\n    itemClassName: '',\n    itemListClassName: '',\n    menuClassName: '',\n    morphShapeClassName: '',\n    noOverlay: false,\n    onStateChange: function onStateChange() {},\n    outerContainerId: '',\n    overlayClassName: '',\n    pageWrapId: '',\n    styles: {},\n    width: 300\n  };\n\n  return Menu;\n};\n\nmodule.exports = exports['default'];","'use strict';\n// https://github.com/tc39/Array.prototype.includes\nvar $export = require('./_export');\nvar $includes = require('./_array-includes')(true);\n\n$export($export.P, 'Array', {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nrequire('./_add-to-unscopables')('includes');\n","// 21.1.3.7 String.prototype.includes(searchString, position = 0)\n'use strict';\nvar $export = require('./_export');\nvar context = require('./_string-context');\nvar INCLUDES = 'includes';\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~context(this, searchString, INCLUDES)\n      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = {\n  slide: require('./menus/slide'),\n  stack: require('./menus/stack'),\n  elastic: require('./menus/elastic'),\n  bubble: require('./menus/bubble'),\n  push: require('./menus/push'),\n  pushRotate: require('./menus/pushRotate'),\n  scaleDown: require('./menus/scaleDown'),\n  scaleRotate: require('./menus/scaleRotate'),\n  fallDown: require('./menus/fallDown'),\n  reveal: require('./menus/reveal')\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nexports['default'] = function () {\n  var Snap = undefined;\n  try {\n    Snap = require('snapsvg-cjs');\n  } finally {\n    return Snap;\n  }\n};\n\nmodule.exports = exports['default'];","// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n","var MATCH = require('./_wks')('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar styles = {\n  overlay: function overlay(isOpen) {\n    return {\n      position: 'fixed',\n      zIndex: 1000,\n      width: '100%',\n      height: '100%',\n      background: 'rgba(0, 0, 0, 0.3)',\n      opacity: isOpen ? 1 : 0,\n      MozTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      OTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transition: isOpen ? 'opacity 0.3s' : 'opacity 0.3s, transform 0s 0.3s'\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      zIndex: 1100,\n      width: width,\n      height: '100%',\n      MozTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  menu: function menu() {\n    return {\n      height: '100%',\n      boxSizing: 'border-box',\n      overflow: 'auto'\n    };\n  },\n\n  itemList: function itemList() {\n    return {\n      height: '100%'\n    };\n  },\n\n  item: function item() {\n    return {\n      display: 'block',\n      outline: 'none'\n    };\n  }\n};\n\nexports['default'] = styles;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar BurgerIcon = (function (_Component) {\n  _inherits(BurgerIcon, _Component);\n\n  function BurgerIcon(props) {\n    _classCallCheck(this, BurgerIcon);\n\n    _get(Object.getPrototypeOf(BurgerIcon.prototype), 'constructor', this).call(this, props);\n    this.state = {\n      hover: false\n    };\n  }\n\n  _createClass(BurgerIcon, [{\n    key: 'getLineStyle',\n    value: function getLineStyle(index) {\n      return {\n        position: 'absolute',\n        height: '20%',\n        left: 0,\n        right: 0,\n        top: 20 * (index * 2) + '%',\n        opacity: this.state.hover ? 0.6 : 1\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var icon = undefined;\n      var buttonStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        opacity: 0,\n        fontSize: 8,\n        cursor: 'pointer'\n      };\n\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: 'bm-icon',\n          style: _extends({ width: '100%', height: '100%' }, this.props.styles.bmIcon)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement(\n          'span',\n          null,\n          [0, 1, 2].map(function (bar) {\n            return _react2['default'].createElement('span', {\n              key: bar,\n              className: ('bm-burger-bars ' + _this.props.barClassName).trim(),\n              style: _extends({}, _this.getLineStyle(bar), _this.props.styles.bmBurgerBars)\n            });\n          })\n        );\n      }\n\n      return _react2['default'].createElement(\n        'div',\n        {\n          className: ('bm-burger-button ' + this.props.className).trim(),\n          style: _extends({ zIndex: 1000 }, this.props.styles.bmBurgerButton)\n        },\n        icon,\n        _react2['default'].createElement(\n          'button',\n          {\n            onClick: this.props.onClick,\n            onMouseOver: function () {\n              return _this.setState({ hover: true });\n            },\n            onMouseOut: function () {\n              return _this.setState({ hover: false });\n            },\n            style: buttonStyle\n          },\n          'Open Menu'\n        )\n      );\n    }\n  }]);\n\n  return BurgerIcon;\n})(_react.Component);\n\nexports['default'] = BurgerIcon;\n\nBurgerIcon.propTypes = {\n  barClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  styles: _propTypes2['default'].object\n};\n\nBurgerIcon.defaultProps = {\n  barClassName: '',\n  className: '',\n  styles: {}\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar CrossIcon = (function (_Component) {\n  _inherits(CrossIcon, _Component);\n\n  function CrossIcon() {\n    _classCallCheck(this, CrossIcon);\n\n    _get(Object.getPrototypeOf(CrossIcon.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(CrossIcon, [{\n    key: 'getCrossStyle',\n    value: function getCrossStyle(type) {\n      return {\n        position: 'absolute',\n        width: 3,\n        height: 14,\n        transform: type === 'before' ? 'rotate(45deg)' : 'rotate(-45deg)'\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var icon;\n      var buttonWrapperStyle = {\n        position: 'absolute',\n        width: 24,\n        height: 24,\n        right: 8,\n        top: 8\n      };\n      var buttonStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        fontSize: 0,\n        background: 'transparent',\n        color: 'transparent',\n        outline: 'none',\n        cursor: 'pointer'\n      };\n\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: 'bm-cross',\n          style: _extends({ width: '100%', height: '100%' }, this.props.styles.bmCross)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement(\n          'span',\n          { style: { position: 'absolute', top: '6px', right: '14px' } },\n          ['before', 'after'].map(function (type, i) {\n            return _react2['default'].createElement('span', {\n              key: i,\n              className: ('bm-cross ' + _this.props.crossClassName).trim(),\n              style: _extends({}, _this.getCrossStyle(type), _this.props.styles.bmCross)\n            });\n          })\n        );\n      }\n\n      return _react2['default'].createElement(\n        'div',\n        {\n          className: ('bm-cross-button ' + this.props.className).trim(),\n          style: _extends({}, buttonWrapperStyle, this.props.styles.bmCrossButton)\n        },\n        icon,\n        _react2['default'].createElement(\n          'button',\n          { onClick: this.props.onClick, style: buttonStyle },\n          'Close Menu'\n        )\n      );\n    }\n  }]);\n\n  return CrossIcon;\n})(_react.Component);\n\nexports['default'] = CrossIcon;\n\nCrossIcon.propTypes = {\n  crossClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  styles: _propTypes2['default'].object\n};\n\nCrossIcon.defaultProps = {\n  crossClassName: '',\n  className: '',\n  styles: {}\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0.4s cubic-bezier(0.7, 0, 0.3, 1)'\n    };\n  },\n\n  item: function item(isOpen, width, right, nthChild) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      OTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      transform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0s 0.2s cubic-bezier(0.7, 0, 0.3, 1)'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _snapsvgImporter = require('../snapsvgImporter');\n\nvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  svg: {\n    lib: _snapsvgImporter2['default'],\n    pathInitial: 'M-1,0h101c0,0-97.833,153.603-97.833,396.167C2.167,627.579,100,800,100,800H-1V0z',\n    pathOpen: 'M-1,0h101c0,0,0-1,0,395c0,404,0,405,0,405H-1V0z',\n    animate: function animate(path) {\n      path.animate({ path: this.pathOpen }, 400, window.mina.easeinout);\n    }\n  },\n\n  morphShape: function morphShape(isOpen, width, right) {\n    return {\n      position: 'absolute',\n      width: 120,\n      height: '100%',\n      right: right ? 'inherit' : 0,\n      left: right ? 0 : 'inherit',\n      MozTransform: right ? 'rotateY(180deg)' : '',\n      MsTransform: right ? 'rotateY(180deg)' : '',\n      OTransform: right ? 'rotateY(180deg)' : '',\n      WebkitTransform: right ? 'rotateY(180deg)' : '',\n      transform: right ? 'rotateY(180deg)' : ''\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.3s'\n    };\n  },\n\n  menu: function menu(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      width: 180,\n      whiteSpace: 'nowrap',\n      boxSizing: 'border-box',\n      overflow: 'visible'\n    };\n  },\n\n  itemList: function itemList(isOpen, width, right) {\n    if (right) {\n      return {\n        position: 'relative',\n        left: '-110px',\n        width: '170%',\n        overflow: 'auto'\n      };\n    }\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      transition: isOpen ? 'all 0.3s' : 'all 0.3s 0.1s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","window.eve = require('eve')\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar mina = (function (eve) {\n    var animations = {},\n    requestAnimFrame = window.requestAnimationFrame       ||\n                       window.webkitRequestAnimationFrame ||\n                       window.mozRequestAnimationFrame    ||\n                       window.oRequestAnimationFrame      ||\n                       window.msRequestAnimationFrame     ||\n                       function (callback) {\n                           setTimeout(callback, 16, new Date().getTime());\n                           return true;\n                       },\n    requestID,\n    isArray = Array.isArray || function (a) {\n        return a instanceof Array ||\n            Object.prototype.toString.call(a) == \"[object Array]\";\n    },\n    idgen = 0,\n    idprefix = \"M\" + (+new Date).toString(36),\n    ID = function () {\n        return idprefix + (idgen++).toString(36);\n    },\n    diff = function (a, b, A, B) {\n        if (isArray(a)) {\n            res = [];\n            for (var i = 0, ii = a.length; i < ii; i++) {\n                res[i] = diff(a[i], b, A[i], B);\n            }\n            return res;\n        }\n        var dif = (A - a) / (B - b);\n        return function (bb) {\n            return a + dif * (bb - b);\n        };\n    },\n    timer = Date.now || function () {\n        return +new Date;\n    },\n    sta = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.s;\n        }\n        var ds = a.s - val;\n        a.b += a.dur * ds;\n        a.B += a.dur * ds;\n        a.s = val;\n    },\n    speed = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.spd;\n        }\n        a.spd = val;\n    },\n    duration = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.dur;\n        }\n        a.s = a.s * val / a.dur;\n        a.dur = val;\n    },\n    stopit = function () {\n        var a = this;\n        delete animations[a.id];\n        a.update();\n        eve(\"mina.stop.\" + a.id, a);\n    },\n    pause = function () {\n        var a = this;\n        if (a.pdif) {\n            return;\n        }\n        delete animations[a.id];\n        a.update();\n        a.pdif = a.get() - a.b;\n    },\n    resume = function () {\n        var a = this;\n        if (!a.pdif) {\n            return;\n        }\n        a.b = a.get() - a.pdif;\n        delete a.pdif;\n        animations[a.id] = a;\n        frame();\n    },\n    update = function () {\n        var a = this,\n            res;\n        if (isArray(a.start)) {\n            res = [];\n            for (var j = 0, jj = a.start.length; j < jj; j++) {\n                res[j] = +a.start[j] +\n                    (a.end[j] - a.start[j]) * a.easing(a.s);\n            }\n        } else {\n            res = +a.start + (a.end - a.start) * a.easing(a.s);\n        }\n        a.set(res);\n    },\n    frame = function (timeStamp) {\n        // Manual invokation?\n        if (!timeStamp) {\n            // Frame loop stopped?\n            if (!requestID) {\n                // Start frame loop...\n                requestID = requestAnimFrame(frame);\n            }\n            return;\n        }\n        var len = 0;\n        for (var i in animations) if (animations.hasOwnProperty(i)) {\n            var a = animations[i],\n                b = a.get(),\n                res;\n            len++;\n            a.s = (b - a.b) / (a.dur / a.spd);\n            if (a.s >= 1) {\n                delete animations[i];\n                a.s = 1;\n                len--;\n                (function (a) {\n                    setTimeout(function () {\n                        eve(\"mina.finish.\" + a.id, a);\n                    });\n                }(a));\n            }\n            a.update();\n        }\n        requestID = len ? requestAnimFrame(frame) : false;\n    },\n    /*\\\n     * mina\n     [ method ]\n     **\n     * Generic animation of numbers\n     **\n     - a (number) start _slave_ number\n     - A (number) end _slave_ number\n     - b (number) start _master_ number (start time in general case)\n     - B (number) end _master_ number (end time in general case)\n     - get (function) getter of _master_ number (see @mina.time)\n     - set (function) setter of _slave_ number\n     - easing (function) #optional easing function, default is @mina.linear\n     = (object) animation descriptor\n     o {\n     o         id (string) animation id,\n     o         start (number) start _slave_ number,\n     o         end (number) end _slave_ number,\n     o         b (number) start _master_ number,\n     o         s (number) animation status (0..1),\n     o         dur (number) animation duration,\n     o         spd (number) animation speed,\n     o         get (function) getter of _master_ number (see @mina.time),\n     o         set (function) setter of _slave_ number,\n     o         easing (function) easing function, default is @mina.linear,\n     o         status (function) status getter/setter,\n     o         speed (function) speed getter/setter,\n     o         duration (function) duration getter/setter,\n     o         stop (function) animation stopper\n     o         pause (function) pauses the animation\n     o         resume (function) resumes the animation\n     o         update (function) calles setter with the right value of the animation\n     o }\n    \\*/\n    mina = function (a, A, b, B, get, set, easing) {\n        var anim = {\n            id: ID(),\n            start: a,\n            end: A,\n            b: b,\n            s: 0,\n            dur: B - b,\n            spd: 1,\n            get: get,\n            set: set,\n            easing: easing || mina.linear,\n            status: sta,\n            speed: speed,\n            duration: duration,\n            stop: stopit,\n            pause: pause,\n            resume: resume,\n            update: update\n        };\n        animations[anim.id] = anim;\n        var len = 0, i;\n        for (i in animations) if (animations.hasOwnProperty(i)) {\n            len++;\n            if (len == 2) {\n                break;\n            }\n        }\n        len == 1 && frame();\n        return anim;\n    };\n    /*\\\n     * mina.time\n     [ method ]\n     **\n     * Returns the current time. Equivalent to:\n     | function () {\n     |     return (new Date).getTime();\n     | }\n    \\*/\n    mina.time = timer;\n    /*\\\n     * mina.getById\n     [ method ]\n     **\n     * Returns an animation by its id\n     - id (string) animation's id\n     = (object) See @mina\n    \\*/\n    mina.getById = function (id) {\n        return animations[id] || null;\n    };\n\n    /*\\\n     * mina.linear\n     [ method ]\n     **\n     * Default linear easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.linear = function (n) {\n        return n;\n    };\n    /*\\\n     * mina.easeout\n     [ method ]\n     **\n     * Easeout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeout = function (n) {\n        return Math.pow(n, 1.7);\n    };\n    /*\\\n     * mina.easein\n     [ method ]\n     **\n     * Easein easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easein = function (n) {\n        return Math.pow(n, .48);\n    };\n    /*\\\n     * mina.easeinout\n     [ method ]\n     **\n     * Easeinout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeinout = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        if (n == 0) {\n            return 0;\n        }\n        var q = .48 - n / 1.04,\n            Q = Math.sqrt(.1734 + q * q),\n            x = Q - q,\n            X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n            y = -Q - q,\n            Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n            t = X + Y + .5;\n        return (1 - t) * 3 * t * t + t * t * t;\n    };\n    /*\\\n     * mina.backin\n     [ method ]\n     **\n     * Backin easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backin = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        var s = 1.70158;\n        return n * n * ((s + 1) * n - s);\n    };\n    /*\\\n     * mina.backout\n     [ method ]\n     **\n     * Backout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backout = function (n) {\n        if (n == 0) {\n            return 0;\n        }\n        n = n - 1;\n        var s = 1.70158;\n        return n * n * ((s + 1) * n + s) + 1;\n    };\n    /*\\\n     * mina.elastic\n     [ method ]\n     **\n     * Elastic easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.elastic = function (n) {\n        if (n == !!n) {\n            return n;\n        }\n        return Math.pow(2, -10 * n) * Math.sin((n - .075) *\n            (2 * Math.PI) / .3) + 1;\n    };\n    /*\\\n     * mina.bounce\n     [ method ]\n     **\n     * Bounce easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.bounce = function (n) {\n        var s = 7.5625,\n            p = 2.75,\n            l;\n        if (n < 1 / p) {\n            l = s * n * n;\n        } else {\n            if (n < 2 / p) {\n                n -= 1.5 / p;\n                l = s * n * n + .75;\n            } else {\n                if (n < 2.5 / p) {\n                    n -= 2.25 / p;\n                    l = s * n * n + .9375;\n                } else {\n                    n -= 2.625 / p;\n                    l = s * n * n + .984375;\n                }\n            }\n        }\n        return l;\n    };\n    window.mina = mina;\n    return mina;\n})(typeof eve == \"undefined\" ? function () {} : eve);\n\n// Copyright (c) 2013 - 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar Snap = (function(root) {\nSnap.version = \"0.5.1\";\n/*\\\n * Snap\n [ method ]\n **\n * Creates a drawing surface or wraps existing SVG element.\n **\n - width (number|string) width of surface\n - height (number|string) height of surface\n * or\n - DOM (SVGElement) element to be wrapped into Snap structure\n * or\n - array (array) array of elements (will return set of elements)\n * or\n - query (string) CSS query selector\n = (object) @Element\n\\*/\nfunction Snap(w, h) {\n    if (w) {\n        if (w.nodeType) {\n            return wrap(w);\n        }\n        if (is(w, \"array\") && Snap.set) {\n            return Snap.set.apply(Snap, w);\n        }\n        if (w instanceof Element) {\n            return w;\n        }\n        if (h == null) {\n            try {\n                w = glob.doc.querySelector(String(w));\n                return wrap(w);\n            } catch (e) {\n                return null;\n            }\n        }\n    }\n    w = w == null ? \"100%\" : w;\n    h = h == null ? \"100%\" : h;\n    return new Paper(w, h);\n}\nSnap.toString = function () {\n    return \"Snap v\" + this.version;\n};\nSnap._ = {};\nvar glob = {\n    win: root.window,\n    doc: root.window.document\n};\nSnap._.glob = glob;\nvar has = \"hasOwnProperty\",\n    Str = String,\n    toFloat = parseFloat,\n    toInt = parseInt,\n    math = Math,\n    mmax = math.max,\n    mmin = math.min,\n    abs = math.abs,\n    pow = math.pow,\n    PI = math.PI,\n    round = math.round,\n    E = \"\",\n    S = \" \",\n    objectToString = Object.prototype.toString,\n    ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n    bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n    separator = Snap._.separator = /[,\\s]+/,\n    whitespace = /[\\s]/g,\n    commaSpaces = /[\\s]*,[\\s]*/,\n    hsrg = {hs: 1, rg: 1},\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\s]*,?[\\s]*/ig,\n    idgen = 0,\n    idprefix = \"S\" + (+new Date).toString(36),\n    ID = function (el) {\n        return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n    },\n    xlink = \"http://www.w3.org/1999/xlink\",\n    xmlns = \"http://www.w3.org/2000/svg\",\n    hub = {},\n    /*\\\n     * Snap.url\n     [ method ]\n     **\n     * Wraps path into `\"url('<path>')\"`.\n     - value (string) path\n     = (string) wrapped path\n    \\*/\n    URL = Snap.url = function (url) {\n        return \"url('#\" + url + \"')\";\n    };\n\nfunction $(el, attr) {\n    if (attr) {\n        if (el == \"#text\") {\n            el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (el == \"#comment\") {\n            el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (typeof el == \"string\") {\n            el = $(el);\n        }\n        if (typeof attr == \"string\") {\n            if (el.nodeType == 1) {\n                if (attr.substring(0, 6) == \"xlink:\") {\n                    return el.getAttributeNS(xlink, attr.substring(6));\n                }\n                if (attr.substring(0, 4) == \"xml:\") {\n                    return el.getAttributeNS(xmlns, attr.substring(4));\n                }\n                return el.getAttribute(attr);\n            } else if (attr == \"text\") {\n                return el.nodeValue;\n            } else {\n                return null;\n            }\n        }\n        if (el.nodeType == 1) {\n            for (var key in attr) if (attr[has](key)) {\n                var val = Str(attr[key]);\n                if (val) {\n                    if (key.substring(0, 6) == \"xlink:\") {\n                        el.setAttributeNS(xlink, key.substring(6), val);\n                    } else if (key.substring(0, 4) == \"xml:\") {\n                        el.setAttributeNS(xmlns, key.substring(4), val);\n                    } else {\n                        el.setAttribute(key, val);\n                    }\n                } else {\n                    el.removeAttribute(key);\n                }\n            }\n        } else if (\"text\" in attr) {\n            el.nodeValue = attr.text;\n        }\n    } else {\n        el = glob.doc.createElementNS(xmlns, el);\n    }\n    return el;\n}\nSnap._.$ = $;\nSnap._.id = ID;\nfunction getAttrs(el) {\n    var attrs = el.attributes,\n        name,\n        out = {};\n    for (var i = 0; i < attrs.length; i++) {\n        if (attrs[i].namespaceURI == xlink) {\n            name = \"xlink:\";\n        } else {\n            name = \"\";\n        }\n        name += attrs[i].name;\n        out[name] = attrs[i].textContent;\n    }\n    return out;\n}\nfunction is(o, type) {\n    type = Str.prototype.toLowerCase.call(type);\n    if (type == \"finite\") {\n        return isFinite(o);\n    }\n    if (type == \"array\" &&\n        (o instanceof Array || Array.isArray && Array.isArray(o))) {\n        return true;\n    }\n    return  type == \"null\" && o === null ||\n            type == typeof o && o !== null ||\n            type == \"object\" && o === Object(o) ||\n            objectToString.call(o).slice(8, -1).toLowerCase() == type;\n}\n/*\\\n * Snap.format\n [ method ]\n **\n * Replaces construction of type `{<name>}` to the corresponding argument\n **\n - token (string) string to format\n - json (object) object which properties are used as a replacement\n = (string) formatted string\n > Usage\n | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n |     x: 10,\n |     y: 20,\n |     dim: {\n |         width: 40,\n |         height: 50,\n |         \"negative width\": -40\n |     }\n | }));\n\\*/\nSnap.format = (function () {\n    var tokenRegex = /\\{([^\\}]+)\\}/g,\n        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n        replacer = function (all, key, obj) {\n            var res = obj;\n            key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n                name = name || quotedName;\n                if (res) {\n                    if (name in res) {\n                        res = res[name];\n                    }\n                    typeof res == \"function\" && isFunc && (res = res());\n                }\n            });\n            res = (res == null || res == obj ? all : res) + \"\";\n            return res;\n        };\n    return function (str, obj) {\n        return Str(str).replace(tokenRegex, function (all, key) {\n            return replacer(all, key, obj);\n        });\n    };\n})();\nfunction clone(obj) {\n    if (typeof obj == \"function\" || Object(obj) !== obj) {\n        return obj;\n    }\n    var res = new obj.constructor;\n    for (var key in obj) if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n    }\n    return res;\n}\nSnap._.clone = clone;\nfunction repush(array, item) {\n    for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n        return array.push(array.splice(i, 1)[0]);\n    }\n}\nfunction cacher(f, scope, postprocessor) {\n    function newf() {\n        var arg = Array.prototype.slice.call(arguments, 0),\n            args = arg.join(\"\\u2400\"),\n            cache = newf.cache = newf.cache || {},\n            count = newf.count = newf.count || [];\n        if (cache[has](args)) {\n            repush(count, args);\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n        count.length >= 1e3 && delete cache[count.shift()];\n        count.push(args);\n        cache[args] = f.apply(scope, arg);\n        return postprocessor ? postprocessor(cache[args]) : cache[args];\n    }\n    return newf;\n}\nSnap._.cacher = cacher;\nfunction angle(x1, y1, x2, y2, x3, y3) {\n    if (x3 == null) {\n        var x = x1 - x2,\n            y = y1 - y2;\n        if (!x && !y) {\n            return 0;\n        }\n        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n    } else {\n        return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n    }\n}\nfunction rad(deg) {\n    return deg % 360 * PI / 180;\n}\nfunction deg(rad) {\n    return rad * 180 / PI % 360;\n}\nfunction x_y() {\n    return this.x + S + this.y;\n}\nfunction x_y_w_h() {\n    return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n}\n\n/*\\\n * Snap.rad\n [ method ]\n **\n * Transform angle to radians\n - deg (number) angle in degrees\n = (number) angle in radians\n\\*/\nSnap.rad = rad;\n/*\\\n * Snap.deg\n [ method ]\n **\n * Transform angle to degrees\n - rad (number) angle in radians\n = (number) angle in degrees\n\\*/\nSnap.deg = deg;\n/*\\\n * Snap.sin\n [ method ]\n **\n * Equivalent to `Math.sin()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) sin\n\\*/\nSnap.sin = function (angle) {\n    return math.sin(Snap.rad(angle));\n};\n/*\\\n * Snap.tan\n [ method ]\n **\n * Equivalent to `Math.tan()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) tan\n\\*/\nSnap.tan = function (angle) {\n    return math.tan(Snap.rad(angle));\n};\n/*\\\n * Snap.cos\n [ method ]\n **\n * Equivalent to `Math.cos()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) cos\n\\*/\nSnap.cos = function (angle) {\n    return math.cos(Snap.rad(angle));\n};\n/*\\\n * Snap.asin\n [ method ]\n **\n * Equivalent to `Math.asin()` only works with degrees, not radians.\n - num (number) value\n = (number) asin in degrees\n\\*/\nSnap.asin = function (num) {\n    return Snap.deg(math.asin(num));\n};\n/*\\\n * Snap.acos\n [ method ]\n **\n * Equivalent to `Math.acos()` only works with degrees, not radians.\n - num (number) value\n = (number) acos in degrees\n\\*/\nSnap.acos = function (num) {\n    return Snap.deg(math.acos(num));\n};\n/*\\\n * Snap.atan\n [ method ]\n **\n * Equivalent to `Math.atan()` only works with degrees, not radians.\n - num (number) value\n = (number) atan in degrees\n\\*/\nSnap.atan = function (num) {\n    return Snap.deg(math.atan(num));\n};\n/*\\\n * Snap.atan2\n [ method ]\n **\n * Equivalent to `Math.atan2()` only works with degrees, not radians.\n - num (number) value\n = (number) atan2 in degrees\n\\*/\nSnap.atan2 = function (num) {\n    return Snap.deg(math.atan2(num));\n};\n/*\\\n * Snap.angle\n [ method ]\n **\n * Returns an angle between two or three points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n - x3 (number) #optional x coord of third point\n - y3 (number) #optional y coord of third point\n = (number) angle in degrees\n\\*/\nSnap.angle = angle;\n/*\\\n * Snap.len\n [ method ]\n **\n * Returns distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len = function (x1, y1, x2, y2) {\n    return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n};\n/*\\\n * Snap.len2\n [ method ]\n **\n * Returns squared distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len2 = function (x1, y1, x2, y2) {\n    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n};\n/*\\\n * Snap.closestPoint\n [ method ]\n **\n * Returns closest point to a given one on a given path.\n - path (Element) path element\n - x (number) x coord of a point\n - y (number) y coord of a point\n = (object) in format\n {\n    x (number) x coord of the point on the path\n    y (number) y coord of the point on the path\n    length (number) length of the path to the point\n    distance (number) distance from the given point to the path\n }\n\\*/\n// Copied from http://bl.ocks.org/mbostock/8027637\nSnap.closestPoint = function (path, x, y) {\n    function distance2(p) {\n        var dx = p.x - x,\n            dy = p.y - y;\n        return dx * dx + dy * dy;\n    }\n    var pathNode = path.node,\n        pathLength = pathNode.getTotalLength(),\n        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n        best,\n        bestLength,\n        bestDistance = Infinity;\n\n    // linear scan for coarse approximation\n    for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n        if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n            best = scan;\n            bestLength = scanLength;\n            bestDistance = scanDistance;\n        }\n    }\n\n    // binary search for precise estimate\n    precision *= .5;\n    while (precision > .5) {\n        var before,\n            after,\n            beforeLength,\n            afterLength,\n            beforeDistance,\n            afterDistance;\n        if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n            best = before;\n            bestLength = beforeLength;\n            bestDistance = beforeDistance;\n        } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n            best = after;\n            bestLength = afterLength;\n            bestDistance = afterDistance;\n        } else {\n            precision *= .5;\n        }\n    }\n\n    best = {\n        x: best.x,\n        y: best.y,\n        length: bestLength,\n        distance: Math.sqrt(bestDistance)\n    };\n    return best;\n}\n/*\\\n * Snap.is\n [ method ]\n **\n * Handy replacement for the `typeof` operator\n - o (…) any object or primitive\n - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n = (boolean) `true` if given value is of given type\n\\*/\nSnap.is = is;\n/*\\\n * Snap.snapTo\n [ method ]\n **\n * Snaps given value to given grid\n - values (array|number) given array of values or step of the grid\n - value (number) value to adjust\n - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n = (number) adjusted value\n\\*/\nSnap.snapTo = function (values, value, tolerance) {\n    tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n    if (is(values, \"array\")) {\n        var i = values.length;\n        while (i--) if (abs(values[i] - value) <= tolerance) {\n            return values[i];\n        }\n    } else {\n        values = +values;\n        var rem = value % values;\n        if (rem < tolerance) {\n            return value - rem;\n        }\n        if (rem > values - tolerance) {\n            return value - rem + values;\n        }\n    }\n    return value;\n};\n// Colour\n/*\\\n * Snap.getRGB\n [ method ]\n **\n * Parses color string as RGB object\n - color (string) color string in one of the following formats:\n # <ul>\n #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n # </ul>\n * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) true if string can't be parsed\n o }\n\\*/\nSnap.getRGB = cacher(function (colour) {\n    if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    if (colour == \"none\") {\n        return {r: -1, g: -1, b: -1, hex: \"none\", toString: rgbtoString};\n    }\n    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n    if (!colour) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    var res,\n        red,\n        green,\n        blue,\n        opacity,\n        t,\n        values,\n        rgb = colour.match(colourRegExp);\n    if (rgb) {\n        if (rgb[2]) {\n            blue = toInt(rgb[2].substring(5), 16);\n            green = toInt(rgb[2].substring(3, 5), 16);\n            red = toInt(rgb[2].substring(1, 3), 16);\n        }\n        if (rgb[3]) {\n            blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n            green = toInt((t = rgb[3].charAt(2)) + t, 16);\n            red = toInt((t = rgb[3].charAt(1)) + t, 16);\n        }\n        if (rgb[4]) {\n            values = rgb[4].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red *= 2.55);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green *= 2.55);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue *= 2.55);\n            rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        }\n        if (rgb[5]) {\n            values = rgb[5].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsb2rgb(red, green, blue, opacity);\n        }\n        if (rgb[6]) {\n            values = rgb[6].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsl2rgb(red, green, blue, opacity);\n        }\n        red = mmin(math.round(red), 255);\n        green = mmin(math.round(green), 255);\n        blue = mmin(math.round(blue), 255);\n        opacity = mmin(mmax(opacity, 0), 1);\n        rgb = {r: red, g: green, b: blue, toString: rgbtoString};\n        rgb.hex = \"#\" + (16777216 | blue | green << 8 | red << 16).toString(16).slice(1);\n        rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n        return rgb;\n    }\n    return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n}, Snap);\n/*\\\n * Snap.hsb\n [ method ]\n **\n * Converts HSB values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - b (number) value or brightness\n = (string) hex representation of the color\n\\*/\nSnap.hsb = cacher(function (h, s, b) {\n    return Snap.hsb2rgb(h, s, b).hex;\n});\n/*\\\n * Snap.hsl\n [ method ]\n **\n * Converts HSL values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (string) hex representation of the color\n\\*/\nSnap.hsl = cacher(function (h, s, l) {\n    return Snap.hsl2rgb(h, s, l).hex;\n});\n/*\\\n * Snap.rgb\n [ method ]\n **\n * Converts RGB values to a hex representation of the color\n - r (number) red\n - g (number) green\n - b (number) blue\n = (string) hex representation of the color\n\\*/\nSnap.rgb = cacher(function (r, g, b, o) {\n    if (is(o, \"finite\")) {\n        var round = math.round;\n        return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n    }\n    return \"#\" + (16777216 | b | g << 8 | r << 16).toString(16).slice(1);\n});\nvar toHex = function (color) {\n    var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n        red = \"rgb(255, 0, 0)\";\n    toHex = cacher(function (color) {\n        if (color.toLowerCase() == \"red\") {\n            return red;\n        }\n        i.style.color = red;\n        i.style.color = color;\n        var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n        return out == red ? null : out;\n    });\n    return toHex(color);\n},\nhsbtoString = function () {\n    return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n},\nhsltoString = function () {\n    return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n},\nrgbtoString = function () {\n    return this.opacity == 1 || this.opacity == null ?\n            this.hex :\n            \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n},\nprepareRGB = function (r, g, b) {\n    if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n        b = r.b;\n        g = r.g;\n        r = r.r;\n    }\n    if (g == null && is(r, string)) {\n        var clr = Snap.getRGB(r);\n        r = clr.r;\n        g = clr.g;\n        b = clr.b;\n    }\n    if (r > 1 || g > 1 || b > 1) {\n        r /= 255;\n        g /= 255;\n        b /= 255;\n    }\n\n    return [r, g, b];\n},\npackageRGB = function (r, g, b, o) {\n    r = math.round(r * 255);\n    g = math.round(g * 255);\n    b = math.round(b * 255);\n    var rgb = {\n        r: r,\n        g: g,\n        b: b,\n        opacity: is(o, \"finite\") ? o : 1,\n        hex: Snap.rgb(r, g, b),\n        toString: rgbtoString\n    };\n    is(o, \"finite\") && (rgb.opacity = o);\n    return rgb;\n};\n/*\\\n * Snap.color\n [ method ]\n **\n * Parses the color string and returns an object featuring the color's component values\n - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n = (object) Combined RGB/HSB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) `true` if string can't be parsed,\n o     h (number) hue,\n o     s (number) saturation,\n o     v (number) value (brightness),\n o     l (number) lightness\n o }\n\\*/\nSnap.color = function (clr) {\n    var rgb;\n    if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n        rgb = Snap.hsb2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n        rgb = Snap.hsl2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else {\n        if (is(clr, \"string\")) {\n            clr = Snap.getRGB(clr);\n        }\n        if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n            rgb = Snap.rgb2hsl(clr);\n            clr.h = rgb.h;\n            clr.s = rgb.s;\n            clr.l = rgb.l;\n            rgb = Snap.rgb2hsb(clr);\n            clr.v = rgb.b;\n        } else {\n            clr = {hex: \"none\"};\n            clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n            clr.error = 1;\n        }\n    }\n    clr.toString = rgbtoString;\n    return clr;\n};\n/*\\\n * Snap.hsb2rgb\n [ method ]\n **\n * Converts HSB values to an RGB object\n - h (number) hue\n - s (number) saturation\n - v (number) value or brightness\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsb2rgb = function (h, s, v, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n        v = h.b;\n        s = h.s;\n        o = h.o;\n        h = h.h;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = v * s;\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = v - C;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.hsl2rgb\n [ method ]\n **\n * Converts HSL values to an RGB object\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsl2rgb = function (h, s, l, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n    }\n    if (h > 1 || s > 1 || l > 1) {\n        h /= 360;\n        s /= 100;\n        l /= 100;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = 2 * s * (l < .5 ? l : 1 - l);\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = l - C / 2;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.rgb2hsb\n [ method ]\n **\n * Converts RGB values to an HSB object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSB object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     b (number) brightness\n o }\n\\*/\nSnap.rgb2hsb = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, V, C;\n    V = mmax(r, g, b);\n    C = V - mmin(r, g, b);\n    H = C == 0 ? null :\n        V == r ? (g - b) / C :\n        V == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    S = C == 0 ? 0 : C / V;\n    return {h: H, s: S, b: V, toString: hsbtoString};\n};\n/*\\\n * Snap.rgb2hsl\n [ method ]\n **\n * Converts RGB values to an HSL object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSL object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     l (number) luminosity\n o }\n\\*/\nSnap.rgb2hsl = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, L, M, m, C;\n    M = mmax(r, g, b);\n    m = mmin(r, g, b);\n    C = M - m;\n    H = C == 0 ? null :\n        M == r ? (g - b) / C :\n        M == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    L = (M + m) / 2;\n    S = C == 0 ? 0 :\n         L < .5 ? C / (2 * L) :\n                  C / (2 - 2 * L);\n    return {h: H, s: S, l: L, toString: hsltoString};\n};\n\n// Transformations\n/*\\\n * Snap.parsePathString\n [ method ]\n **\n * Utility method\n **\n * Parses given path string into an array of arrays of path segments\n - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n = (array) array of segments\n\\*/\nSnap.parsePathString = function (pathString) {\n    if (!pathString) {\n        return null;\n    }\n    var pth = Snap.path(pathString);\n    if (pth.arr) {\n        return Snap.path.clone(pth.arr);\n    }\n\n    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n        data = [];\n    if (is(pathString, \"array\") && is(pathString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(pathString);\n    }\n    if (!data.length) {\n        Str(pathString).replace(pathCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            if (name == \"m\" && params.length > 2) {\n                data.push([b].concat(params.splice(0, 2)));\n                name = \"l\";\n                b = b == \"m\" ? \"l\" : \"L\";\n            }\n            if (name == \"o\" && params.length == 1) {\n                data.push([b, params[0]]);\n            }\n            if (name == \"r\") {\n                data.push([b].concat(params));\n            } else while (params.length >= paramCounts[name]) {\n                data.push([b].concat(params.splice(0, paramCounts[name])));\n                if (!paramCounts[name]) {\n                    break;\n                }\n            }\n        });\n    }\n    data.toString = Snap.path.toString;\n    pth.arr = Snap.path.clone(data);\n    return data;\n};\n/*\\\n * Snap.parseTransformString\n [ method ]\n **\n * Utility method\n **\n * Parses given transform string into an array of transformations\n - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n = (array) array of transformations\n\\*/\nvar parseTransformString = Snap.parseTransformString = function (TString) {\n    if (!TString) {\n        return null;\n    }\n    var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n        data = [];\n    if (is(TString, \"array\") && is(TString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(TString);\n    }\n    if (!data.length) {\n        Str(TString).replace(tCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            data.push([b].concat(params));\n        });\n    }\n    data.toString = Snap.path.toString;\n    return data;\n};\nfunction svgTransform2string(tstr) {\n    var res = [];\n    tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n        params = params.split(/\\s*,\\s*|\\s+/);\n        if (name == \"rotate\" && params.length == 1) {\n            params.push(0, 0);\n        }\n        if (name == \"scale\") {\n            if (params.length > 2) {\n                params = params.slice(0, 2);\n            } else if (params.length == 2) {\n                params.push(0, 0);\n            }\n            if (params.length == 1) {\n                params.push(params[0], 0, 0);\n            }\n        }\n        if (name == \"skewX\") {\n            res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n        } else if (name == \"skewY\") {\n            res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n        } else {\n            res.push([name.charAt(0)].concat(params));\n        }\n        return all;\n    });\n    return res;\n}\nSnap._.svgTransform2string = svgTransform2string;\nSnap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\nfunction transform2matrix(tstr, bbox) {\n    var tdata = parseTransformString(tstr),\n        m = new Snap.Matrix;\n    if (tdata) {\n        for (var i = 0, ii = tdata.length; i < ii; i++) {\n            var t = tdata[i],\n                tlen = t.length,\n                command = Str(t[0]).toLowerCase(),\n                absolute = t[0] != command,\n                inver = absolute ? m.invert() : 0,\n                x1,\n                y1,\n                x2,\n                y2,\n                bb;\n            if (command == \"t\" && tlen == 2){\n                m.translate(t[1], 0);\n            } else if (command == \"t\" && tlen == 3) {\n                if (absolute) {\n                    x1 = inver.x(0, 0);\n                    y1 = inver.y(0, 0);\n                    x2 = inver.x(t[1], t[2]);\n                    y2 = inver.y(t[1], t[2]);\n                    m.translate(x2 - x1, y2 - y1);\n                } else {\n                    m.translate(t[1], t[2]);\n                }\n            } else if (command == \"r\") {\n                if (tlen == 2) {\n                    bb = bb || bbox;\n                    m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.rotate(t[1], x2, y2);\n                    } else {\n                        m.rotate(t[1], t[2], t[3]);\n                    }\n                }\n            } else if (command == \"s\") {\n                if (tlen == 2 || tlen == 3) {\n                    bb = bb || bbox;\n                    m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.scale(t[1], t[1], x2, y2);\n                    } else {\n                        m.scale(t[1], t[1], t[2], t[3]);\n                    }\n                } else if (tlen == 5) {\n                    if (absolute) {\n                        x2 = inver.x(t[3], t[4]);\n                        y2 = inver.y(t[3], t[4]);\n                        m.scale(t[1], t[2], x2, y2);\n                    } else {\n                        m.scale(t[1], t[2], t[3], t[4]);\n                    }\n                }\n            } else if (command == \"m\" && tlen == 7) {\n                m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n            }\n        }\n    }\n    return m;\n}\nSnap._.transform2matrix = transform2matrix;\nSnap._unit2px = unit2px;\nvar contains = glob.doc.contains || glob.doc.compareDocumentPosition ?\n    function (a, b) {\n        var adown = a.nodeType == 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n            return a == bup || !!(bup && bup.nodeType == 1 && (\n                adown.contains ?\n                    adown.contains(bup) :\n                    a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16\n            ));\n    } :\n    function (a, b) {\n        if (b) {\n            while (b) {\n                b = b.parentNode;\n                if (b == a) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\nfunction getSomeDefs(el) {\n    var p = el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) ||\n            el.node.parentNode && wrap(el.node.parentNode) ||\n            Snap.select(\"svg\") ||\n            Snap(0, 0),\n        pdefs = p.select(\"defs\"),\n        defs  = pdefs == null ? false : pdefs.node;\n    if (!defs) {\n        defs = make(\"defs\", p.node).node;\n    }\n    return defs;\n}\nfunction getSomeSVG(el) {\n    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n}\nSnap._.getSomeDefs = getSomeDefs;\nSnap._.getSomeSVG = getSomeSVG;\nfunction unit2px(el, name, value) {\n    var svg = getSomeSVG(el).node,\n        out = {},\n        mgr = svg.querySelector(\".svg---mgr\");\n    if (!mgr) {\n        mgr = $(\"rect\");\n        $(mgr, {x: -9e9, y: -9e9, width: 10, height: 10, \"class\": \"svg---mgr\", fill: \"none\"});\n        svg.appendChild(mgr);\n    }\n    function getW(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {width: val});\n        try {\n            return mgr.getBBox().width;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function getH(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {height: val});\n        try {\n            return mgr.getBBox().height;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function set(nam, f) {\n        if (name == null) {\n            out[nam] = f(el.attr(nam) || 0);\n        } else if (nam == name) {\n            out = f(value == null ? el.attr(nam) || 0 : value);\n        }\n    }\n    switch (el.type) {\n        case \"rect\":\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        case \"image\":\n            set(\"width\", getW);\n            set(\"height\", getH);\n        case \"text\":\n            set(\"x\", getW);\n            set(\"y\", getH);\n        break;\n        case \"circle\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"r\", getW);\n        break;\n        case \"ellipse\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        break;\n        case \"line\":\n            set(\"x1\", getW);\n            set(\"x2\", getW);\n            set(\"y1\", getH);\n            set(\"y2\", getH);\n        break;\n        case \"marker\":\n            set(\"refX\", getW);\n            set(\"markerWidth\", getW);\n            set(\"refY\", getH);\n            set(\"markerHeight\", getH);\n        break;\n        case \"radialGradient\":\n            set(\"fx\", getW);\n            set(\"fy\", getH);\n        break;\n        case \"tspan\":\n            set(\"dx\", getW);\n            set(\"dy\", getH);\n        break;\n        default:\n            set(name, getW);\n    }\n    svg.removeChild(mgr);\n    return out;\n}\n/*\\\n * Snap.select\n [ method ]\n **\n * Wraps a DOM element specified by CSS selector as @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.select = function (query) {\n    query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n    return wrap(glob.doc.querySelector(query));\n};\n/*\\\n * Snap.selectAll\n [ method ]\n **\n * Wraps DOM elements specified by CSS selector as set or array of @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.selectAll = function (query) {\n    var nodelist = glob.doc.querySelectorAll(query),\n        set = (Snap.set || Array)();\n    for (var i = 0; i < nodelist.length; i++) {\n        set.push(wrap(nodelist[i]));\n    }\n    return set;\n};\n\nfunction add2group(list) {\n    if (!is(list, \"array\")) {\n        list = Array.prototype.slice.call(arguments, 0);\n    }\n    var i = 0,\n        j = 0,\n        node = this.node;\n    while (this[i]) delete this[i++];\n    for (i = 0; i < list.length; i++) {\n        if (list[i].type == \"set\") {\n            list[i].forEach(function (el) {\n                node.appendChild(el.node);\n            });\n        } else {\n            node.appendChild(list[i].node);\n        }\n    }\n    var children = node.childNodes;\n    for (i = 0; i < children.length; i++) {\n        this[j++] = wrap(children[i]);\n    }\n    return this;\n}\n// Hub garbage collector every 10s\nsetInterval(function () {\n    for (var key in hub) if (hub[has](key)) {\n        var el = hub[key],\n            node = el.node;\n        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n            delete hub[key];\n        }\n    }\n}, 1e4);\nfunction Element(el) {\n    if (el.snap in hub) {\n        return hub[el.snap];\n    }\n    var svg;\n    try {\n        svg = el.ownerSVGElement;\n    } catch(e) {}\n    /*\\\n     * Element.node\n     [ property (object) ]\n     **\n     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n     > Usage\n     | // draw a circle at coordinate 10,10 with radius of 10\n     | var c = paper.circle(10, 10, 10);\n     | c.node.onclick = function () {\n     |     c.attr(\"fill\", \"red\");\n     | };\n    \\*/\n    this.node = el;\n    if (svg) {\n        this.paper = new Paper(svg);\n    }\n    /*\\\n     * Element.type\n     [ property (string) ]\n     **\n     * SVG tag name of the given element.\n    \\*/\n    this.type = el.tagName || el.nodeName;\n    var id = this.id = ID(this);\n    this.anims = {};\n    this._ = {\n        transform: []\n    };\n    el.snap = id;\n    hub[id] = this;\n    if (this.type == \"g\") {\n        this.add = add2group;\n    }\n    if (this.type in {g: 1, mask: 1, pattern: 1, symbol: 1}) {\n        for (var method in Paper.prototype) if (Paper.prototype[has](method)) {\n            this[method] = Paper.prototype[method];\n        }\n    }\n}\n   /*\\\n     * Element.attr\n     [ method ]\n     **\n     * Gets or sets given attributes of the element.\n     **\n     - params (object) contains key-value pairs of attributes you want to set\n     * or\n     - param (string) name of the attribute\n     = (Element) the current element\n     * or\n     = (string) value of attribute\n     > Usage\n     | el.attr({\n     |     fill: \"#fc0\",\n     |     stroke: \"#000\",\n     |     strokeWidth: 2, // CamelCase...\n     |     \"fill-opacity\": 0.5, // or dash-separated names\n     |     width: \"*=2\" // prefixed values\n     | });\n     | console.log(el.attr(\"fill\")); // #fc0\n     * Prefixed values in format `\"+=10\"` supported. All four operations\n     * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n     * and `-`: `\"+=2em\"`.\n    \\*/\n    Element.prototype.attr = function (params, value) {\n        var el = this,\n            node = el.node;\n        if (!params) {\n            if (node.nodeType != 1) {\n                return {\n                    text: node.nodeValue\n                };\n            }\n            var attr = node.attributes,\n                out = {};\n            for (var i = 0, ii = attr.length; i < ii; i++) {\n                out[attr[i].nodeName] = attr[i].nodeValue;\n            }\n            return out;\n        }\n        if (is(params, \"string\")) {\n            if (arguments.length > 1) {\n                var json = {};\n                json[params] = value;\n                params = json;\n            } else {\n                return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n            }\n        }\n        for (var att in params) {\n            if (params[has](att)) {\n                eve(\"snap.util.attr.\" + att, el, params[att]);\n            }\n        }\n        return el;\n    };\n/*\\\n * Snap.parse\n [ method ]\n **\n * Parses SVG fragment and converts it into a @Fragment\n **\n - svg (string) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.parse = function (svg) {\n    var f = glob.doc.createDocumentFragment(),\n        full = true,\n        div = glob.doc.createElement(\"div\");\n    svg = Str(svg);\n    if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n        svg = \"<svg>\" + svg + \"</svg>\";\n        full = false;\n    }\n    div.innerHTML = svg;\n    svg = div.getElementsByTagName(\"svg\")[0];\n    if (svg) {\n        if (full) {\n            f = svg;\n        } else {\n            while (svg.firstChild) {\n                f.appendChild(svg.firstChild);\n            }\n        }\n    }\n    return new Fragment(f);\n};\nfunction Fragment(frag) {\n    this.node = frag;\n}\n/*\\\n * Snap.fragment\n [ method ]\n **\n * Creates a DOM fragment from a given list of elements or strings\n **\n - varargs (…) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.fragment = function () {\n    var args = Array.prototype.slice.call(arguments, 0),\n        f = glob.doc.createDocumentFragment();\n    for (var i = 0, ii = args.length; i < ii; i++) {\n        var item = args[i];\n        if (item.node && item.node.nodeType) {\n            f.appendChild(item.node);\n        }\n        if (item.nodeType) {\n            f.appendChild(item);\n        }\n        if (typeof item == \"string\") {\n            f.appendChild(Snap.parse(item).node);\n        }\n    }\n    return new Fragment(f);\n};\n\nfunction make(name, parent) {\n    var res = $(name);\n    parent.appendChild(res);\n    var el = wrap(res);\n    return el;\n}\nfunction Paper(w, h) {\n    var res,\n        desc,\n        defs,\n        proto = Paper.prototype;\n    if (w && w.tagName && w.tagName.toLowerCase() == \"svg\") {\n        if (w.snap in hub) {\n            return hub[w.snap];\n        }\n        var doc = w.ownerDocument;\n        res = new Element(w);\n        desc = w.getElementsByTagName(\"desc\")[0];\n        defs = w.getElementsByTagName(\"defs\")[0];\n        if (!desc) {\n            desc = $(\"desc\");\n            desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n            res.node.appendChild(desc);\n        }\n        if (!defs) {\n            defs = $(\"defs\");\n            res.node.appendChild(defs);\n        }\n        res.defs = defs;\n        for (var key in proto) if (proto[has](key)) {\n            res[key] = proto[key];\n        }\n        res.paper = res.root = res;\n    } else {\n        res = make(\"svg\", glob.doc.body);\n        $(res.node, {\n            height: h,\n            version: 1.1,\n            width: w,\n            xmlns: xmlns\n        });\n    }\n    return res;\n}\nfunction wrap(dom) {\n    if (!dom) {\n        return dom;\n    }\n    if (dom instanceof Element || dom instanceof Fragment) {\n        return dom;\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n        return new Paper(dom);\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n        return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n    }\n    return new Element(dom);\n}\n\nSnap._.make = make;\nSnap._.wrap = wrap;\n/*\\\n * Paper.el\n [ method ]\n **\n * Creates an element on paper with a given name and no attributes\n **\n - name (string) tag name\n - attr (object) attributes\n = (Element) the current element\n > Usage\n | var c = paper.circle(10, 10, 10); // is the same as...\n | var c = paper.el(\"circle\").attr({\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n | // and the same as\n | var c = paper.el(\"circle\", {\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n\\*/\nPaper.prototype.el = function (name, attr) {\n    var el = make(name, this.node);\n    attr && el.attr(attr);\n    return el;\n};\n/*\\\n * Element.children\n [ method ]\n **\n * Returns array of all the children of the element.\n = (array) array of Elements\n\\*/\nElement.prototype.children = function () {\n    var out = [],\n        ch = this.node.childNodes;\n    for (var i = 0, ii = ch.length; i < ii; i++) {\n        out[i] = Snap(ch[i]);\n    }\n    return out;\n};\nfunction jsonFiller(root, o) {\n    for (var i = 0, ii = root.length; i < ii; i++) {\n        var item = {\n                type: root[i].type,\n                attr: root[i].attr()\n            },\n            children = root[i].children();\n        o.push(item);\n        if (children.length) {\n            jsonFiller(children, item.childNodes = []);\n        }\n    }\n}\n/*\\\n * Element.toJSON\n [ method ]\n **\n * Returns object representation of the given element and all its children.\n = (object) in format\n o {\n o     type (string) this.type,\n o     attr (object) attributes map,\n o     childNodes (array) optional array of children in the same format\n o }\n\\*/\nElement.prototype.toJSON = function () {\n    var out = [];\n    jsonFiller([this], out);\n    return out[0];\n};\n// default\neve.on(\"snap.util.getattr\", function () {\n    var att = eve.nt();\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    var css = att.replace(/[A-Z]/g, function (letter) {\n        return \"-\" + letter.toLowerCase();\n    });\n    if (cssAttr[has](css)) {\n        return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n    } else {\n        return $(this.node, att);\n    }\n});\nvar cssAttr = {\n    \"alignment-baseline\": 0,\n    \"baseline-shift\": 0,\n    \"clip\": 0,\n    \"clip-path\": 0,\n    \"clip-rule\": 0,\n    \"color\": 0,\n    \"color-interpolation\": 0,\n    \"color-interpolation-filters\": 0,\n    \"color-profile\": 0,\n    \"color-rendering\": 0,\n    \"cursor\": 0,\n    \"direction\": 0,\n    \"display\": 0,\n    \"dominant-baseline\": 0,\n    \"enable-background\": 0,\n    \"fill\": 0,\n    \"fill-opacity\": 0,\n    \"fill-rule\": 0,\n    \"filter\": 0,\n    \"flood-color\": 0,\n    \"flood-opacity\": 0,\n    \"font\": 0,\n    \"font-family\": 0,\n    \"font-size\": 0,\n    \"font-size-adjust\": 0,\n    \"font-stretch\": 0,\n    \"font-style\": 0,\n    \"font-variant\": 0,\n    \"font-weight\": 0,\n    \"glyph-orientation-horizontal\": 0,\n    \"glyph-orientation-vertical\": 0,\n    \"image-rendering\": 0,\n    \"kerning\": 0,\n    \"letter-spacing\": 0,\n    \"lighting-color\": 0,\n    \"marker\": 0,\n    \"marker-end\": 0,\n    \"marker-mid\": 0,\n    \"marker-start\": 0,\n    \"mask\": 0,\n    \"opacity\": 0,\n    \"overflow\": 0,\n    \"pointer-events\": 0,\n    \"shape-rendering\": 0,\n    \"stop-color\": 0,\n    \"stop-opacity\": 0,\n    \"stroke\": 0,\n    \"stroke-dasharray\": 0,\n    \"stroke-dashoffset\": 0,\n    \"stroke-linecap\": 0,\n    \"stroke-linejoin\": 0,\n    \"stroke-miterlimit\": 0,\n    \"stroke-opacity\": 0,\n    \"stroke-width\": 0,\n    \"text-anchor\": 0,\n    \"text-decoration\": 0,\n    \"text-rendering\": 0,\n    \"unicode-bidi\": 0,\n    \"visibility\": 0,\n    \"word-spacing\": 0,\n    \"writing-mode\": 0\n};\n\neve.on(\"snap.util.attr\", function (value) {\n    var att = eve.nt(),\n        attr = {};\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    attr[att] = value;\n    var style = att.replace(/-(\\w)/gi, function (all, letter) {\n            return letter.toUpperCase();\n        }),\n        css = att.replace(/[A-Z]/g, function (letter) {\n            return \"-\" + letter.toLowerCase();\n        });\n    if (cssAttr[has](css)) {\n        this.node.style[style] = value == null ? E : value;\n    } else {\n        $(this.node, attr);\n    }\n});\n(function (proto) {}(Paper.prototype));\n\n// simple ajax\n/*\\\n * Snap.ajax\n [ method ]\n **\n * Simple implementation of Ajax\n **\n - url (string) URL\n - postData (object|string) data for post request\n - callback (function) callback\n - scope (object) #optional scope of callback\n * or\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n = (XMLHttpRequest) the XMLHttpRequest object, just in case\n\\*/\nSnap.ajax = function (url, postData, callback, scope){\n    var req = new XMLHttpRequest,\n        id = ID();\n    if (req) {\n        if (is(postData, \"function\")) {\n            scope = callback;\n            callback = postData;\n            postData = null;\n        } else if (is(postData, \"object\")) {\n            var pd = [];\n            for (var key in postData) if (postData.hasOwnProperty(key)) {\n                pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n            }\n            postData = pd.join(\"&\");\n        }\n        req.open(postData ? \"POST\" : \"GET\", url, true);\n        if (postData) {\n            req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n        if (callback) {\n            eve.once(\"snap.ajax.\" + id + \".0\", callback);\n            eve.once(\"snap.ajax.\" + id + \".200\", callback);\n            eve.once(\"snap.ajax.\" + id + \".304\", callback);\n        }\n        req.onreadystatechange = function() {\n            if (req.readyState != 4) return;\n            eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n        };\n        if (req.readyState == 4) {\n            return req;\n        }\n        req.send(postData);\n        return req;\n    }\n};\n/*\\\n * Snap.load\n [ method ]\n **\n * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n **\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n\\*/\nSnap.load = function (url, callback, scope) {\n    Snap.ajax(url, function (req) {\n        var f = Snap.parse(req.responseText);\n        scope ? callback.call(scope, f) : callback(f);\n    });\n};\nvar getOffset = function (elem) {\n    var box = elem.getBoundingClientRect(),\n        doc = elem.ownerDocument,\n        body = doc.body,\n        docElem = doc.documentElement,\n        clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n        top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n    return {\n        y: top,\n        x: left\n    };\n};\n/*\\\n * Snap.getElementByPoint\n [ method ]\n **\n * Returns you topmost element under given point.\n **\n = (object) Snap element object\n - x (number) x coordinate from the top left corner of the window\n - y (number) y coordinate from the top left corner of the window\n > Usage\n | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n\\*/\nSnap.getElementByPoint = function (x, y) {\n    var paper = this,\n        svg = paper.canvas,\n        target = glob.doc.elementFromPoint(x, y);\n    if (glob.win.opera && target.tagName == \"svg\") {\n        var so = getOffset(target),\n            sr = target.createSVGRect();\n        sr.x = x - so.x;\n        sr.y = y - so.y;\n        sr.width = sr.height = 1;\n        var hits = target.getIntersectionList(sr, null);\n        if (hits.length) {\n            target = hits[hits.length - 1];\n        }\n    }\n    if (!target) {\n        return null;\n    }\n    return wrap(target);\n};\n/*\\\n * Snap.plugin\n [ method ]\n **\n * Let you write plugins. You pass in a function with five arguments, like this:\n | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n |     Snap.newmethod = function () {};\n |     Element.prototype.newmethod = function () {};\n |     Paper.prototype.newmethod = function () {};\n | });\n * Inside the function you have access to all main objects (and their\n * prototypes). This allow you to extend anything you want.\n **\n - f (function) your plugin body\n\\*/\nSnap.plugin = function (f) {\n    f(Snap, Element, Paper, glob, Fragment);\n};\nglob.win.Snap = Snap;\nreturn Snap;\n}(window || this));\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        unit2px = Snap._unit2px,\n        $ = Snap._.$,\n        make = Snap._.make,\n        getSomeDefs = Snap._.getSomeDefs,\n        has = \"hasOwnProperty\",\n        wrap = Snap._.wrap;\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Returns the bounding box descriptor for the given element\n     **\n     = (object) bounding box descriptor:\n     o {\n     o     cx: (number) x of the center,\n     o     cy: (number) x of the center,\n     o     h: (number) height,\n     o     height: (number) height,\n     o     path: (string) path command for the box,\n     o     r0: (number) radius of a circle that fully encloses the box,\n     o     r1: (number) radius of the smallest circle that can be enclosed,\n     o     r2: (number) radius of the largest circle that can be enclosed,\n     o     vb: (string) box as a viewbox command,\n     o     w: (number) width,\n     o     width: (number) width,\n     o     x2: (number) x of the right side,\n     o     x: (number) x of the left side,\n     o     y2: (number) y of the bottom edge,\n     o     y: (number) y of the top edge\n     o }\n    \\*/\n    elproto.getBBox = function (isWithoutTransform) {\n        if (this.type == \"tspan\") {\n            return Snap._.box(this.node.getClientRects().item(0));\n        }\n        if (!Snap.Matrix || !Snap.path) {\n            return this.node.getBBox();\n        }\n        var el = this,\n            m = new Snap.Matrix;\n        if (el.removed) {\n            return Snap._.box();\n        }\n        while (el.type == \"use\") {\n            if (!isWithoutTransform) {\n                m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n            }\n            if (el.original) {\n                el = el.original;\n            } else {\n                var href = el.attr(\"xlink:href\");\n                el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n            }\n        }\n        var _ = el._,\n            pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n        try {\n            if (isWithoutTransform) {\n                _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n                return Snap._.box(_.bboxwt);\n            } else {\n                el.realPath = pathfinder(el);\n                el.matrix = el.transform().localMatrix;\n                _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n                return Snap._.box(_.bbox);\n            }\n        } catch (e) {\n            // Firefox doesn’t give you bbox of hidden element\n            return Snap._.box();\n        }\n    };\n    var propString = function () {\n        return this.string;\n    };\n    function extractTransform(el, tstr) {\n        if (tstr == null) {\n            var doReturn = true;\n            if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n                tstr = el.node.getAttribute(\"gradientTransform\");\n            } else if (el.type == \"pattern\") {\n                tstr = el.node.getAttribute(\"patternTransform\");\n            } else {\n                tstr = el.node.getAttribute(\"transform\");\n            }\n            if (!tstr) {\n                return new Snap.Matrix;\n            }\n            tstr = Snap._.svgTransform2string(tstr);\n        } else {\n            if (!Snap._.rgTransform.test(tstr)) {\n                tstr = Snap._.svgTransform2string(tstr);\n            } else {\n                tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || \"\");\n            }\n            if (is(tstr, \"array\")) {\n                tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n            }\n            el._.transform = tstr;\n        }\n        var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n        if (doReturn) {\n            return m;\n        } else {\n            el.matrix = m;\n        }\n    }\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Gets or sets transformation of the element\n     **\n     - tstr (string) transform string in Snap or SVG format\n     = (Element) the current element\n     * or\n     = (object) transformation descriptor:\n     o {\n     o     string (string) transform string,\n     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n     o     global (string) global transformation as string,\n     o     local (string) local transformation as string,\n     o     toString (function) returns `string` property\n     o }\n    \\*/\n    elproto.transform = function (tstr) {\n        var _ = this._;\n        if (tstr == null) {\n            var papa = this,\n                global = new Snap.Matrix(this.node.getCTM()),\n                local = extractTransform(this),\n                ms = [local],\n                m = new Snap.Matrix,\n                i,\n                localString = local.toTransformString(),\n                string = Str(local) == Str(this.matrix) ?\n                            Str(_.transform) : localString;\n            while (papa.type != \"svg\" && (papa = papa.parent())) {\n                ms.push(extractTransform(papa));\n            }\n            i = ms.length;\n            while (i--) {\n                m.add(ms[i]);\n            }\n            return {\n                string: string,\n                globalMatrix: global,\n                totalMatrix: m,\n                localMatrix: local,\n                diffMatrix: global.clone().add(local.invert()),\n                global: global.toTransformString(),\n                total: m.toTransformString(),\n                local: localString,\n                toString: propString\n            };\n        }\n        if (tstr instanceof Snap.Matrix) {\n            this.matrix = tstr;\n            this._.transform = tstr.toTransformString();\n        } else {\n            extractTransform(this, tstr);\n        }\n\n        if (this.node) {\n            if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n                $(this.node, {gradientTransform: this.matrix});\n            } else if (this.type == \"pattern\") {\n                $(this.node, {patternTransform: this.matrix});\n            } else {\n                $(this.node, {transform: this.matrix});\n            }\n        }\n\n        return this;\n    };\n    /*\\\n     * Element.parent\n     [ method ]\n     **\n     * Returns the element's parent\n     **\n     = (Element) the parent element\n    \\*/\n    elproto.parent = function () {\n        return wrap(this.node.parentNode);\n    };\n    /*\\\n     * Element.append\n     [ method ]\n     **\n     * Appends the given element to current one\n     **\n     - el (Element|Set) element to append\n     = (Element) the parent element\n    \\*/\n    /*\\\n     * Element.add\n     [ method ]\n     **\n     * See @Element.append\n    \\*/\n    elproto.append = elproto.add = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this;\n                el.forEach(function (el) {\n                    it.add(el);\n                });\n                return this;\n            }\n            el = wrap(el);\n            this.node.appendChild(el.node);\n            el.paper = this.paper;\n        }\n        return this;\n    };\n    /*\\\n     * Element.appendTo\n     [ method ]\n     **\n     * Appends the current element to the given one\n     **\n     - el (Element) parent element to append to\n     = (Element) the child element\n    \\*/\n    elproto.appendTo = function (el) {\n        if (el) {\n            el = wrap(el);\n            el.append(this);\n        }\n        return this;\n    };\n    /*\\\n     * Element.prepend\n     [ method ]\n     **\n     * Prepends the given element to the current one\n     **\n     - el (Element) element to prepend\n     = (Element) the parent element\n    \\*/\n    elproto.prepend = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this,\n                    first;\n                el.forEach(function (el) {\n                    if (first) {\n                        first.after(el);\n                    } else {\n                        it.prepend(el);\n                    }\n                    first = el;\n                });\n                return this;\n            }\n            el = wrap(el);\n            var parent = el.parent();\n            this.node.insertBefore(el.node, this.node.firstChild);\n            this.add && this.add();\n            el.paper = this.paper;\n            this.parent() && this.parent().add();\n            parent && parent.add();\n        }\n        return this;\n    };\n    /*\\\n     * Element.prependTo\n     [ method ]\n     **\n     * Prepends the current element to the given one\n     **\n     - el (Element) parent element to prepend to\n     = (Element) the child element\n    \\*/\n    elproto.prependTo = function (el) {\n        el = wrap(el);\n        el.prepend(this);\n        return this;\n    };\n    /*\\\n     * Element.before\n     [ method ]\n     **\n     * Inserts given element before the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.before = function (el) {\n        if (el.type == \"set\") {\n            var it = this;\n            el.forEach(function (el) {\n                var parent = el.parent();\n                it.node.parentNode.insertBefore(el.node, it.node);\n                parent && parent.add();\n            });\n            this.parent().add();\n            return this;\n        }\n        el = wrap(el);\n        var parent = el.parent();\n        this.node.parentNode.insertBefore(el.node, this.node);\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.after\n     [ method ]\n     **\n     * Inserts given element after the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.after = function (el) {\n        el = wrap(el);\n        var parent = el.parent();\n        if (this.node.nextSibling) {\n            this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n        } else {\n            this.node.parentNode.appendChild(el.node);\n        }\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertBefore = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertAfter = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the DOM\n     = (Element) the detached element\n    \\*/\n    elproto.remove = function () {\n        var parent = this.parent();\n        this.node.parentNode && this.node.parentNode.removeChild(this.node);\n        delete this.paper;\n        this.removed = true;\n        parent && parent.add();\n        return this;\n    };\n    /*\\\n     * Element.select\n     [ method ]\n     **\n     * Gathers the nested @Element matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Element) result of query selection\n    \\*/\n    elproto.select = function (query) {\n        return wrap(this.node.querySelector(query));\n    };\n    /*\\\n     * Element.selectAll\n     [ method ]\n     **\n     * Gathers nested @Element objects matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Set|array) result of query selection\n    \\*/\n    elproto.selectAll = function (query) {\n        var nodelist = this.node.querySelectorAll(query),\n            set = (Snap.set || Array)();\n        for (var i = 0; i < nodelist.length; i++) {\n            set.push(wrap(nodelist[i]));\n        }\n        return set;\n    };\n    /*\\\n     * Element.asPX\n     [ method ]\n     **\n     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n     **\n     - attr (string) attribute name\n     - value (string) #optional attribute value\n     = (Element) result of query selection\n    \\*/\n    elproto.asPX = function (attr, value) {\n        if (value == null) {\n            value = this.attr(attr);\n        }\n        return +unit2px(this, attr, value);\n    };\n    // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n    /*\\\n     * Element.use\n     [ method ]\n     **\n     * Creates a `<use>` element linked to the current element\n     **\n     = (Element) the `<use>` element\n    \\*/\n    elproto.use = function () {\n        var use,\n            id = this.node.id;\n        if (!id) {\n            id = this.id;\n            $(this.node, {\n                id: id\n            });\n        }\n        if (this.type == \"linearGradient\" || this.type == \"radialGradient\" ||\n            this.type == \"pattern\") {\n            use = make(this.type, this.node.parentNode);\n        } else {\n            use = make(\"use\", this.node.parentNode);\n        }\n        $(use.node, {\n            \"xlink:href\": \"#\" + id\n        });\n        use.original = this;\n        return use;\n    };\n    function fixids(el) {\n        var els = el.selectAll(\"*\"),\n            it,\n            url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n            ids = [],\n            uses = {};\n        function urltest(it, name) {\n            var val = $(it.node, name);\n            val = val && val.match(url);\n            val = val && val[2];\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    var attr = {};\n                    attr[name] = Snap.url(id);\n                    $(it.node, attr);\n                });\n            }\n        }\n        function linktest(it) {\n            var val = $(it.node, \"xlink:href\");\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    it.attr(\"xlink:href\", \"#\" + id);\n                });\n            }\n        }\n        for (var i = 0, ii = els.length; i < ii; i++) {\n            it = els[i];\n            urltest(it, \"fill\");\n            urltest(it, \"stroke\");\n            urltest(it, \"filter\");\n            urltest(it, \"mask\");\n            urltest(it, \"clip-path\");\n            linktest(it);\n            var oldid = $(it.node, \"id\");\n            if (oldid) {\n                $(it.node, {id: it.id});\n                ids.push({\n                    old: oldid,\n                    id: it.id\n                });\n            }\n        }\n        for (i = 0, ii = ids.length; i < ii; i++) {\n            var fs = uses[ids[i].old];\n            if (fs) {\n                for (var j = 0, jj = fs.length; j < jj; j++) {\n                    fs[j](ids[i].id);\n                }\n            }\n        }\n    }\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     * Creates a clone of the element and inserts it after the element\n     **\n     = (Element) the clone\n    \\*/\n    elproto.clone = function () {\n        var clone = wrap(this.node.cloneNode(true));\n        if ($(clone.node, \"id\")) {\n            $(clone.node, {id: clone.id});\n        }\n        fixids(clone);\n        clone.insertAfter(this);\n        return clone;\n    };\n    /*\\\n     * Element.toDefs\n     [ method ]\n     **\n     * Moves element to the shared `<defs>` area\n     **\n     = (Element) the element\n    \\*/\n    elproto.toDefs = function () {\n        var defs = getSomeDefs(this);\n        defs.appendChild(this.node);\n        return this;\n    };\n    /*\\\n     * Element.toPattern\n     [ method ]\n     **\n     * Creates a `<pattern>` element from the current element\n     **\n     * To create a pattern you have to specify the pattern rect:\n     - x (string|number)\n     - y (string|number)\n     - width (string|number)\n     - height (string|number)\n     = (Element) the `<pattern>` element\n     * You can use pattern later on as an argument for `fill` attribute:\n     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n     |         fill: \"none\",\n     |         stroke: \"#bada55\",\n     |         strokeWidth: 5\n     |     }).pattern(0, 0, 10, 10),\n     |     c = paper.circle(200, 200, 100);\n     | c.attr({\n     |     fill: p\n     | });\n    \\*/\n    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n        var p = make(\"pattern\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        $(p.node, {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            patternUnits: \"userSpaceOnUse\",\n            id: p.id,\n            viewBox: [x, y, width, height].join(\" \")\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n// SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n// SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n    /*\\\n     * Element.marker\n     [ method ]\n     **\n     * Creates a `<marker>` element from the current element\n     **\n     * To create a marker you have to specify the bounding rect and reference point:\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - refX (number)\n     - refY (number)\n     = (Element) the `<marker>` element\n     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n    \\*/\n    // TODO add usage for markers\n    elproto.marker = function (x, y, width, height, refX, refY) {\n        var p = make(\"marker\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            refX = x.refX || x.cx;\n            refY = x.refY || x.cy;\n            x = x.x;\n        }\n        $(p.node, {\n            viewBox: [x, y, width, height].join(\" \"),\n            markerWidth: width,\n            markerHeight: height,\n            orient: \"auto\",\n            refX: refX || 0,\n            refY: refY || 0,\n            id: p.id\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n    var eldata = {};\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value associated with given key. (Don’t confuse\n     * with `data-` attributes)\n     *\n     * See also @Element.removeData\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n    elproto.data = function (key, value) {\n        var data = eldata[this.id] = eldata[this.id] || {};\n        if (arguments.length == 0){\n            eve(\"snap.data.get.\" + this.id, this, data, null);\n            return data;\n        }\n        if (arguments.length == 1) {\n            if (Snap.is(key, \"object\")) {\n                for (var i in key) if (key[has](i)) {\n                    this.data(i, key[i]);\n                }\n                return this;\n            }\n            eve(\"snap.data.get.\" + this.id, this, data[key], key);\n            return data[key];\n        }\n        data[key] = value;\n        eve(\"snap.data.set.\" + this.id, this, value, key);\n        return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n    elproto.removeData = function (key) {\n        if (key == null) {\n            eldata[this.id] = {};\n        } else {\n            eldata[this.id] && delete eldata[this.id][key];\n        }\n        return this;\n    };\n    /*\\\n     * Element.outerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n     *\n     * See also @Element.innerSVG\n     = (string) SVG code for the element\n    \\*/\n    /*\\\n     * Element.toString\n     [ method ]\n     **\n     * See @Element.outerSVG\n    \\*/\n    elproto.outerSVG = elproto.toString = toString(1);\n    /*\\\n     * Element.innerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n     = (string) SVG code for the element\n    \\*/\n    elproto.innerSVG = toString();\n    function toString(type) {\n        return function () {\n            var res = type ? \"<\" + this.type : \"\",\n                attr = this.node.attributes,\n                chld = this.node.childNodes;\n            if (type) {\n                for (var i = 0, ii = attr.length; i < ii; i++) {\n                    res += \" \" + attr[i].name + '=\"' +\n                            attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n                }\n            }\n            if (chld.length) {\n                type && (res += \">\");\n                for (i = 0, ii = chld.length; i < ii; i++) {\n                    if (chld[i].nodeType == 3) {\n                        res += chld[i].nodeValue;\n                    } else if (chld[i].nodeType == 1) {\n                        res += wrap(chld[i]).toString();\n                    }\n                }\n                type && (res += \"</\" + this.type + \">\");\n            } else {\n                type && (res += \"/>\");\n            }\n            return res;\n        };\n    }\n    elproto.toDataURL = function () {\n        if (window && window.btoa) {\n            var bb = this.getBBox(),\n                svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n                x: +bb.x.toFixed(3),\n                y: +bb.y.toFixed(3),\n                width: +bb.width.toFixed(3),\n                height: +bb.height.toFixed(3),\n                contents: this.outerSVG()\n            });\n            return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n        }\n    };\n    /*\\\n     * Fragment.select\n     [ method ]\n     **\n     * See @Element.select\n    \\*/\n    Fragment.prototype.select = elproto.select;\n    /*\\\n     * Fragment.selectAll\n     [ method ]\n     **\n     * See @Element.selectAll\n    \\*/\n    Fragment.prototype.selectAll = elproto.selectAll;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var objectToString = Object.prototype.toString,\n        Str = String,\n        math = Math,\n        E = \"\";\n    function Matrix(a, b, c, d, e, f) {\n        if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n            this.a = a.a;\n            this.b = a.b;\n            this.c = a.c;\n            this.d = a.d;\n            this.e = a.e;\n            this.f = a.f;\n            return;\n        }\n        if (a != null) {\n            this.a = +a;\n            this.b = +b;\n            this.c = +c;\n            this.d = +d;\n            this.e = +e;\n            this.f = +f;\n        } else {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.e = 0;\n            this.f = 0;\n        }\n    }\n    (function (matrixproto) {\n        /*\\\n         * Matrix.add\n         [ method ]\n         **\n         * Adds the given matrix to existing one\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        matrixproto.add = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.add(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + b * this.c,\n                bNew = a * this.b + b * this.d;\n            this.e += e * this.a + f * this.c;\n            this.f += e * this.b + f * this.d;\n            this.c = c * this.a + d * this.c;\n            this.d = c * this.b + d * this.d;\n\n            this.a = aNew;\n            this.b = bNew;\n            return this;\n        };\n        /*\\\n         * Matrix.multLeft\n         [ method ]\n         **\n         * Multiplies a passed affine transform to the left: M * this.\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        Matrix.prototype.multLeft = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.multLeft(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + c * this.b,\n                cNew = a * this.c + c * this.d,\n                eNew = a * this.e + c * this.f + e;\n            this.b = b * this.a + d * this.b;\n            this.d = b * this.c + d * this.d;\n            this.f = b * this.e + d * this.f + f;\n\n            this.a = aNew;\n            this.c = cNew;\n            this.e = eNew;\n            return this;\n        };\n        /*\\\n         * Matrix.invert\n         [ method ]\n         **\n         * Returns an inverted version of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.invert = function () {\n            var me = this,\n                x = me.a * me.d - me.b * me.c;\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n        };\n        /*\\\n         * Matrix.clone\n         [ method ]\n         **\n         * Returns a copy of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.clone = function () {\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n        };\n        /*\\\n         * Matrix.translate\n         [ method ]\n         **\n         * Translate the matrix\n         - x (number) horizontal offset distance\n         - y (number) vertical offset distance\n        \\*/\n        matrixproto.translate = function (x, y) {\n            this.e += x * this.a + y * this.c;\n            this.f += x * this.b + y * this.d;\n            return this;\n        };\n        /*\\\n         * Matrix.scale\n         [ method ]\n         **\n         * Scales the matrix\n         - x (number) amount to be scaled, with `1` resulting in no change\n         - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n         - cx (number) #optional horizontal origin point from which to scale\n         - cy (number) #optional vertical origin point from which to scale\n         * Default cx, cy is the middle point of the element.\n        \\*/\n        matrixproto.scale = function (x, y, cx, cy) {\n            y == null && (y = x);\n            (cx || cy) && this.translate(cx, cy);\n            this.a *= x;\n            this.b *= x;\n            this.c *= y;\n            this.d *= y;\n            (cx || cy) && this.translate(-cx, -cy);\n            return this;\n        };\n        /*\\\n         * Matrix.rotate\n         [ method ]\n         **\n         * Rotates the matrix\n         - a (number) angle of rotation, in degrees\n         - x (number) horizontal origin point from which to rotate\n         - y (number) vertical origin point from which to rotate\n        \\*/\n        matrixproto.rotate = function (a, x, y) {\n            a = Snap.rad(a);\n            x = x || 0;\n            y = y || 0;\n            var cos = +math.cos(a).toFixed(9),\n                sin = +math.sin(a).toFixed(9);\n            this.add(cos, sin, -sin, cos, x, y);\n            return this.add(1, 0, 0, 1, -x, -y);\n        };\n        /*\\\n         * Matrix.skewX\n         [ method ]\n         **\n         * Skews the matrix along the x-axis\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skewX = function (x) {\n            return this.skew(x, 0);\n        };\n        /*\\\n         * Matrix.skewY\n         [ method ]\n         **\n         * Skews the matrix along the y-axis\n         - y (number) Angle to skew along the y-axis (in degrees).\n        \\*/\n        matrixproto.skewY = function (y) {\n            return this.skew(0, y);\n        };\n        /*\\\n         * Matrix.skew\n         [ method ]\n         **\n         * Skews the matrix\n         - y (number) Angle to skew along the y-axis (in degrees).\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skew = function (x, y) {\n            x = x || 0;\n            y = y || 0;\n            x = Snap.rad(x);\n            y = Snap.rad(y);\n            var c = math.tan(x).toFixed(9);\n            var b = math.tan(y).toFixed(9);\n            return this.add(1, b, c, 1, 0, 0);\n        };\n        /*\\\n         * Matrix.x\n         [ method ]\n         **\n         * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n         - x (number)\n         - y (number)\n         = (number) x\n        \\*/\n        matrixproto.x = function (x, y) {\n            return x * this.a + y * this.c + this.e;\n        };\n        /*\\\n         * Matrix.y\n         [ method ]\n         **\n         * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n         - x (number)\n         - y (number)\n         = (number) y\n        \\*/\n        matrixproto.y = function (x, y) {\n            return x * this.b + y * this.d + this.f;\n        };\n        matrixproto.get = function (i) {\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n        };\n        matrixproto.toString = function () {\n            return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n        };\n        matrixproto.offset = function () {\n            return [this.e.toFixed(4), this.f.toFixed(4)];\n        };\n        function norm(a) {\n            return a[0] * a[0] + a[1] * a[1];\n        }\n        function normalize(a) {\n            var mag = math.sqrt(norm(a));\n            a[0] && (a[0] /= mag);\n            a[1] && (a[1] /= mag);\n        }\n        /*\\\n         * Matrix.determinant\n         [ method ]\n         **\n         * Finds determinant of the given matrix.\n         = (number) determinant\n        \\*/\n        matrixproto.determinant = function () {\n            return this.a * this.d - this.b * this.c;\n        };\n        /*\\\n         * Matrix.split\n         [ method ]\n         **\n         * Splits matrix into primitive transformations\n         = (object) in format:\n         o dx (number) translation by x\n         o dy (number) translation by y\n         o scalex (number) scale by x\n         o scaley (number) scale by y\n         o shear (number) shear\n         o rotate (number) rotation in deg\n         o isSimple (boolean) could it be represented via simple transformations\n        \\*/\n        matrixproto.split = function () {\n            var out = {};\n            // translation\n            out.dx = this.e;\n            out.dy = this.f;\n\n            // scale and shear\n            var row = [[this.a, this.b], [this.c, this.d]];\n            out.scalex = math.sqrt(norm(row[0]));\n            normalize(row[0]);\n\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n            out.scaley = math.sqrt(norm(row[1]));\n            normalize(row[1]);\n            out.shear /= out.scaley;\n\n            if (this.determinant() < 0) {\n                out.scalex = -out.scalex;\n            }\n\n            // rotation\n            var sin = row[0][1],\n                cos = row[1][1];\n            if (cos < 0) {\n                out.rotate = Snap.deg(math.acos(cos));\n                if (sin < 0) {\n                    out.rotate = 360 - out.rotate;\n                }\n            } else {\n                out.rotate = Snap.deg(math.asin(sin));\n            }\n\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n            return out;\n        };\n        /*\\\n         * Matrix.toTransformString\n         [ method ]\n         **\n         * Returns transform string that represents given matrix\n         = (string) transform string\n        \\*/\n        matrixproto.toTransformString = function (shorter) {\n            var s = shorter || this.split();\n            if (!+s.shear.toFixed(9)) {\n                s.scalex = +s.scalex.toFixed(4);\n                s.scaley = +s.scaley.toFixed(4);\n                s.rotate = +s.rotate.toFixed(4);\n                return  (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) +\n                        (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E) +\n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E);\n            } else {\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n            }\n        };\n    })(Matrix.prototype);\n    /*\\\n     * Snap.Matrix\n     [ method ]\n     **\n     * Matrix constructor, extend on your own risk.\n     * To create matrices use @Snap.matrix.\n    \\*/\n    Snap.Matrix = Matrix;\n    /*\\\n     * Snap.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns a matrix based on the given parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - svgMatrix (SVGMatrix)\n     = (object) @Matrix\n    \\*/\n    Snap.matrix = function (a, b, c, d, e, f) {\n        return new Matrix(a, b, c, d, e, f);\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var has = \"hasOwnProperty\",\n        make = Snap._.make,\n        wrap = Snap._.wrap,\n        is = Snap.is,\n        getSomeDefs = Snap._.getSomeDefs,\n        reURLValue = /^url\\((['\"]?)([^)]+)\\1\\)$/,\n        $ = Snap._.$,\n        URL = Snap.url,\n        Str = String,\n        separator = Snap._.separator,\n        E = \"\";\n    /*\\\n     * Snap.deurl\n     [ method ]\n     **\n     * Unwraps path from `\"url(<path>)\"`.\n     - value (string) url path\n     = (string) unwrapped path\n    \\*/\n    Snap.deurl = function (value) {\n        var res = String(value).match(reURLValue);\n        return res ? res[2] : value;\n    }\n    // Attributes event handlers\n    eve.on(\"snap.util.attr.mask\", function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value.type == \"mask\") {\n                var mask = value;\n            } else {\n                mask = make(\"mask\", getSomeDefs(this));\n                mask.node.appendChild(value.node);\n            }\n            !mask.node.id && $(mask.node, {\n                id: mask.id\n            });\n            $(this.node, {\n                mask: URL(mask.id)\n            });\n        }\n    });\n    (function (clipIt) {\n        eve.on(\"snap.util.attr.clip\", clipIt);\n        eve.on(\"snap.util.attr.clip-path\", clipIt);\n        eve.on(\"snap.util.attr.clipPath\", clipIt);\n    }(function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            var clip,\n                node = value.node;\n            while (node) {\n                if (node.nodeName === \"clipPath\") {\n                    clip = new Element(node);\n                    break;\n                }\n                if (node.nodeName === \"svg\") {\n                    clip = undefined;\n                    break;\n                }\n                node = node.parentNode;\n            }\n            if (!clip) {\n                clip = make(\"clipPath\", getSomeDefs(this));\n                clip.node.appendChild(value.node);\n                !clip.node.id && $(clip.node, {\n                    id: clip.id\n                });\n            }\n            $(this.node, {\n                \"clip-path\": URL(clip.node.id || clip.id)\n            });\n        }\n    }));\n    function fillStroke(name) {\n        return function (value) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1 &&\n                (value.node.firstChild.tagName == \"radialGradient\" ||\n                value.node.firstChild.tagName == \"linearGradient\" ||\n                value.node.firstChild.tagName == \"pattern\")) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value instanceof Element) {\n                if (value.type == \"radialGradient\" || value.type == \"linearGradient\"\n                   || value.type == \"pattern\") {\n                    if (!value.node.id) {\n                        $(value.node, {\n                            id: value.id\n                        });\n                    }\n                    var fill = URL(value.node.id);\n                } else {\n                    fill = value.attr(name);\n                }\n            } else {\n                fill = Snap.color(value);\n                if (fill.error) {\n                    var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n                    if (grad) {\n                        if (!grad.node.id) {\n                            $(grad.node, {\n                                id: grad.id\n                            });\n                        }\n                        fill = URL(grad.node.id);\n                    } else {\n                        fill = value;\n                    }\n                } else {\n                    fill = Str(fill);\n                }\n            }\n            var attrs = {};\n            attrs[name] = fill;\n            $(this.node, attrs);\n            this.node.style[name] = E;\n        };\n    }\n    eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n    eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n    eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n        string = Str(string);\n        var tokens = string.match(gradrg);\n        if (!tokens) {\n            return null;\n        }\n        var type = tokens[1],\n            params = tokens[2],\n            stops = tokens[3];\n        params = params.split(/\\s*,\\s*/).map(function (el) {\n            return +el == el ? +el : el;\n        });\n        if (params.length == 1 && params[0] == 0) {\n            params = [];\n        }\n        stops = stops.split(\"-\");\n        stops = stops.map(function (el) {\n            el = el.split(\":\");\n            var out = {\n                color: el[0]\n            };\n            if (el[1]) {\n                out.offset = parseFloat(el[1]);\n            }\n            return out;\n        });\n        var len = stops.length,\n            start = 0,\n            j = 0;\n        function seed(i, end) {\n            var step = (end - start) / (i - j);\n            for (var k = j; k < i; k++) {\n                stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n            }\n            j = i;\n            start = end;\n        }\n        len--;\n        for (var i = 0; i < len; i++) if (\"offset\" in stops[i]) {\n            seed(i, stops[i].offset);\n        }\n        stops[len].offset = stops[len].offset || 100;\n        seed(len, stops[len].offset);\n        return {\n            type: type,\n            params: params,\n            stops: stops\n        };\n    });\n\n    eve.on(\"snap.util.attr.d\", function (value) {\n        eve.stop();\n        if (is(value, \"array\") && is(value[0], \"array\")) {\n            value = Snap.path.toString.call(value);\n        }\n        value = Str(value);\n        if (value.match(/[ruo]/i)) {\n            value = Snap.path.toAbsolute(value);\n        }\n        $(this.node, {d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.#text\", function (value) {\n        eve.stop();\n        value = Str(value);\n        var txt = glob.doc.createTextNode(value);\n        while (this.node.firstChild) {\n            this.node.removeChild(this.node.firstChild);\n        }\n        this.node.appendChild(txt);\n    })(-1);\n    eve.on(\"snap.util.attr.path\", function (value) {\n        eve.stop();\n        this.attr({d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.class\", function (value) {\n        eve.stop();\n        this.node.className.baseVal = value;\n    })(-1);\n    eve.on(\"snap.util.attr.viewBox\", function (value) {\n        var vb;\n        if (is(value, \"object\") && \"x\" in value) {\n            vb = [value.x, value.y, value.width, value.height].join(\" \");\n        } else if (is(value, \"array\")) {\n            vb = value.join(\" \");\n        } else {\n            vb = value;\n        }\n        $(this.node, {\n            viewBox: vb\n        });\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.transform\", function (value) {\n        this.transform(value);\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.r\", function (value) {\n        if (this.type == \"rect\") {\n            eve.stop();\n            $(this.node, {\n                rx: value,\n                ry: value\n            });\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.textpath\", function (value) {\n        eve.stop();\n        if (this.type == \"text\") {\n            var id, tp, node;\n            if (!value && this.textPath) {\n                tp = this.textPath;\n                while (tp.node.firstChild) {\n                    this.node.appendChild(tp.node.firstChild);\n                }\n                tp.remove();\n                delete this.textPath;\n                return;\n            }\n            if (is(value, \"string\")) {\n                var defs = getSomeDefs(this),\n                    path = wrap(defs.parentNode).path(value);\n                defs.appendChild(path.node);\n                id = path.id;\n                path.attr({id: id});\n            } else {\n                value = wrap(value);\n                if (value instanceof Element) {\n                    id = value.attr(\"id\");\n                    if (!id) {\n                        id = value.id;\n                        value.attr({id: id});\n                    }\n                }\n            }\n            if (id) {\n                tp = this.textPath;\n                node = this.node;\n                if (tp) {\n                    tp.attr({\"xlink:href\": \"#\" + id});\n                } else {\n                    tp = $(\"textPath\", {\n                        \"xlink:href\": \"#\" + id\n                    });\n                    while (node.firstChild) {\n                        tp.appendChild(node.firstChild);\n                    }\n                    node.appendChild(tp);\n                    this.textPath = wrap(tp);\n                }\n            }\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.text\", function (value) {\n        if (this.type == \"text\") {\n            var i = 0,\n                node = this.node,\n                tuner = function (chunk) {\n                    var out = $(\"tspan\");\n                    if (is(chunk, \"array\")) {\n                        for (var i = 0; i < chunk.length; i++) {\n                            out.appendChild(tuner(chunk[i]));\n                        }\n                    } else {\n                        out.appendChild(glob.doc.createTextNode(chunk));\n                    }\n                    out.normalize && out.normalize();\n                    return out;\n                };\n            while (node.firstChild) {\n                node.removeChild(node.firstChild);\n            }\n            var tuned = tuner(value);\n            while (tuned.firstChild) {\n                node.appendChild(tuned.firstChild);\n            }\n        }\n        eve.stop();\n    })(-1);\n    function setFontSize(value) {\n        eve.stop();\n        if (value == +value) {\n            value += \"px\";\n        }\n        this.node.style.fontSize = value;\n    }\n    eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n    eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n\n\n    eve.on(\"snap.util.getattr.transform\", function () {\n        eve.stop();\n        return this.transform();\n    })(-1);\n    eve.on(\"snap.util.getattr.textpath\", function () {\n        eve.stop();\n        return this.textPath;\n    })(-1);\n    // Markers\n    (function () {\n        function getter(end) {\n            return function () {\n                eve.stop();\n                var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n                if (style == \"none\") {\n                    return style;\n                } else {\n                    return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n                }\n            };\n        }\n        function setter(end) {\n            return function (value) {\n                eve.stop();\n                var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n                if (value == \"\" || !value) {\n                    this.node.style[name] = \"none\";\n                    return;\n                }\n                if (value.type == \"marker\") {\n                    var id = value.node.id;\n                    if (!id) {\n                        $(value.node, {id: value.id});\n                    }\n                    this.node.style[name] = URL(id);\n                    return;\n                }\n            };\n        }\n        eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n    }());\n    eve.on(\"snap.util.getattr.r\", function () {\n        if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n            eve.stop();\n            return $(this.node, \"rx\");\n        }\n    })(-1);\n    function textExtract(node) {\n        var out = [];\n        var children = node.childNodes;\n        for (var i = 0, ii = children.length; i < ii; i++) {\n            var chi = children[i];\n            if (chi.nodeType == 3) {\n                out.push(chi.nodeValue);\n            }\n            if (chi.tagName == \"tspan\") {\n                if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n                    out.push(chi.firstChild.nodeValue);\n                } else {\n                    out.push(textExtract(chi));\n                }\n            }\n        }\n        return out;\n    }\n    eve.on(\"snap.util.getattr.text\", function () {\n        if (this.type == \"text\" || this.type == \"tspan\") {\n            eve.stop();\n            var out = textExtract(this.node);\n            return out.length == 1 ? out[0] : out;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.#text\", function () {\n        return this.node.textContent;\n    })(-1);\n    eve.on(\"snap.util.getattr.fill\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.fill\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.stroke\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.stroke\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.viewBox\", function () {\n        eve.stop();\n        var vb = $(this.node, \"viewBox\");\n        if (vb) {\n            vb = vb.split(separator);\n            return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.points\", function () {\n        var p = $(this.node, \"points\");\n        eve.stop();\n        if (p) {\n            return p.split(separator);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.path\", function () {\n        var p = $(this.node, \"d\");\n        eve.stop();\n        return p;\n    })(-1);\n    eve.on(\"snap.util.getattr.class\", function () {\n        return this.node.className.baseVal;\n    })(-1);\n    function getFontSize() {\n        eve.stop();\n        return this.node.style.fontSize;\n    }\n    eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n    eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var rgNotSpace = /\\S+/g,\n        rgBadSpace = /[\\t\\r\\n\\f]/g,\n        rgTrim = /(^\\s+|\\s+$)/g,\n        Str = String,\n        elproto = Element.prototype;\n    /*\\\n     * Element.addClass\n     [ method ]\n     **\n     * Adds given class name or list of class names to the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.addClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n\n        if (classes.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (!~pos) {\n                    curClasses.push(clazz);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.removeClass\n     [ method ]\n     **\n     * Removes given class name or list of class names from the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.removeClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        if (curClasses.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (~pos) {\n                    curClasses.splice(pos, 1);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.hasClass\n     [ method ]\n     **\n     * Checks if the element has a given class name in the list of class names applied to it.\n     - value (string) class name\n     **\n     = (boolean) `true` if the element has given class\n    \\*/\n    elproto.hasClass = function (value) {\n        var elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [];\n        return !!~curClasses.indexOf(value);\n    };\n    /*\\\n     * Element.toggleClass\n     [ method ]\n     **\n     * Add or remove one or more classes from the element, depending on either\n     * the class’s presence or the value of the `flag` argument.\n     - value (string) class name or space separated list of class names\n     - flag (boolean) value to determine whether the class should be added or removed\n     **\n     = (Element) original element.\n    \\*/\n    elproto.toggleClass = function (value, flag) {\n        if (flag != null) {\n            if (flag) {\n                return this.addClass(value);\n            } else {\n                return this.removeClass(value);\n            }\n        }\n        var classes = (value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        j = 0;\n        while (clazz = classes[j++]) {\n            pos = curClasses.indexOf(clazz);\n            if (~pos) {\n                curClasses.splice(pos, 1);\n            } else {\n                curClasses.push(clazz);\n            }\n        }\n\n        finalValue = curClasses.join(\" \");\n        if (className != finalValue) {\n            elem.className.baseVal = finalValue;\n        }\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var operators = {\n            \"+\": function (x, y) {\n                    return x + y;\n                },\n            \"-\": function (x, y) {\n                    return x - y;\n                },\n            \"/\": function (x, y) {\n                    return x / y;\n                },\n            \"*\": function (x, y) {\n                    return x * y;\n                }\n        },\n        Str = String,\n        reUnit = /[a-z]+$/i,\n        reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    eve.on(\"snap.util.attr\", function (val) {\n        var plus = Str(val).match(reAddon);\n        if (plus) {\n            var evnt = eve.nt(),\n                name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n                a = this.attr(name),\n                atr = {};\n            eve.stop();\n            var unit = plus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[plus[1]];\n            if (aUnit && aUnit == unit) {\n                val = op(parseFloat(a), +plus[2]);\n            } else {\n                a = this.asPX(name);\n                val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n            }\n            if (isNaN(a) || isNaN(val)) {\n                return;\n            }\n            atr[name] = val;\n            this.attr(atr);\n        }\n    })(-10);\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this,\n            bplus = Str(b).match(reAddon);\n        if (bplus) {\n            eve.stop();\n            var unit = bplus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[bplus[1]];\n            if (aUnit && aUnit == unit) {\n                return {\n                    from: parseFloat(a),\n                    to: op(parseFloat(a), +bplus[2]),\n                    f: getUnit(aUnit)\n                };\n            } else {\n                a = this.asPX(name);\n                return {\n                    from: a,\n                    to: op(a, this.asPX(name, bplus[2] + unit)),\n                    f: getNumber\n                };\n            }\n        }\n    })(-10);\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var proto = Paper.prototype,\n        is = Snap.is;\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - rx (number) #optional horizontal radius for rounded corners, default is 0\n     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n     = (object) the `rect` element\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n    proto.rect = function (x, y, w, h, rx, ry) {\n        var attr;\n        if (ry == null) {\n            ry = rx;\n        }\n        if (is(x, \"object\") && x == \"[object Object]\") {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                width: w,\n                height: h\n            };\n            if (rx != null) {\n                attr.rx = rx;\n                attr.ry = ry;\n            }\n        }\n        return this.el(\"rect\", attr);\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) the `circle` element\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n    proto.circle = function (cx, cy, r) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr = {\n                cx: cx,\n                cy: cy,\n                r: r\n            };\n        }\n        return this.el(\"circle\", attr);\n    };\n\n    var preload = (function () {\n        function onerror() {\n            this.parentNode.removeChild(this);\n        }\n        return function (src, f) {\n            var img = glob.doc.createElement(\"img\"),\n                body = glob.doc.body;\n            img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n            img.onload = function () {\n                f.call(img);\n                img.onload = img.onerror = null;\n                body.removeChild(img);\n            };\n            img.onerror = onerror;\n            body.appendChild(img);\n            img.src = src;\n        };\n    }());\n\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Places an image on the surface\n     **\n     - src (string) URI of the source image\n     - x (number) x offset position\n     - y (number) y offset position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) the `image` element\n     * or\n     = (object) Snap element object with type `image`\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n    proto.image = function (src, x, y, width, height) {\n        var el = this.el(\"image\");\n        if (is(src, \"object\") && \"src\" in src) {\n            el.attr(src);\n        } else if (src != null) {\n            var set = {\n                \"xlink:href\": src,\n                preserveAspectRatio: \"none\"\n            };\n            if (x != null && y != null) {\n                set.x = x;\n                set.y = y;\n            }\n            if (width != null && height != null) {\n                set.width = width;\n                set.height = height;\n            } else {\n                preload(src, function () {\n                    Snap._.$(el.node, {\n                        width: this.offsetWidth,\n                        height: this.offsetHeight\n                    });\n                });\n            }\n            Snap._.$(el.node, set);\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) the `ellipse` element\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n    proto.ellipse = function (cx, cy, rx, ry) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr ={\n                cx: cx,\n                cy: cy,\n                rx: rx,\n                ry: ry\n            };\n        }\n        return this.el(\"ellipse\", attr);\n    };\n    // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a `<path>` element using the given string as the path's definition\n     - pathString (string) #optional path string in SVG format\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n     | \"M10,20L30,40\"\n     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n    \\*/\n    proto.path = function (d) {\n        var attr;\n        if (is(d, \"object\") && !is(d, \"array\")) {\n            attr = d;\n        } else if (d) {\n            attr = {d: d};\n        }\n        return this.el(\"path\", attr);\n    };\n    /*\\\n     * Paper.g\n     [ method ]\n     **\n     * Creates a group element\n     **\n     - varargs (…) #optional elements to nest within the group\n     = (object) the `g` element\n     **\n     > Usage\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g(c2, c1); // note that the order of elements is different\n     * or\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g();\n     | g.add(c2, c1);\n    \\*/\n    /*\\\n     * Paper.group\n     [ method ]\n     **\n     * See @Paper.g\n    \\*/\n    proto.group = proto.g = function (first) {\n        var attr,\n            el = this.el(\"g\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.svg\n     [ method ]\n     **\n     * Creates a nested SVG element.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `svg` element\n     **\n    \\*/\n    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n        var attrs = {};\n        if (is(x, \"object\") && y == null) {\n            attrs = x;\n        } else {\n            if (x != null) {\n                attrs.x = x;\n            }\n            if (y != null) {\n                attrs.y = y;\n            }\n            if (width != null) {\n                attrs.width = width;\n            }\n            if (height != null) {\n                attrs.height = height;\n            }\n            if (vbx != null && vby != null && vbw != null && vbh != null) {\n                attrs.viewBox = [vbx, vby, vbw, vbh];\n            }\n        }\n        return this.el(\"svg\", attrs);\n    };\n    /*\\\n     * Paper.mask\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n     **\n     = (object) the `mask` element\n     **\n    \\*/\n    proto.mask = function (first) {\n        var attr,\n            el = this.el(\"mask\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ptrn\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `pattern` element\n     **\n    \\*/\n    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n        if (is(x, \"object\")) {\n            var attr = x;\n        } else {\n            attr = {patternUnits: \"userSpaceOnUse\"};\n            if (x) {\n                attr.x = x;\n            }\n            if (y) {\n                attr.y = y;\n            }\n            if (width != null) {\n                attr.width = width;\n            }\n            if (height != null) {\n                attr.height = height;\n            }\n            if (vx != null && vy != null && vw != null && vh != null) {\n                attr.viewBox = [vx, vy, vw, vh];\n            } else {\n                attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n            }\n        }\n        return this.el(\"pattern\", attr);\n    };\n    /*\\\n     * Paper.use\n     [ method ]\n     **\n     * Creates a <use> element.\n     - id (string) @optional id of element to link\n     * or\n     - id (Element) @optional element to link\n     **\n     = (object) the `use` element\n     **\n    \\*/\n    proto.use = function (id) {\n        if (id != null) {\n            if (id instanceof Element) {\n                if (!id.attr(\"id\")) {\n                    id.attr({id: Snap._.id(id)});\n                }\n                id = id.attr(\"id\");\n            }\n            if (String(id).charAt() == \"#\") {\n                id = id.substring(1);\n            }\n            return this.el(\"use\", {\"xlink:href\": \"#\" + id});\n        } else {\n            return Element.prototype.use.call(this);\n        }\n    };\n    /*\\\n     * Paper.symbol\n     [ method ]\n     **\n     * Creates a <symbol> element.\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     = (object) the `symbol` element\n     **\n    \\*/\n    proto.symbol = function (vx, vy, vw, vh) {\n        var attr = {};\n        if (vx != null && vy != null && vw != null && vh != null) {\n            attr.viewBox = [vx, vy, vw, vh];\n        }\n\n        return this.el(\"symbol\", attr);\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n     = (object) the `text` element\n     **\n     > Usage\n     | var t1 = paper.text(50, 50, \"Snap\");\n     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n     | // Text path usage\n     | t1.attr({textpath: \"M10,10L100,100\"});\n     | // or\n     | var pth = paper.path(\"M10,10L100,100\");\n     | t1.attr({textpath: pth});\n    \\*/\n    proto.text = function (x, y, text) {\n        var attr = {};\n        if (is(x, \"object\")) {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                text: text || \"\"\n            };\n        }\n        return this.el(\"text\", attr);\n    };\n    /*\\\n     * Paper.line\n     [ method ]\n     **\n     * Draws a line\n     **\n     - x1 (number) x coordinate position of the start\n     - y1 (number) y coordinate position of the start\n     - x2 (number) x coordinate position of the end\n     - y2 (number) y coordinate position of the end\n     = (object) the `line` element\n     **\n     > Usage\n     | var t1 = paper.line(50, 50, 100, 100);\n    \\*/\n    proto.line = function (x1, y1, x2, y2) {\n        var attr = {};\n        if (is(x1, \"object\")) {\n            attr = x1;\n        } else if (x1 != null) {\n            attr = {\n                x1: x1,\n                x2: x2,\n                y1: y1,\n                y2: y2\n            };\n        }\n        return this.el(\"line\", attr);\n    };\n    /*\\\n     * Paper.polyline\n     [ method ]\n     **\n     * Draws a polyline\n     **\n     - points (array) array of points\n     * or\n     - varargs (…) points\n     = (object) the `polyline` element\n     **\n     > Usage\n     | var p1 = paper.polyline([10, 10, 100, 100]);\n     | var p2 = paper.polyline(10, 10, 100, 100);\n    \\*/\n    proto.polyline = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polyline\", attr);\n    };\n    /*\\\n     * Paper.polygon\n     [ method ]\n     **\n     * Draws a polygon. See @Paper.polyline\n    \\*/\n    proto.polygon = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polygon\", attr);\n    };\n    // gradients\n    (function () {\n        var $ = Snap._.$;\n        // gradients' helpers\n        /*\\\n         * Element.stops\n         [ method ]\n         **\n         * Only for gradients!\n         * Returns array of gradient stops elements.\n         = (array) the stops array.\n        \\*/\n        function Gstops() {\n            return this.selectAll(\"stop\");\n        }\n        /*\\\n         * Element.addStop\n         [ method ]\n         **\n         * Only for gradients!\n         * Adds another stop to the gradient.\n         - color (string) stops color\n         - offset (number) stops offset 0..100\n         = (object) gradient element\n        \\*/\n        function GaddStop(color, offset) {\n            var stop = $(\"stop\"),\n                attr = {\n                    offset: +offset + \"%\"\n                };\n            color = Snap.color(color);\n            attr[\"stop-color\"] = color.hex;\n            if (color.opacity < 1) {\n                attr[\"stop-opacity\"] = color.opacity;\n            }\n            $(stop, attr);\n            var stops = this.stops(),\n                inserted;\n            for (var i = 0; i < stops.length; i++) {\n                var stopOffset = parseFloat(stops[i].attr(\"offset\"));\n                if (stopOffset > offset) {\n                    this.node.insertBefore(stop, stops[i].node);\n                    inserted = true;\n                    break;\n                }\n            }\n            if (!inserted) {\n                this.node.appendChild(stop);\n            }\n            return this;\n        }\n        function GgetBBox() {\n            if (this.type == \"linearGradient\") {\n                var x1 = $(this.node, \"x1\") || 0,\n                    x2 = $(this.node, \"x2\") || 1,\n                    y1 = $(this.node, \"y1\") || 0,\n                    y2 = $(this.node, \"y2\") || 0;\n                return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n            } else {\n                var cx = this.node.cx || .5,\n                    cy = this.node.cy || .5,\n                    r = this.node.r || 0;\n                return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n            }\n        }\n        /*\\\n         * Element.setStops\n         [ method ]\n         **\n         * Only for gradients!\n         * Updates stops of the gradient based on passed gradient descriptor. See @Ppaer.gradient\n         - str (string) gradient descriptor part after `()`.\n         = (object) gradient element\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         | g.setStops(\"#fff-#000-#f00-#fc0\");\n        \\*/\n        function GsetStops(str) {\n            var grad = str,\n                stops = this.stops();\n            if (typeof str == \"string\") {\n                grad = eve(\"snap.util.grad.parse\", null, \"l(0,0,0,1)\" + str).firstDefined().stops;\n            }\n            if (!Snap.is(grad, \"array\")) {\n                return;\n            }\n            for (var i = 0; i < stops.length; i++) {\n                if (grad[i]) {\n                    var color = Snap.color(grad[i].color),\n                        attr = {\"offset\": grad[i].offset + \"%\"};\n                    attr[\"stop-color\"] = color.hex;\n                    if (color.opacity < 1) {\n                        attr[\"stop-opacity\"] = color.opacity;\n                    }\n                    stops[i].attr(attr);\n                } else {\n                    stops[i].remove();\n                }\n            }\n            for (i = stops.length; i < grad.length; i++) {\n                this.addStop(grad[i].color, grad[i].offset);\n            }\n            return this;\n        }\n        function gradient(defs, str) {\n            var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n                el;\n            if (!grad) {\n                return null;\n            }\n            grad.params.unshift(defs);\n            if (grad.type.toLowerCase() == \"l\") {\n                el = gradientLinear.apply(0, grad.params);\n            } else {\n                el = gradientRadial.apply(0, grad.params);\n            }\n            if (grad.type != grad.type.toLowerCase()) {\n                $(el.node, {\n                    gradientUnits: \"userSpaceOnUse\"\n                });\n            }\n            var stops = grad.stops,\n                len = stops.length;\n            for (var i = 0; i < len; i++) {\n                var stop = stops[i];\n                el.addStop(stop.color, stop.offset);\n            }\n            return el;\n        }\n        function gradientLinear(defs, x1, y1, x2, y2) {\n            var el = Snap._.make(\"linearGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            el.setStops = GsetStops;\n            if (x1 != null) {\n                $(el.node, {\n                    x1: x1,\n                    y1: y1,\n                    x2: x2,\n                    y2: y2\n                });\n            }\n            return el;\n        }\n        function gradientRadial(defs, cx, cy, r, fx, fy) {\n            var el = Snap._.make(\"radialGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            if (cx != null) {\n                $(el.node, {\n                    cx: cx,\n                    cy: cy,\n                    r: r\n                });\n            }\n            if (fx != null && fy != null) {\n                $(el.node, {\n                    fx: fx,\n                    fy: fy\n                });\n            }\n            return el;\n        }\n        /*\\\n         * Paper.gradient\n         [ method ]\n         **\n         * Creates a gradient element\n         **\n         - gradient (string) gradient descriptor\n         > Gradient Descriptor\n         * The gradient descriptor is an expression formatted as\n         * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n         * either linear or radial.  The uppercase `L` or `R` letters\n         * indicate absolute coordinates offset from the SVG surface.\n         * Lowercase `l` or `r` letters indicate coordinates\n         * calculated relative to the element to which the gradient is\n         * applied.  Coordinates specify a linear gradient vector as\n         * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n         * `r` and optional `fx`, `fy` specifying a focal point away\n         * from the center of the circle. Specify `<colors>` as a list\n         * of dash-separated CSS color values.  Each color may be\n         * followed by a custom offset value, separated with a colon\n         * character.\n         > Examples\n         * Linear gradient, relative from top-left corner to bottom-right\n         * corner, from black through red to white:\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         * Linear gradient, absolute from (0, 0) to (100, 100), from black\n         * through red at 25% to white:\n         | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n         * Radial gradient, relative from the center of the element with radius\n         * half the width, from black to white:\n         | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n         * To apply the gradient:\n         | paper.circle(50, 50, 40).attr({\n         |     fill: g\n         | });\n         = (object) the `gradient` element\n        \\*/\n        proto.gradient = function (str) {\n            return gradient(this.defs, str);\n        };\n        proto.gradientLinear = function (x1, y1, x2, y2) {\n            return gradientLinear(this.defs, x1, y1, x2, y2);\n        };\n        proto.gradientRadial = function (cx, cy, r, fx, fy) {\n            return gradientRadial(this.defs, cx, cy, r, fx, fy);\n        };\n        /*\\\n         * Paper.toString\n         [ method ]\n         **\n         * Returns SVG code for the @Paper\n         = (string) SVG code for the @Paper\n        \\*/\n        proto.toString = function () {\n            var doc = this.node.ownerDocument,\n                f = doc.createDocumentFragment(),\n                d = doc.createElement(\"div\"),\n                svg = this.node.cloneNode(true),\n                res;\n            f.appendChild(d);\n            d.appendChild(svg);\n            Snap._.$(svg, {xmlns: \"http://www.w3.org/2000/svg\"});\n            res = d.innerHTML;\n            f.removeChild(f.firstChild);\n            return res;\n        };\n        /*\\\n         * Paper.toDataURL\n         [ method ]\n         **\n         * Returns SVG code for the @Paper as Data URI string.\n         = (string) Data URI string\n        \\*/\n        proto.toDataURL = function () {\n            if (window && window.btoa) {\n                return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n            }\n        };\n        /*\\\n         * Paper.clear\n         [ method ]\n         **\n         * Removes all child nodes of the paper, except <defs>.\n        \\*/\n        proto.clear = function () {\n            var node = this.node.firstChild,\n                next;\n            while (node) {\n                next = node.nextSibling;\n                if (node.tagName != \"defs\") {\n                    node.parentNode.removeChild(node);\n                } else {\n                    proto.clear.call({node: node});\n                }\n                node = next;\n            }\n        };\n    }());\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        clone = Snap._.clone,\n        has = \"hasOwnProperty\",\n        p2s = /,?([a-z]),?/gi,\n        toFloat = parseFloat,\n        math = Math,\n        PI = math.PI,\n        mmin = math.min,\n        mmax = math.max,\n        pow = math.pow,\n        abs = math.abs;\n    function paths(ps) {\n        var p = paths.ps = paths.ps || {};\n        if (p[ps]) {\n            p[ps].sleep = 100;\n        } else {\n            p[ps] = {\n                sleep: 100\n            };\n        }\n        setTimeout(function () {\n            for (var key in p) if (p[has](key) && key != ps) {\n                p[key].sleep--;\n                !p[key].sleep && delete p[key];\n            }\n        });\n        return p[ps];\n    }\n    function box(x, y, width, height) {\n        if (x == null) {\n            x = y = width = height = 0;\n        }\n        if (y == null) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            w: width,\n            height: height,\n            h: height,\n            x2: x + width,\n            y2: y + height,\n            cx: x + width / 2,\n            cy: y + height / 2,\n            r1: math.min(width, height) / 2,\n            r2: math.max(width, height) / 2,\n            r0: math.sqrt(width * width + height * height) / 2,\n            path: rectPath(x, y, width, height),\n            vb: [x, y, width, height].join(\" \")\n        };\n    }\n    function toString() {\n        return this.join(\",\").replace(p2s, \"$1\");\n    }\n    function pathClone(pathArray) {\n        var res = clone(pathArray);\n        res.toString = toString;\n        return res;\n    }\n    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n        if (length == null) {\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n        } else {\n            return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y,\n                getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n        }\n    }\n    function getLengthFactory(istotal, subpath) {\n        function O(val) {\n            return +(+val).toFixed(3);\n        }\n        return Snap._.cacher(function (path, length, onlystart) {\n            if (path instanceof Element) {\n                path = path.attr(\"d\");\n            }\n            path = path2curve(path);\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\n                len = 0;\n            for (var i = 0, ii = path.length; i < ii; i++) {\n                p = path[i];\n                if (p[0] == \"M\") {\n                    x = +p[1];\n                    y = +p[2];\n                } else {\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                    if (len + l > length) {\n                        if (subpath && !subpaths.start) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            sp += [\n                                \"C\" + O(point.start.x),\n                                O(point.start.y),\n                                O(point.m.x),\n                                O(point.m.y),\n                                O(point.x),\n                                O(point.y)\n                            ];\n                            if (onlystart) {return sp;}\n                            subpaths.start = sp;\n                            sp = [\n                                \"M\" + O(point.x),\n                                O(point.y) + \"C\" + O(point.n.x),\n                                O(point.n.y),\n                                O(point.end.x),\n                                O(point.end.y),\n                                O(p[5]),\n                                O(p[6])\n                            ].join();\n                            len += l;\n                            x = +p[5];\n                            y = +p[6];\n                            continue;\n                        }\n                        if (!istotal && !subpath) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            return point;\n                        }\n                    }\n                    len += l;\n                    x = +p[5];\n                    y = +p[6];\n                }\n                sp += p.shift() + p;\n            }\n            subpaths.end = sp;\n            point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n            return point;\n        }, null, Snap._.clone);\n    }\n    var getTotalLength = getLengthFactory(1),\n        getPointAtLength = getLengthFactory(),\n        getSubpathsAtLength = getLengthFactory(0, 1);\n    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t,\n            t13 = pow(t1, 3),\n            t12 = pow(t1, 2),\n            t2 = t * t,\n            t3 = t2 * t,\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n            ax = t1 * p1x + t * c1x,\n            ay = t1 * p1y + t * c1y,\n            cx = t1 * c2x + t * p2x,\n            cy = t1 * c2y + t * p2y,\n            alpha = 90 - math.atan2(mx - nx, my - ny) * 180 / PI;\n        // (mx > nx || my < ny) && (alpha += 180);\n        return {\n            x: x,\n            y: y,\n            m: {x: mx, y: my},\n            n: {x: nx, y: ny},\n            start: {x: ax, y: ay},\n            end: {x: cx, y: cy},\n            alpha: alpha\n        };\n    }\n    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n        if (!Snap.is(p1x, \"array\")) {\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n        }\n        var bbox = curveDim.apply(null, p1x);\n        return box(\n            bbox.min.x,\n            bbox.min.y,\n            bbox.max.x - bbox.min.x,\n            bbox.max.y - bbox.min.y\n        );\n    }\n    function isPointInsideBBox(bbox, x, y) {\n        return  x >= bbox.x &&\n                x <= bbox.x + bbox.width &&\n                y >= bbox.y &&\n                y <= bbox.y + bbox.height;\n    }\n    function isBBoxIntersect(bbox1, bbox2) {\n        bbox1 = box(bbox1);\n        bbox2 = box(bbox2);\n        return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n                || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n                || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n    }\n    function base3(t, p1, p2, p3, p4) {\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n        return t * t2 - 3 * p1 + 3 * p2;\n    }\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n        if (z == null) {\n            z = 1;\n        }\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\n        var z2 = z / 2,\n            n = 12,\n            Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n            sum = 0;\n        for (var i = 0; i < n; i++) {\n            var ct = z2 * Tvalues[i] + z2,\n                xbase = base3(ct, x1, x2, x3, x4),\n                ybase = base3(ct, y1, y2, y3, y4),\n                comb = xbase * xbase + ybase * ybase;\n            sum += Cvalues[i] * math.sqrt(comb);\n        }\n        return z2 * sum;\n    }\n    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n            return;\n        }\n        var t = 1,\n            step = t / 2,\n            t2 = t - step,\n            l,\n            e = .01;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        while (abs(l - ll) > e) {\n            step /= 2;\n            t2 += (l < ll ? 1 : -1) * step;\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        }\n        return t2;\n    }\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (\n            mmax(x1, x2) < mmin(x3, x4) ||\n            mmin(x1, x2) > mmax(x3, x4) ||\n            mmax(y1, y2) < mmin(y3, y4) ||\n            mmin(y1, y2) > mmax(y3, y4)\n        ) {\n            return;\n        }\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n        if (!denominator) {\n            return;\n        }\n        var px = nx / denominator,\n            py = ny / denominator,\n            px2 = +px.toFixed(2),\n            py2 = +py.toFixed(2);\n        if (\n            px2 < +mmin(x1, x2).toFixed(2) ||\n            px2 > +mmax(x1, x2).toFixed(2) ||\n            px2 < +mmin(x3, x4).toFixed(2) ||\n            px2 > +mmax(x3, x4).toFixed(2) ||\n            py2 < +mmin(y1, y2).toFixed(2) ||\n            py2 > +mmax(y1, y2).toFixed(2) ||\n            py2 < +mmin(y3, y4).toFixed(2) ||\n            py2 > +mmax(y3, y4).toFixed(2)\n        ) {\n            return;\n        }\n        return {x: px, y: py};\n    }\n    function inter(bez1, bez2) {\n        return interHelper(bez1, bez2);\n    }\n    function interCount(bez1, bez2) {\n        return interHelper(bez1, bez2, 1);\n    }\n    function interHelper(bez1, bez2, justCount) {\n        var bbox1 = bezierBBox(bez1),\n            bbox2 = bezierBBox(bez2);\n        if (!isBBoxIntersect(bbox1, bbox2)) {\n            return justCount ? 0 : [];\n        }\n        var l1 = bezlen.apply(0, bez1),\n            l2 = bezlen.apply(0, bez2),\n            n1 = ~~(l1 / 8),\n            n2 = ~~(l2 / 8),\n            dots1 = [],\n            dots2 = [],\n            xy = {},\n            res = justCount ? 0 : [];\n        for (var i = 0; i < n1 + 1; i++) {\n            var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n            dots1.push({x: p.x, y: p.y, t: i / n1});\n        }\n        for (i = 0; i < n2 + 1; i++) {\n            p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n            dots2.push({x: p.x, y: p.y, t: i / n2});\n        }\n        for (i = 0; i < n1; i++) {\n            for (var j = 0; j < n2; j++) {\n                var di = dots1[i],\n                    di1 = dots1[i + 1],\n                    dj = dots2[j],\n                    dj1 = dots2[j + 1],\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n                if (is) {\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n                        continue;\n                    }\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n                    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n                        if (justCount) {\n                            res++;\n                        } else {\n                            res.push({\n                                x: is.x,\n                                y: is.y,\n                                t1: t1,\n                                t2: t2\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function pathIntersection(path1, path2) {\n        return interPathHelper(path1, path2);\n    }\n    function pathIntersectionNumber(path1, path2) {\n        return interPathHelper(path1, path2, 1);\n    }\n    function interPathHelper(path1, path2, justCount) {\n        path1 = path2curve(path1);\n        path2 = path2curve(path2);\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n            res = justCount ? 0 : [];\n        for (var i = 0, ii = path1.length; i < ii; i++) {\n            var pi = path1[i];\n            if (pi[0] == \"M\") {\n                x1 = x1m = pi[1];\n                y1 = y1m = pi[2];\n            } else {\n                if (pi[0] == \"C\") {\n                    bez1 = [x1, y1].concat(pi.slice(1));\n                    x1 = bez1[6];\n                    y1 = bez1[7];\n                } else {\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n                    x1 = x1m;\n                    y1 = y1m;\n                }\n                for (var j = 0, jj = path2.length; j < jj; j++) {\n                    var pj = path2[j];\n                    if (pj[0] == \"M\") {\n                        x2 = x2m = pj[1];\n                        y2 = y2m = pj[2];\n                    } else {\n                        if (pj[0] == \"C\") {\n                            bez2 = [x2, y2].concat(pj.slice(1));\n                            x2 = bez2[6];\n                            y2 = bez2[7];\n                        } else {\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                            x2 = x2m;\n                            y2 = y2m;\n                        }\n                        var intr = interHelper(bez1, bez2, justCount);\n                        if (justCount) {\n                            res += intr;\n                        } else {\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\n                                intr[k].segment1 = i;\n                                intr[k].segment2 = j;\n                                intr[k].bez1 = bez1;\n                                intr[k].bez2 = bez2;\n                            }\n                            res = res.concat(intr);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function isPointInsidePath(path, x, y) {\n        var bbox = pathBBox(path);\n        return isPointInsideBBox(bbox, x, y) &&\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n    }\n    function pathBBox(path) {\n        var pth = paths(path);\n        if (pth.bbox) {\n            return clone(pth.bbox);\n        }\n        if (!path) {\n            return box();\n        }\n        path = path2curve(path);\n        var x = 0,\n            y = 0,\n            X = [],\n            Y = [],\n            p;\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            p = path[i];\n            if (p[0] == \"M\") {\n                x = p[1];\n                y = p[2];\n                X.push(x);\n                Y.push(y);\n            } else {\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                X = X.concat(dim.min.x, dim.max.x);\n                Y = Y.concat(dim.min.y, dim.max.y);\n                x = p[5];\n                y = p[6];\n            }\n        }\n        var xmin = mmin.apply(0, X),\n            ymin = mmin.apply(0, Y),\n            xmax = mmax.apply(0, X),\n            ymax = mmax.apply(0, Y),\n            bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n        pth.bbox = clone(bb);\n        return bb;\n    }\n    function rectPath(x, y, w, h, r) {\n        if (r) {\n            return [\n                [\"M\", +x + +r, y],\n                [\"l\", w - r * 2, 0],\n                [\"a\", r, r, 0, 0, 1, r, r],\n                [\"l\", 0, h - r * 2],\n                [\"a\", r, r, 0, 0, 1, -r, r],\n                [\"l\", r * 2 - w, 0],\n                [\"a\", r, r, 0, 0, 1, -r, -r],\n                [\"l\", 0, r * 2 - h],\n                [\"a\", r, r, 0, 0, 1, r, -r],\n                [\"z\"]\n            ];\n        }\n        var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n        res.toString = toString;\n        return res;\n    }\n    function ellipsePath(x, y, rx, ry, a) {\n        if (a == null && ry == null) {\n            ry = rx;\n        }\n        x = +x;\n        y = +y;\n        rx = +rx;\n        ry = +ry;\n        if (a != null) {\n            var rad = Math.PI / 180,\n                x1 = x + rx * Math.cos(-ry * rad),\n                x2 = x + rx * Math.cos(-a * rad),\n                y1 = y + rx * Math.sin(-ry * rad),\n                y2 = y + rx * Math.sin(-a * rad),\n                res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n        } else {\n            res = [\n                [\"M\", x, y],\n                [\"m\", 0, -ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n                [\"z\"]\n            ];\n        }\n        res.toString = toString;\n        return res;\n    }\n    var unit2px = Snap._unit2px,\n        getPath = {\n        path: function (el) {\n            return el.attr(\"path\");\n        },\n        circle: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx, attr.cy, attr.r);\n        },\n        ellipse: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n        },\n        rect: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n        },\n        image: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n        },\n        line: function (el) {\n            return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n        },\n        polyline: function (el) {\n            return \"M\" + el.attr(\"points\");\n        },\n        polygon: function (el) {\n            return \"M\" + el.attr(\"points\") + \"z\";\n        },\n        deflt: function (el) {\n            var bbox = el.node.getBBox();\n            return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n        }\n    };\n    function pathToRelative(pathArray) {\n        var pth = paths(pathArray),\n            lowerCase = String.prototype.toLowerCase;\n        if (pth.rel) {\n            return pathClone(pth.rel);\n        }\n        if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0;\n        if (pathArray[0][0] == \"M\") {\n            x = pathArray[0][1];\n            y = pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res.push([\"M\", x, y]);\n        }\n        for (var i = start, ii = pathArray.length; i < ii; i++) {\n            var r = res[i] = [],\n                pa = pathArray[i];\n            if (pa[0] != lowerCase.call(pa[0])) {\n                r[0] = lowerCase.call(pa[0]);\n                switch (r[0]) {\n                    case \"a\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +(pa[6] - x).toFixed(3);\n                        r[7] = +(pa[7] - y).toFixed(3);\n                        break;\n                    case \"v\":\n                        r[1] = +(pa[1] - y).toFixed(3);\n                        break;\n                    case \"m\":\n                        mx = pa[1];\n                        my = pa[2];\n                    default:\n                        for (var j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +(pa[j] - (j % 2 ? x : y)).toFixed(3);\n                        }\n                }\n            } else {\n                r = res[i] = [];\n                if (pa[0] == \"m\") {\n                    mx = pa[1] + x;\n                    my = pa[2] + y;\n                }\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    res[i][k] = pa[k];\n                }\n            }\n            var len = res[i].length;\n            switch (res[i][0]) {\n                case \"z\":\n                    x = mx;\n                    y = my;\n                    break;\n                case \"h\":\n                    x += +res[i][len - 1];\n                    break;\n                case \"v\":\n                    y += +res[i][len - 1];\n                    break;\n                default:\n                    x += +res[i][len - 2];\n                    y += +res[i][len - 1];\n            }\n        }\n        res.toString = toString;\n        pth.rel = pathClone(res);\n        return res;\n    }\n    function pathToAbsolute(pathArray) {\n        var pth = paths(pathArray);\n        if (pth.abs) {\n            return pathClone(pth.abs);\n        }\n        if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) { // rough assumption\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        if (!pathArray || !pathArray.length) {\n            return [[\"M\", 0, 0]];\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0,\n            pa0;\n        if (pathArray[0][0] == \"M\") {\n            x = +pathArray[0][1];\n            y = +pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res[0] = [\"M\", x, y];\n        }\n        var crz = pathArray.length == 3 &&\n            pathArray[0][0] == \"M\" &&\n            pathArray[1][0].toUpperCase() == \"R\" &&\n            pathArray[2][0].toUpperCase() == \"Z\";\n        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n            res.push(r = []);\n            pa = pathArray[i];\n            pa0 = pa[0];\n            if (pa0 != pa0.toUpperCase()) {\n                r[0] = pa0.toUpperCase();\n                switch (r[0]) {\n                    case \"A\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +pa[6] + x;\n                        r[7] = +pa[7] + y;\n                        break;\n                    case \"V\":\n                        r[1] = +pa[1] + y;\n                        break;\n                    case \"H\":\n                        r[1] = +pa[1] + x;\n                        break;\n                    case \"R\":\n                        var dots = [x, y].concat(pa.slice(1));\n                        for (var j = 2, jj = dots.length; j < jj; j++) {\n                            dots[j] = +dots[j] + x;\n                            dots[++j] = +dots[j] + y;\n                        }\n                        res.pop();\n                        res = res.concat(catmullRom2bezier(dots, crz));\n                        break;\n                    case \"O\":\n                        res.pop();\n                        dots = ellipsePath(x, y, pa[1], pa[2]);\n                        dots.push(dots[0]);\n                        res = res.concat(dots);\n                        break;\n                    case \"U\":\n                        res.pop();\n                        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                        r = [\"U\"].concat(res[res.length - 1].slice(-2));\n                        break;\n                    case \"M\":\n                        mx = +pa[1] + x;\n                        my = +pa[2] + y;\n                    default:\n                        for (j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +pa[j] + (j % 2 ? x : y);\n                        }\n                }\n            } else if (pa0 == \"R\") {\n                dots = [x, y].concat(pa.slice(1));\n                res.pop();\n                res = res.concat(catmullRom2bezier(dots, crz));\n                r = [\"R\"].concat(pa.slice(-2));\n            } else if (pa0 == \"O\") {\n                res.pop();\n                dots = ellipsePath(x, y, pa[1], pa[2]);\n                dots.push(dots[0]);\n                res = res.concat(dots);\n            } else if (pa0 == \"U\") {\n                res.pop();\n                res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                r = [\"U\"].concat(res[res.length - 1].slice(-2));\n            } else {\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    r[k] = pa[k];\n                }\n            }\n            pa0 = pa0.toUpperCase();\n            if (pa0 != \"O\") {\n                switch (r[0]) {\n                    case \"Z\":\n                        x = +mx;\n                        y = +my;\n                        break;\n                    case \"H\":\n                        x = r[1];\n                        break;\n                    case \"V\":\n                        y = r[1];\n                        break;\n                    case \"M\":\n                        mx = r[r.length - 2];\n                        my = r[r.length - 1];\n                    default:\n                        x = r[r.length - 2];\n                        y = r[r.length - 1];\n                }\n            }\n        }\n        res.toString = toString;\n        pth.abs = pathClone(res);\n        return res;\n    }\n    function l2c(x1, y1, x2, y2) {\n        return [x1, y1, x2, y2, x2, y2];\n    }\n    function q2c(x1, y1, ax, ay, x2, y2) {\n        var _13 = 1 / 3,\n            _23 = 2 / 3;\n        return [\n                _13 * x1 + _23 * ax,\n                _13 * y1 + _23 * ay,\n                _13 * x2 + _23 * ax,\n                _13 * y2 + _23 * ay,\n                x2,\n                y2\n            ];\n    }\n    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n        // for more information of where this math came from visit:\n        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n        var _120 = PI * 120 / 180,\n            rad = PI / 180 * (+angle || 0),\n            res = [],\n            xy,\n            rotate = Snap._.cacher(function (x, y, rad) {\n                var X = x * math.cos(rad) - y * math.sin(rad),\n                    Y = x * math.sin(rad) + y * math.cos(rad);\n                return {x: X, y: Y};\n            });\n        if (!rx || !ry) {\n            return [x1, y1, x2, y2, x2, y2];\n        }\n        if (!recursive) {\n            xy = rotate(x1, y1, -rad);\n            x1 = xy.x;\n            y1 = xy.y;\n            xy = rotate(x2, y2, -rad);\n            x2 = xy.x;\n            y2 = xy.y;\n            var cos = math.cos(PI / 180 * angle),\n                sin = math.sin(PI / 180 * angle),\n                x = (x1 - x2) / 2,\n                y = (y1 - y2) / 2;\n            var h = x * x / (rx * rx) + y * y / (ry * ry);\n            if (h > 1) {\n                h = math.sqrt(h);\n                rx = h * rx;\n                ry = h * ry;\n            }\n            var rx2 = rx * rx,\n                ry2 = ry * ry,\n                k = (large_arc_flag == sweep_flag ? -1 : 1) *\n                    math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n                cx = k * rx * y / ry + (x1 + x2) / 2,\n                cy = k * -ry * x / rx + (y1 + y2) / 2,\n                f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n                f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n            f1 = x1 < cx ? PI - f1 : f1;\n            f2 = x2 < cx ? PI - f2 : f2;\n            f1 < 0 && (f1 = PI * 2 + f1);\n            f2 < 0 && (f2 = PI * 2 + f2);\n            if (sweep_flag && f1 > f2) {\n                f1 = f1 - PI * 2;\n            }\n            if (!sweep_flag && f2 > f1) {\n                f2 = f2 - PI * 2;\n            }\n        } else {\n            f1 = recursive[0];\n            f2 = recursive[1];\n            cx = recursive[2];\n            cy = recursive[3];\n        }\n        var df = f2 - f1;\n        if (abs(df) > _120) {\n            var f2old = f2,\n                x2old = x2,\n                y2old = y2;\n            f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n            x2 = cx + rx * math.cos(f2);\n            y2 = cy + ry * math.sin(f2);\n            res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n        }\n        df = f2 - f1;\n        var c1 = math.cos(f1),\n            s1 = math.sin(f1),\n            c2 = math.cos(f2),\n            s2 = math.sin(f2),\n            t = math.tan(df / 4),\n            hx = 4 / 3 * rx * t,\n            hy = 4 / 3 * ry * t,\n            m1 = [x1, y1],\n            m2 = [x1 + hx * s1, y1 - hy * c1],\n            m3 = [x2 + hx * s2, y2 - hy * c2],\n            m4 = [x2, y2];\n        m2[0] = 2 * m1[0] - m2[0];\n        m2[1] = 2 * m1[1] - m2[1];\n        if (recursive) {\n            return [m2, m3, m4].concat(res);\n        } else {\n            res = [m2, m3, m4].concat(res).join().split(\",\");\n            var newres = [];\n            for (var i = 0, ii = res.length; i < ii; i++) {\n                newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n            }\n            return newres;\n        }\n    }\n    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t;\n        return {\n            x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n            y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n        };\n    }\n\n    // Returns bounding box of cubic bezier curve.\n    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // Original version: NISHIO Hirokazu\n    // Modifications: https://github.com/timo22345\n    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n        var tvalues = [],\n            bounds = [[], []],\n            a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n        for (var i = 0; i < 2; ++i) {\n            if (i == 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n            } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n            }\n            if (abs(a) < 1e-12) {\n                if (abs(b) < 1e-12) {\n                    continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                    tvalues.push(t);\n                }\n                continue;\n            }\n            b2ac = b * b - 4 * c * a;\n            sqrtb2ac = math.sqrt(b2ac);\n            if (b2ac < 0) {\n                continue;\n            }\n            t1 = (-b + sqrtb2ac) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n            }\n            t2 = (-b - sqrtb2ac) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n            }\n        }\n\n        var x, y, j = tvalues.length,\n            jlen = j,\n            mt;\n        while (j--) {\n            t = tvalues[j];\n            mt = 1 - t;\n            bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n            bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n        }\n\n        bounds[0][jlen] = x0;\n        bounds[1][jlen] = y0;\n        bounds[0][jlen + 1] = x3;\n        bounds[1][jlen + 1] = y3;\n        bounds[0].length = bounds[1].length = jlen + 2;\n\n\n        return {\n          min: {x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1])},\n          max: {x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1])}\n        };\n    }\n\n    function path2curve(path, path2) {\n        var pth = !path2 && paths(path);\n        if (!path2 && pth.curve) {\n            return pathClone(pth.curve);\n        }\n        var p = pathToAbsolute(path),\n            p2 = path2 && pathToAbsolute(path2),\n            attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            processPath = function (path, d, pcom) {\n                var nx, ny;\n                if (!path) {\n                    return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n                }\n                !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n                switch (path[0]) {\n                    case \"M\":\n                        d.X = path[1];\n                        d.Y = path[2];\n                        break;\n                    case \"A\":\n                        path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n                        break;\n                    case \"S\":\n                        if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n                            nx = d.x * 2 - d.bx;          // And reflect the previous\n                            ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n                        }\n                        else {                            // or some else or nothing\n                            nx = d.x;\n                            ny = d.y;\n                        }\n                        path = [\"C\", nx, ny].concat(path.slice(1));\n                        break;\n                    case \"T\":\n                        if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n                            d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n                            d.qy = d.y * 2 - d.qy;        // to case \"S\".\n                        }\n                        else {                            // or something else or nothing\n                            d.qx = d.x;\n                            d.qy = d.y;\n                        }\n                        path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                        break;\n                    case \"Q\":\n                        d.qx = path[1];\n                        d.qy = path[2];\n                        path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                        break;\n                    case \"L\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n                        break;\n                    case \"H\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n                        break;\n                    case \"V\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n                        break;\n                    case \"Z\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n                        break;\n                }\n                return path;\n            },\n            fixArc = function (pp, i) {\n                if (pp[i].length > 7) {\n                    pp[i].shift();\n                    var pi = pp[i];\n                    while (pi.length) {\n                        pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n                        p2 && (pcoms2[i] = \"A\"); // the same as above\n                        pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n                    }\n                    pp.splice(i, 1);\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            fixM = function (path1, path2, a1, a2, i) {\n                if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n                    path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n                    a1.bx = 0;\n                    a1.by = 0;\n                    a1.x = path1[i][1];\n                    a1.y = path1[i][2];\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            pcoms1 = [], // path commands of original path p\n            pcoms2 = [], // path commands of original path p2\n            pfirst = \"\", // temporary holder for original path command\n            pcom = \"\"; // holder for previous path command of original path\n        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n            p[i] && (pfirst = p[i][0]); // save current path command\n\n            if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n            {\n                pcoms1[i] = pfirst; // Save current path command\n                i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n            }\n            p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n            if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n            // which may produce multiple C:s\n            // so we have to make sure that C is also C in original path\n\n            fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n            if (p2) { // the same procedures is done to p2\n                p2[i] && (pfirst = p2[i][0]);\n                if (pfirst != \"C\") {\n                    pcoms2[i] = pfirst;\n                    i && (pcom = pcoms2[i - 1]);\n                }\n                p2[i] = processPath(p2[i], attrs2, pcom);\n\n                if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n                    pcoms2[i] = \"C\";\n                }\n\n                fixArc(p2, i);\n            }\n            fixM(p, p2, attrs, attrs2, i);\n            fixM(p2, p, attrs2, attrs, i);\n            var seg = p[i],\n                seg2 = p2 && p2[i],\n                seglen = seg.length,\n                seg2len = p2 && seg2.length;\n            attrs.x = seg[seglen - 2];\n            attrs.y = seg[seglen - 1];\n            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n            attrs2.x = p2 && seg2[seg2len - 2];\n            attrs2.y = p2 && seg2[seg2len - 1];\n        }\n        if (!p2) {\n            pth.curve = pathClone(p);\n        }\n        return p2 ? [p, p2] : p;\n    }\n    function mapPath(path, matrix) {\n        if (!matrix) {\n            return path;\n        }\n        var x, y, i, j, ii, jj, pathi;\n        path = path2curve(path);\n        for (i = 0, ii = path.length; i < ii; i++) {\n            pathi = path[i];\n            for (j = 1, jj = pathi.length; j < jj; j += 2) {\n                x = matrix.x(pathi[j], pathi[j + 1]);\n                y = matrix.y(pathi[j], pathi[j + 1]);\n                pathi[j] = x;\n                pathi[j + 1] = y;\n            }\n        }\n        return path;\n    }\n\n    // http://schepers.cc/getting-to-the-point\n    function catmullRom2bezier(crp, z) {\n        var d = [];\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n            var p = [\n                        {x: +crp[i - 2], y: +crp[i - 1]},\n                        {x: +crp[i],     y: +crp[i + 1]},\n                        {x: +crp[i + 2], y: +crp[i + 3]},\n                        {x: +crp[i + 4], y: +crp[i + 5]}\n                    ];\n            if (z) {\n                if (!i) {\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n                } else if (iLen - 4 == i) {\n                    p[3] = {x: +crp[0], y: +crp[1]};\n                } else if (iLen - 2 == i) {\n                    p[2] = {x: +crp[0], y: +crp[1]};\n                    p[3] = {x: +crp[2], y: +crp[3]};\n                }\n            } else {\n                if (iLen - 4 == i) {\n                    p[3] = p[2];\n                } else if (!i) {\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n                }\n            }\n            d.push([\"C\",\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n                  p[2].x,\n                  p[2].y\n            ]);\n        }\n\n        return d;\n    }\n\n    // export\n    Snap.path = paths;\n\n    /*\\\n     * Snap.path.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the given path in pixels\n     **\n     - path (string) SVG path string\n     **\n     = (number) length\n    \\*/\n    Snap.path.getTotalLength = getTotalLength;\n    /*\\\n     * Snap.path.getPointAtLength\n     [ method ]\n     **\n     * Returns the coordinates of the point located at the given length along the given path\n     **\n     - path (string) SVG path string\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    Snap.path.getPointAtLength = getPointAtLength;\n    /*\\\n     * Snap.path.getSubpath\n     [ method ]\n     **\n     * Returns the subpath of a given path between given start and end lengths\n     **\n     - path (string) SVG path string\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    Snap.path.getSubpath = function (path, from, to) {\n        if (this.getTotalLength(path) - to < 1e-6) {\n            return getSubpathsAtLength(path, from).end;\n        }\n        var a = getSubpathsAtLength(path, to, 1);\n        return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the path in pixels (only works for `path` elements)\n     = (number) length\n    \\*/\n    elproto.getTotalLength = function () {\n        if (this.node.getTotalLength) {\n            return this.node.getTotalLength();\n        }\n    };\n    // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n     **\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    elproto.getPointAtLength = function (length) {\n        return getPointAtLength(this.attr(\"d\"), length);\n    };\n    // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n     **\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    elproto.getSubpath = function (from, to) {\n        return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n    };\n    Snap._.box = box;\n    /*\\\n     * Snap.path.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds dot coordinates on the given cubic beziér curve at the given t\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point,\n     o     y: (number) y coordinate of the point,\n     o     m: {\n     o         x: (number) x coordinate of the left anchor,\n     o         y: (number) y coordinate of the left anchor\n     o     },\n     o     n: {\n     o         x: (number) x coordinate of the right anchor,\n     o         y: (number) y coordinate of the right anchor\n     o     },\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve,\n     o         y: (number) y coordinate of the start of the curve\n     o     },\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve,\n     o         y: (number) y coordinate of the end of the curve\n     o     },\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n    Snap.path.findDotsAtSegment = findDotsAtSegment;\n    /*\\\n     * Snap.path.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given cubic beziér curve\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for beziér curve\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.bezierBBox = bezierBBox;\n    /*\\\n     * Snap.path.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding box\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point is inside\n    \\*/\n    Snap.path.isPointInsideBBox = isPointInsideBBox;\n    Snap.closest = function (x, y, X, Y) {\n        var r = 100,\n            b = box(x - r / 2, y - r / 2, r, r),\n            inside = [],\n            getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n                return {\n                    x: X[i].x,\n                    y: X[i].y\n                };\n            } : function (i) {\n                return {\n                    x: X[i],\n                    y: Y[i]\n                };\n            },\n            found = 0;\n        while (r <= 1e6 && !found) {\n            for (var i = 0, ii = X.length; i < ii; i++) {\n                var xy = getter(i);\n                if (isPointInsideBBox(b, xy.x, xy.y)) {\n                    found++;\n                    inside.push(xy);\n                    break;\n                }\n            }\n            if (!found) {\n                r *= 2;\n                b = box(x - r / 2, y - r / 2, r, r)\n            }\n        }\n        if (r == 1e6) {\n            return;\n        }\n        var len = Infinity,\n            res;\n        for (i = 0, ii = inside.length; i < ii; i++) {\n            var l = Snap.len(x, y, inside[i].x, inside[i].y);\n            if (len > l) {\n                len = l;\n                inside[i].len = l;\n                res = inside[i];\n            }\n        }\n        return res;\n    };\n    /*\\\n     * Snap.path.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if bounding boxes intersect\n    \\*/\n    Snap.path.isBBoxIntersect = isBBoxIntersect;\n    /*\\\n     * Snap.path.intersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point,\n     o         y: (number) y coordinate of the point,\n     o         t1: (number) t value for segment of path1,\n     o         t2: (number) t value for segment of path2,\n     o         segment1: (number) order number for segment of path1,\n     o         segment2: (number) order number for segment of path2,\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n    Snap.path.intersection = pathIntersection;\n    Snap.path.intersectionNumber = pathIntersectionNumber;\n    /*\\\n     * Snap.path.isPointInside\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     *\n     * Note: fill mode doesn’t affect the result of this method.\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) `true` if point is inside the path\n    \\*/\n    Snap.path.isPointInside = isPointInsidePath;\n    /*\\\n     * Snap.path.getBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given path\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.getBBox = pathBBox;\n    Snap.path.get = getPath;\n    /*\\\n     * Snap.path.toRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into relative values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toRelative = pathToRelative;\n    /*\\\n     * Snap.path.toAbsolute\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into absolute values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toAbsolute = pathToAbsolute;\n    /*\\\n     * Snap.path.toCubic\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic beziér curves\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments\n    \\*/\n    Snap.path.toCubic = path2curve;\n    /*\\\n     * Snap.path.map\n     [ method ]\n     **\n     * Transform the path string with the given matrix\n     - path (string) path string\n     - matrix (object) see @Matrix\n     = (string) transformed path string\n    \\*/\n    Snap.path.map = mapPath;\n    Snap.path.toString = toString;\n    Snap.path.clone = pathClone;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var mmax = Math.max,\n        mmin = Math.min;\n\n    // Set\n    var Set = function (items) {\n        this.items = [];\n\tthis.bindings = {};\n        this.length = 0;\n        this.type = \"set\";\n        if (items) {\n            for (var i = 0, ii = items.length; i < ii; i++) {\n                if (items[i]) {\n                    this[this.items.length] = this.items[this.items.length] = items[i];\n                    this.length++;\n                }\n            }\n        }\n    },\n    setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set\n     = (object) original element\n    \\*/\n    setproto.push = function () {\n        var item,\n            len;\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\n            item = arguments[i];\n            if (item) {\n                len = this.items.length;\n                this[len] = this.items[len] = item;\n                this.length++;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it\n     = (object) element\n    \\*/\n    setproto.pop = function () {\n        this.length && delete this[this.length--];\n        return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set\n     *\n     * If the function returns `false`, the loop stops running.\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n    setproto.forEach = function (callback, thisArg) {\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            if (callback.call(thisArg, this.items[i], i) === false) {\n                return this;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.animate\n     [ method ]\n     **\n     * Animates each element in set in sync.\n     *\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     * or\n     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n     > Usage\n     | // animate all elements in set to radius 10\n     | set.animate({r: 10}, 500, mina.easein);\n     | // or\n     | // animate first element to radius 10, but second to radius 20 and in different time\n     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n     = (Element) the current element\n    \\*/\n    setproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Snap._.Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = easing.dur;\n            attrs = attrs.attr;\n        }\n        var args = arguments;\n        if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n            var each = true;\n        }\n        var begin,\n            handler = function () {\n                if (begin) {\n                    this.b = begin;\n                } else {\n                    begin = this.b;\n                }\n            },\n            cb = 0,\n            set = this,\n            callbacker = callback && function () {\n                if (++cb == set.length) {\n                    callback.call(this);\n                }\n            };\n        return this.forEach(function (el, i) {\n            eve.once(\"snap.animcreated.\" + el.id, handler);\n            if (each) {\n                args[i] && el.animate.apply(el, args[i]);\n            } else {\n                el.animate(attrs, ms, easing, callbacker);\n            }\n        });\n    };\n    /*\\\n     * Set.remove\n     [ method ]\n     **\n     * Removes all children of the set.\n     *\n     = (object) Set object\n    \\*/\n    setproto.remove = function () {\n        while (this.length) {\n            this.pop().remove();\n        }\n        return this;\n    };\n    /*\\\n     * Set.bind\n     [ method ]\n     **\n     * Specifies how to handle a specific attribute when applied\n     * to a set.\n     *\n     **\n     - attr (string) attribute name\n     - callback (function) function to run\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     - eattr (string) attribute on the element to bind the attribute to\n     = (object) Set object\n    \\*/\n    setproto.bind = function (attr, a, b) {\n        var data = {};\n        if (typeof a == \"function\") {\n            this.bindings[attr] = a;\n        } else {\n            var aname = b || attr;\n            this.bindings[attr] = function (v) {\n                data[aname] = v;\n                a.attr(data);\n            };\n        }\n        return this;\n    };\n    /*\\\n     * Set.attr\n     [ method ]\n     **\n     * Equivalent of @Element.attr.\n     = (object) Set object\n    \\*/\n    setproto.attr = function (value) {\n        var unbound = {};\n        for (var k in value) {\n            if (this.bindings[k]) {\n                this.bindings[k](value[k]);\n            } else {\n                unbound[k] = value[k];\n            }\n        }\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            this.items[i].attr(unbound);\n        }\n        return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removes all elements from the set\n    \\*/\n    setproto.clear = function () {\n        while (this.length) {\n            this.pop();\n        }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes range of elements from the set\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n    setproto.splice = function (index, count, insertion) {\n        index = index < 0 ? mmax(this.length + index, 0) : index;\n        count = mmax(0, mmin(this.length - index, count));\n        var tail = [],\n            todel = [],\n            args = [],\n            i;\n        for (i = 2; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n        for (i = 0; i < count; i++) {\n            todel.push(this[index + i]);\n        }\n        for (; i < this.length - index; i++) {\n            tail.push(this[index + i]);\n        }\n        var arglen = args.length;\n        for (i = 0; i < arglen + tail.length; i++) {\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n        }\n        i = this.items.length = this.length -= count - arglen;\n        while (this[i]) {\n            delete this[i++];\n        }\n        return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found and removed from the set\n    \\*/\n    setproto.exclude = function (el) {\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n            this.splice(i, 1);\n            return true;\n        }\n        return false;\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Inserts set elements after given element.\n     **\n     - element (object) set will be inserted after this element\n     = (object) Set object\n    \\*/\n    setproto.insertAfter = function (el) {\n        var i = this.items.length;\n        while (i--) {\n            this.items[i].insertAfter(el);\n        }\n        return this;\n    };\n    /*\\\n     * Set.getBBox\n     [ method ]\n     **\n     * Union of all bboxes of the set. See @Element.getBBox.\n     = (object) bounding box descriptor. See @Element.getBBox.\n    \\*/\n    setproto.getBBox = function () {\n        var x = [],\n            y = [],\n            x2 = [],\n            y2 = [];\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n            var box = this.items[i].getBBox();\n            x.push(box.x);\n            y.push(box.y);\n            x2.push(box.x + box.width);\n            y2.push(box.y + box.height);\n        }\n        x = mmin.apply(0, x);\n        y = mmin.apply(0, y);\n        x2 = mmax.apply(0, x2);\n        y2 = mmax.apply(0, y2);\n        return {\n            x: x,\n            y: y,\n            x2: x2,\n            y2: y2,\n            width: x2 - x,\n            height: y2 - y,\n            cx: x + (x2 - x) / 2,\n            cy: y + (y2 - y) / 2\n        };\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Creates a clone of the set.\n     **\n     = (object) New Set object\n    \\*/\n    setproto.clone = function (s) {\n        s = new Set;\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            s.push(this.items[i].clone());\n        }\n        return s;\n    };\n    setproto.toString = function () {\n        return \"Snap\\u2018s set\";\n    };\n    setproto.type = \"set\";\n    // export\n    /*\\\n     * Snap.Set\n     [ property ]\n     **\n     * Set constructor.\n    \\*/\n    Snap.Set = Set;\n    /*\\\n     * Snap.set\n     [ method ]\n     **\n     * Creates a set and fills it with list of arguments.\n     **\n     = (object) New Set object\n     | var r = paper.rect(0, 0, 10, 10),\n     |     s1 = Snap.set(), // empty set\n     |     s2 = Snap.set(r, paper.circle(100, 100, 20)); // prefilled set\n    \\*/\n    Snap.set = function () {\n        var set = new Set;\n        if (arguments.length) {\n            set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n        }\n        return set;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var names = {},\n        reUnit = /[%a-z]+$/i,\n        Str = String;\n    names.stroke = names.fill = \"colour\";\n    function getEmpty(item) {\n        var l = item[0];\n        switch (l.toLowerCase()) {\n            case \"t\": return [l, 0, 0];\n            case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n            case \"r\": if (item.length == 4) {\n                return [l, 0, item[2], item[3]];\n            } else {\n                return [l, 0];\n            }\n            case \"s\": if (item.length == 5) {\n                return [l, 1, 1, item[3], item[4]];\n            } else if (item.length == 3) {\n                return [l, 1, 1];\n            } else {\n                return [l, 1];\n            }\n        }\n    }\n    function equaliseTransform(t1, t2, getBBox) {\n        t1 = t1 || new Snap.Matrix;\n        t2 = t2 || new Snap.Matrix;\n        t1 = Snap.parseTransformString(t1.toTransformString()) || [];\n        t2 = Snap.parseTransformString(t2.toTransformString()) || [];\n        var maxlength = Math.max(t1.length, t2.length),\n            from = [],\n            to = [],\n            i = 0, j, jj,\n            tt1, tt2;\n        for (; i < maxlength; i++) {\n            tt1 = t1[i] || getEmpty(t2[i]);\n            tt2 = t2[i] || getEmpty(tt1);\n            if (tt1[0] != tt2[0] ||\n                tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3]) ||\n                tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4])\n                ) {\n                    t1 = Snap._.transform2matrix(t1, getBBox());\n                    t2 = Snap._.transform2matrix(t2, getBBox());\n                    from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n                    to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n                    break;\n            }\n            from[i] = [];\n            to[i] = [];\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n                j in tt1 && (from[i][j] = tt1[j]);\n                j in tt2 && (to[i][j] = tt2[j]);\n            }\n        }\n        return {\n            from: path2array(from),\n            to: path2array(to),\n            f: getPath(from)\n        };\n    }\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    function getViewBox(val) {\n        return val.join(\" \");\n    }\n    function getColour(clr) {\n        return Snap.rgb(clr[0], clr[1], clr[2], clr[3]);\n    }\n    function getPath(path) {\n        var k = 0, i, ii, j, jj, out, a, b = [];\n        for (i = 0, ii = path.length; i < ii; i++) {\n            out = \"[\";\n            a = ['\"' + path[i][0] + '\"'];\n            for (j = 1, jj = path[i].length; j < jj; j++) {\n                a[j] = \"val[\" + k++ + \"]\";\n            }\n            out += a + \"]\";\n            b[i] = out;\n        }\n        return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n    }\n    function path2array(path) {\n        var out = [];\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            for (var j = 1, jj = path[i].length; j < jj; j++) {\n                out.push(path[i][j]);\n            }\n        }\n        return out;\n    }\n    function isNumeric(obj) {\n        return isFinite(obj);\n    }\n    function arrayEqual(arr1, arr2) {\n        if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n            return false;\n        }\n        return arr1.toString() == arr2.toString();\n    }\n    Element.prototype.equal = function (name, b) {\n        return eve(\"snap.util.equal\", this, name, b).firstDefined();\n    };\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this;\n        if (names[name] == \"colour\") {\n            A = Snap.color(a);\n            B = Snap.color(b);\n            return {\n                from: [A.r, A.g, A.b, A.opacity],\n                to: [B.r, B.g, B.b, B.opacity],\n                f: getColour\n            };\n        }\n        if (name == \"viewBox\") {\n            A = this.attr(name).vb.split(\" \").map(Number);\n            B = b.split(\" \").map(Number);\n            return {\n                from: A,\n                to: B,\n                f: getViewBox\n            };\n        }\n        if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n            if (typeof b == \"string\") {\n                b = Str(b).replace(/\\.{3}|\\u2026/g, a);\n            }\n            a = this.matrix;\n            if (!Snap._.rgTransform.test(b)) {\n                b = Snap._.transform2matrix(Snap._.svgTransform2string(b), this.getBBox());\n            } else {\n                b = Snap._.transform2matrix(b, this.getBBox());\n            }\n            return equaliseTransform(a, b, function () {\n                return el.getBBox(1);\n            });\n        }\n        if (name == \"d\" || name == \"path\") {\n            A = Snap.path.toCubic(a, b);\n            return {\n                from: path2array(A[0]),\n                to: path2array(A[1]),\n                f: getPath(A[0])\n            };\n        }\n        if (name == \"points\") {\n            A = Str(a).split(Snap._.separator);\n            B = Str(b).split(Snap._.separator);\n            return {\n                from: A,\n                to: B,\n                f: function (val) { return val; }\n            };\n        }\n        if (isNumeric(a) && isNumeric(b)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getNumber\n            };\n        }\n        var aUnit = a.match(reUnit),\n            bUnit = Str(b).match(reUnit);\n        if (aUnit && arrayEqual(aUnit, bUnit)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getUnit(aUnit)\n            };\n        } else {\n            return {\n                from: this.asPX(name),\n                to: this.asPX(name, b),\n                f: getNumber\n            };\n        }\n    });\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n    has = \"hasOwnProperty\",\n    supportsTouch = \"createTouch\" in glob.doc,\n    events = [\n        \"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\",\n        \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\",\n        \"touchcancel\"\n    ],\n    touchMap = {\n        mousedown: \"touchstart\",\n        mousemove: \"touchmove\",\n        mouseup: \"touchend\"\n    },\n    getScroll = function (xy, el) {\n        var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n            doc = el && el.node ? el.node.ownerDocument : glob.doc;\n        return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n    },\n    preventDefault = function () {\n        this.returnValue = false;\n    },\n    preventTouch = function () {\n        return this.originalEvent.preventDefault();\n    },\n    stopPropagation = function () {\n        this.cancelBubble = true;\n    },\n    stopTouch = function () {\n        return this.originalEvent.stopPropagation();\n    },\n    addEvent = function (obj, type, fn, element) {\n        var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n            f = function (e) {\n                var scrollY = getScroll(\"y\", element),\n                    scrollX = getScroll(\"x\", element);\n                if (supportsTouch && touchMap[has](type)) {\n                    for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n                        if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n                            var olde = e;\n                            e = e.targetTouches[i];\n                            e.originalEvent = olde;\n                            e.preventDefault = preventTouch;\n                            e.stopPropagation = stopTouch;\n                            break;\n                        }\n                    }\n                }\n                var x = e.clientX + scrollX,\n                    y = e.clientY + scrollY;\n                return fn.call(element, e, x, y);\n            };\n\n        if (type !== realName) {\n            obj.addEventListener(type, f, false);\n        }\n\n        obj.addEventListener(realName, f, false);\n\n        return function () {\n            if (type !== realName) {\n                obj.removeEventListener(type, f, false);\n            }\n\n            obj.removeEventListener(realName, f, false);\n            return true;\n        };\n    },\n    drag = [],\n    dragMove = function (e) {\n        var x = e.clientX,\n            y = e.clientY,\n            scrollY = getScroll(\"y\"),\n            scrollX = getScroll(\"x\"),\n            dragi,\n            j = drag.length;\n        while (j--) {\n            dragi = drag[j];\n            if (supportsTouch) {\n                var i = e.touches && e.touches.length,\n                    touch;\n                while (i--) {\n                    touch = e.touches[i];\n                    if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n                        x = touch.clientX;\n                        y = touch.clientY;\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n                        break;\n                    }\n                }\n            } else {\n                e.preventDefault();\n            }\n            var node = dragi.el.node,\n                o,\n                next = node.nextSibling,\n                parent = node.parentNode,\n                display = node.style.display;\n            // glob.win.opera && parent.removeChild(node);\n            // node.style.display = \"none\";\n            // o = dragi.el.paper.getElementByPoint(x, y);\n            // node.style.display = display;\n            // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n            // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n            x += scrollX;\n            y += scrollY;\n            eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n        }\n    },\n    dragUp = function (e) {\n        Snap.unmousemove(dragMove).unmouseup(dragUp);\n        var i = drag.length,\n            dragi;\n        while (i--) {\n            dragi = drag[i];\n            dragi.el._drag = {};\n            eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n            eve.off(\"snap.drag.*.\" + dragi.el.id);\n        }\n        drag = [];\n    };\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds a click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes a click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds a double click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes a double click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds a mousedown event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes a mousedown event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds a mousemove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes a mousemove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds a mouseout event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes a mouseout event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds a mouseover event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes a mouseover event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds a mouseup event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes a mouseup event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds a touchstart event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes a touchstart event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds a touchmove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes a touchmove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds a touchend event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes a touchend event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds a touchcancel event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes a touchcancel event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    for (var i = events.length; i--;) {\n        (function (eventName) {\n            Snap[eventName] = elproto[eventName] = function (fn, scope) {\n                if (Snap.is(fn, \"function\")) {\n                    this.events = this.events || [];\n                    this.events.push({\n                        name: eventName,\n                        f: fn,\n                        unbind: addEvent(this.node || document, eventName, fn, scope || this)\n                    });\n                } else {\n                    for (var i = 0, ii = this.events.length; i < ii; i++) if (this.events[i].name == eventName) {\n                        try {\n                            this.events[i].f.call(this);\n                        } catch (e) {}\n                    }\n                }\n                return this;\n            };\n            Snap[\"un\" + eventName] =\n            elproto[\"un\" + eventName] = function (fn) {\n                var events = this.events || [],\n                    l = events.length;\n                while (l--) if (events[l].name == eventName &&\n                               (events[l].f == fn || !fn)) {\n                    events[l].unbind();\n                    events.splice(l, 1);\n                    !events.length && delete this.events;\n                    return this;\n                }\n                return this;\n            };\n        })(events[i]);\n    }\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds hover event handlers to the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes hover event handlers from the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n    elproto.unhover = function (f_in, f_out) {\n        return this.unmouseover(f_in).unmouseout(f_out);\n    };\n    var draggable = [];\n    // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for an element's drag gesture\n     **\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n     * `drag.over.<id>` fires as well.\n     *\n     * Start event and start handler are called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler are called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler are called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n        var el = this;\n        if (!arguments.length) {\n            var origTransform;\n            return el.drag(function (dx, dy) {\n                this.attr({\n                    transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n                });\n            }, function () {\n                origTransform = this.transform().local;\n            });\n        }\n        function start(e, x, y) {\n            (e.originalEvent || e).preventDefault();\n            el._drag.x = x;\n            el._drag.y = y;\n            el._drag.id = e.identifier;\n            !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n            drag.push({el: el, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n            onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n            onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n            onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n            eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n        }\n        function init(e, x, y) {\n            eve(\"snap.draginit.\" + el.id, el, e, x, y);\n        }\n        eve.on(\"snap.draginit.\" + el.id, start);\n        el._drag = {};\n        draggable.push({el: el, start: start, init: init});\n        el.mousedown(init);\n        return el;\n    };\n    /*\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    // elproto.onDragOver = function (f) {\n    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n    // };\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from the given element\n    \\*/\n    elproto.undrag = function () {\n        var i = draggable.length;\n        while (i--) if (draggable[i].el == this) {\n            this.unmousedown(draggable[i].init);\n            draggable.splice(i, 1);\n            eve.unbind(\"snap.drag.*.\" + this.id);\n            eve.unbind(\"snap.draginit.\" + this.id);\n        }\n        !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        pproto = Paper.prototype,\n        rgurl = /^\\s*url\\((.+)\\)/,\n        Str = String,\n        $ = Snap._.$;\n    Snap.filter = {};\n    /*\\\n     * Paper.filter\n     [ method ]\n     **\n     * Creates a `<filter>` element\n     **\n     - filstr (string) SVG fragment of filter provided as a string\n     = (object) @Element\n     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n     > Usage\n     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    pproto.filter = function (filstr) {\n        var paper = this;\n        if (paper.type != \"svg\") {\n            paper = paper.paper;\n        }\n        var f = Snap.parse(Str(filstr)),\n            id = Snap._.id(),\n            width = paper.node.offsetWidth,\n            height = paper.node.offsetHeight,\n            filter = $(\"filter\");\n        $(filter, {\n            id: id,\n            filterUnits: \"userSpaceOnUse\"\n        });\n        filter.appendChild(f.node);\n        paper.defs.appendChild(filter);\n        return new Element(filter);\n    };\n\n    eve.on(\"snap.util.getattr.filter\", function () {\n        eve.stop();\n        var p = $(this.node, \"filter\");\n        if (p) {\n            var match = Str(p).match(rgurl);\n            return match && Snap.select(match[1]);\n        }\n    });\n    eve.on(\"snap.util.attr.filter\", function (value) {\n        if (value instanceof Element && value.type == \"filter\") {\n            eve.stop();\n            var id = value.node.id;\n            if (!id) {\n                $(value.node, {id: value.id});\n                id = value.id;\n            }\n            $(this.node, {\n                filter: Snap.url(id)\n            });\n        }\n        if (!value || value == \"none\") {\n            eve.stop();\n            this.node.removeAttribute(\"filter\");\n        }\n    });\n    /*\\\n     * Snap.filter.blur\n     [ method ]\n     **\n     * Returns an SVG markup string for the blur filter\n     **\n     - x (number) amount of horizontal blur, in pixels\n     - y (number) #optional amount of vertical blur, in pixels\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.blur(5, 10)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.blur = function (x, y) {\n        if (x == null) {\n            x = 2;\n        }\n        var def = y == null ? x : [x, y];\n        return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n            def: def\n        });\n    };\n    Snap.filter.blur.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.shadow\n     [ method ]\n     **\n     * Returns an SVG markup string for the shadow filter\n     **\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - blur (number) #optional amount of blur\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * which makes blur default to `4`. Or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - opacity (number) #optional `0..1` opacity of the shadow\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.shadow(0, 2, .3)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n        if (opacity == null) {\n            if (color == null) {\n                opacity = blur;\n                blur = 4;\n                color = \"#000\";\n            } else {\n                opacity = color;\n                color = blur;\n                blur = 4;\n            }\n        }\n        if (blur == null) {\n            blur = 4;\n        }\n        if (opacity == null) {\n            opacity = 1;\n        }\n        if (dx == null) {\n            dx = 0;\n            dy = 2;\n        }\n        if (dy == null) {\n            dy = dx;\n        }\n        color = Snap.color(color);\n        return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n            color: color,\n            dx: dx,\n            dy: dy,\n            blur: blur,\n            opacity: opacity\n        });\n    };\n    Snap.filter.shadow.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.grayscale\n     [ method ]\n     **\n     * Returns an SVG markup string for the grayscale filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.grayscale = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n            a: 0.2126 + 0.7874 * (1 - amount),\n            b: 0.7152 - 0.7152 * (1 - amount),\n            c: 0.0722 - 0.0722 * (1 - amount),\n            d: 0.2126 - 0.2126 * (1 - amount),\n            e: 0.7152 + 0.2848 * (1 - amount),\n            f: 0.0722 - 0.0722 * (1 - amount),\n            g: 0.2126 - 0.2126 * (1 - amount),\n            h: 0.0722 + 0.9278 * (1 - amount)\n        });\n    };\n    Snap.filter.grayscale.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.sepia\n     [ method ]\n     **\n     * Returns an SVG markup string for the sepia filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.sepia = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n            a: 0.393 + 0.607 * (1 - amount),\n            b: 0.769 - 0.769 * (1 - amount),\n            c: 0.189 - 0.189 * (1 - amount),\n            d: 0.349 - 0.349 * (1 - amount),\n            e: 0.686 + 0.314 * (1 - amount),\n            f: 0.168 - 0.168 * (1 - amount),\n            g: 0.272 - 0.272 * (1 - amount),\n            h: 0.534 - 0.534 * (1 - amount),\n            i: 0.131 + 0.869 * (1 - amount)\n        });\n    };\n    Snap.filter.sepia.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.saturate\n     [ method ]\n     **\n     * Returns an SVG markup string for the saturate filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.saturate = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n            amount: 1 - amount\n        });\n    };\n    Snap.filter.saturate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.hueRotate\n     [ method ]\n     **\n     * Returns an SVG markup string for the hue-rotate filter\n     **\n     - angle (number) angle of rotation\n     = (string) filter representation\n    \\*/\n    Snap.filter.hueRotate = function (angle) {\n        angle = angle || 0;\n        return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n            angle: angle\n        });\n    };\n    Snap.filter.hueRotate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.invert\n     [ method ]\n     **\n     * Returns an SVG markup string for the invert filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.invert = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n//        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n        return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: 1 - amount\n        });\n    };\n    Snap.filter.invert.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.brightness\n     [ method ]\n     **\n     * Returns an SVG markup string for the brightness filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.brightness = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n            amount: amount\n        });\n    };\n    Snap.filter.brightness.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.contrast\n     [ method ]\n     **\n     * Returns an SVG markup string for the contrast filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.contrast = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: .5 - amount / 2\n        });\n    };\n    Snap.filter.contrast.toString = function () {\n        return this();\n    };\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var box = Snap._.box,\n        is = Snap.is,\n        firstLetter = /^[^a-z]*([tbmlrc])/i,\n        toString = function () {\n            return \"T\" + this.dx + \",\" + this.dy;\n        };\n    /*\\\n     * Element.getAlign\n     [ method ]\n     **\n     * Returns shift needed to align the element relatively to given element.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n     > Usage\n     | el.transform(el.getAlign(el2, \"top\"));\n     * or\n     | var dy = el.getAlign(el2, \"top\").dy;\n    \\*/\n    Element.prototype.getAlign = function (el, way) {\n        if (way == null && is(el, \"string\")) {\n            way = el;\n            el = null;\n        }\n        el = el || this.paper;\n        var bx = el.getBBox ? el.getBBox() : box(el),\n            bb = this.getBBox(),\n            out = {};\n        way = way && way.match(firstLetter);\n        way = way ? way[1].toLowerCase() : \"c\";\n        switch (way) {\n            case \"t\":\n                out.dx = 0;\n                out.dy = bx.y - bb.y;\n            break;\n            case \"b\":\n                out.dx = 0;\n                out.dy = bx.y2 - bb.y2;\n            break;\n            case \"m\":\n                out.dx = 0;\n                out.dy = bx.cy - bb.cy;\n            break;\n            case \"l\":\n                out.dx = bx.x - bb.x;\n                out.dy = 0;\n            break;\n            case \"r\":\n                out.dx = bx.x2 - bb.x2;\n                out.dy = 0;\n            break;\n            default:\n                out.dx = bx.cx - bb.cx;\n                out.dy = 0;\n            break;\n        }\n        out.toString = toString;\n        return out;\n    };\n    /*\\\n     * Element.align\n     [ method ]\n     **\n     * Aligns the element relatively to given one via transformation.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object) this element\n     > Usage\n     | el.align(el2, \"top\");\n     * or\n     | el.align(\"middle\");\n    \\*/\n    Element.prototype.align = function (el, way) {\n        return this.transform(\"...\" + this.getAlign(el, way));\n    };\n});\n\n// Copyright (c) 2016 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        has = \"hasOwnProperty\";\n    function slice(from, to, f) {\n        return function (arr) {\n            var res = arr.slice(from, to);\n            if (res.length == 1) {\n                res = res[0];\n            }\n            return f ? f(res) : res;\n        };\n    }\n    var Animation = function (attr, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        this.attr = attr;\n        this.dur = ms;\n        easing && (this.easing = easing);\n        callback && (this.callback = callback);\n    };\n    Snap._.Animation = Animation;\n    /*\\\n     * Snap.animation\n     [ method ]\n     **\n     * Creates an animation object\n     **\n     - attr (object) attributes of final destination\n     - duration (number) duration of the animation, in milliseconds\n     - easing (function) #optional one of easing functions of @mina or custom one\n     - callback (function) #optional callback function that fires when animation ends\n     = (object) animation object\n    \\*/\n    Snap.animation = function (attr, ms, easing, callback) {\n        return new Animation(attr, ms, easing, callback);\n    };\n    /*\\\n     * Element.inAnim\n     [ method ]\n     **\n     * Returns a set of animations that may be able to manipulate the current element\n     **\n     = (object) in format:\n     o {\n     o     anim (object) animation object,\n     o     mina (object) @mina object,\n     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n    \\*/\n    elproto.inAnim = function () {\n        var el = this,\n            res = [];\n        for (var id in el.anims) if (el.anims[has](id)) {\n            (function (a) {\n                res.push({\n                    anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n                    mina: a,\n                    curStatus: a.status(),\n                    status: function (val) {\n                        return a.status(val);\n                    },\n                    stop: function () {\n                        a.stop();\n                    }\n                });\n            }(el.anims[id]));\n        }\n        return res;\n    };\n    /*\\\n     * Snap.animate\n     [ method ]\n     **\n     * Runs generic animation of one number into another with a caring function\n     **\n     - from (number|array) number or array of numbers\n     - to (number|array) number or array of numbers\n     - setter (function) caring function that accepts one number argument\n     - duration (number) duration, in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function to execute when animation ends\n     = (object) animation object in @mina format\n     o {\n     o     id (string) animation id, consider it read-only,\n     o     duration (function) gets or sets the duration of the animation,\n     o     easing (function) easing,\n     o     speed (function) gets or sets the speed of the animation,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n     | var rect = Snap().rect(0, 0, 10, 10);\n     | Snap.animate(0, 10, function (val) {\n     |     rect.attr({\n     |         x: val\n     |     });\n     | }, 1000);\n     | // in given context is equivalent to\n     | rect.animate({x: 10}, 1000);\n    \\*/\n    Snap.animate = function (from, to, setter, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        var now = mina.time(),\n            anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n        callback && eve.once(\"mina.finish.\" + anim.id, callback);\n        return anim;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops all the animations for the current element\n     **\n     = (Element) the current element\n    \\*/\n    elproto.stop = function () {\n        var anims = this.inAnim();\n        for (var i = 0, ii = anims.length; i < ii; i++) {\n            anims[i].stop();\n        }\n        return this;\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Animates the given attributes of the element\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     = (Element) the current element\n    \\*/\n    elproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = attrs.dur;\n            attrs = attrs.attr;\n        }\n        var fkeys = [], tkeys = [], keys = {}, from, to, f, eq,\n            el = this;\n        for (var key in attrs) if (attrs[has](key)) {\n            if (el.equal) {\n                eq = el.equal(key, Str(attrs[key]));\n                from = eq.from;\n                to = eq.to;\n                f = eq.f;\n            } else {\n                from = +el.attr(key);\n                to = +attrs[key];\n            }\n            var len = is(from, \"array\") ? from.length : 1;\n            keys[key] = slice(fkeys.length, fkeys.length + len, f);\n            fkeys = fkeys.concat(from);\n            tkeys = tkeys.concat(to);\n        }\n        var now = mina.time(),\n            anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n                var attr = {};\n                for (var key in keys) if (keys[has](key)) {\n                    attr[key] = keys[key](val);\n                }\n                el.attr(attr);\n            }, easing);\n        el.anims[anim.id] = anim;\n        anim._attrs = attrs;\n        anim._callback = callback;\n        eve(\"snap.animcreated.\" + el.id, anim);\n        eve.once(\"mina.finish.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n            callback && callback.call(el);\n        });\n        eve.once(\"mina.stop.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n        });\n        return el;\n    };\n});\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    // Colours are from https://www.materialui.co\n    var red         = \"#ffebee#ffcdd2#ef9a9a#e57373#ef5350#f44336#e53935#d32f2f#c62828#b71c1c#ff8a80#ff5252#ff1744#d50000\",\n        pink        = \"#FCE4EC#F8BBD0#F48FB1#F06292#EC407A#E91E63#D81B60#C2185B#AD1457#880E4F#FF80AB#FF4081#F50057#C51162\",\n        purple      = \"#F3E5F5#E1BEE7#CE93D8#BA68C8#AB47BC#9C27B0#8E24AA#7B1FA2#6A1B9A#4A148C#EA80FC#E040FB#D500F9#AA00FF\",\n        deeppurple  = \"#EDE7F6#D1C4E9#B39DDB#9575CD#7E57C2#673AB7#5E35B1#512DA8#4527A0#311B92#B388FF#7C4DFF#651FFF#6200EA\",\n        indigo      = \"#E8EAF6#C5CAE9#9FA8DA#7986CB#5C6BC0#3F51B5#3949AB#303F9F#283593#1A237E#8C9EFF#536DFE#3D5AFE#304FFE\",\n        blue        = \"#E3F2FD#BBDEFB#90CAF9#64B5F6#64B5F6#2196F3#1E88E5#1976D2#1565C0#0D47A1#82B1FF#448AFF#2979FF#2962FF\",\n        lightblue   = \"#E1F5FE#B3E5FC#81D4FA#4FC3F7#29B6F6#03A9F4#039BE5#0288D1#0277BD#01579B#80D8FF#40C4FF#00B0FF#0091EA\",\n        cyan        = \"#E0F7FA#B2EBF2#80DEEA#4DD0E1#26C6DA#00BCD4#00ACC1#0097A7#00838F#006064#84FFFF#18FFFF#00E5FF#00B8D4\",\n        teal        = \"#E0F2F1#B2DFDB#80CBC4#4DB6AC#26A69A#009688#00897B#00796B#00695C#004D40#A7FFEB#64FFDA#1DE9B6#00BFA5\",\n        green       = \"#E8F5E9#C8E6C9#A5D6A7#81C784#66BB6A#4CAF50#43A047#388E3C#2E7D32#1B5E20#B9F6CA#69F0AE#00E676#00C853\",\n        lightgreen  = \"#F1F8E9#DCEDC8#C5E1A5#AED581#9CCC65#8BC34A#7CB342#689F38#558B2F#33691E#CCFF90#B2FF59#76FF03#64DD17\",\n        lime        = \"#F9FBE7#F0F4C3#E6EE9C#DCE775#D4E157#CDDC39#C0CA33#AFB42B#9E9D24#827717#F4FF81#EEFF41#C6FF00#AEEA00\",\n        yellow      = \"#FFFDE7#FFF9C4#FFF59D#FFF176#FFEE58#FFEB3B#FDD835#FBC02D#F9A825#F57F17#FFFF8D#FFFF00#FFEA00#FFD600\",\n        amber       = \"#FFF8E1#FFECB3#FFE082#FFD54F#FFCA28#FFC107#FFB300#FFA000#FF8F00#FF6F00#FFE57F#FFD740#FFC400#FFAB00\",\n        orange      = \"#FFF3E0#FFE0B2#FFCC80#FFB74D#FFA726#FF9800#FB8C00#F57C00#EF6C00#E65100#FFD180#FFAB40#FF9100#FF6D00\",\n        deeporange  = \"#FBE9E7#FFCCBC#FFAB91#FF8A65#FF7043#FF5722#F4511E#E64A19#D84315#BF360C#FF9E80#FF6E40#FF3D00#DD2C00\",\n        brown       = \"#EFEBE9#D7CCC8#BCAAA4#A1887F#8D6E63#795548#6D4C41#5D4037#4E342E#3E2723\",\n        grey        = \"#FAFAFA#F5F5F5#EEEEEE#E0E0E0#BDBDBD#9E9E9E#757575#616161#424242#212121\",\n        bluegrey    = \"#ECEFF1#CFD8DC#B0BEC5#90A4AE#78909C#607D8B#546E7A#455A64#37474F#263238\";\n    /*\\\n     * Snap.mui\n     [ property ]\n     **\n     * Contain Material UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.mui.deeppurple, stroke: Snap.mui.amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.mui = {};\n    /*\\\n     * Snap.flat\n     [ property ]\n     **\n     * Contain Flat UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.flat.carrot, stroke: Snap.flat.wetasphalt});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.flat = {};\n    function saveColor(colors) {\n        colors = colors.split(/(?=#)/);\n        var color = new String(colors[5]);\n        color[50] = colors[0];\n        color[100] = colors[1];\n        color[200] = colors[2];\n        color[300] = colors[3];\n        color[400] = colors[4];\n        color[500] = colors[5];\n        color[600] = colors[6];\n        color[700] = colors[7];\n        color[800] = colors[8];\n        color[900] = colors[9];\n        if (colors[10]) {\n            color.A100 = colors[10];\n            color.A200 = colors[11];\n            color.A400 = colors[12];\n            color.A700 = colors[13];\n        }\n        return color;\n    }\n    Snap.mui.red = saveColor(red);\n    Snap.mui.pink = saveColor(pink);\n    Snap.mui.purple = saveColor(purple);\n    Snap.mui.deeppurple = saveColor(deeppurple);\n    Snap.mui.indigo = saveColor(indigo);\n    Snap.mui.blue = saveColor(blue);\n    Snap.mui.lightblue = saveColor(lightblue);\n    Snap.mui.cyan = saveColor(cyan);\n    Snap.mui.teal = saveColor(teal);\n    Snap.mui.green = saveColor(green);\n    Snap.mui.lightgreen = saveColor(lightgreen);\n    Snap.mui.lime = saveColor(lime);\n    Snap.mui.yellow = saveColor(yellow);\n    Snap.mui.amber = saveColor(amber);\n    Snap.mui.orange = saveColor(orange);\n    Snap.mui.deeporange = saveColor(deeporange);\n    Snap.mui.brown = saveColor(brown);\n    Snap.mui.grey = saveColor(grey);\n    Snap.mui.bluegrey = saveColor(bluegrey);\n    Snap.flat.turquoise = \"#1abc9c\";\n    Snap.flat.greensea = \"#16a085\";\n    Snap.flat.sunflower = \"#f1c40f\";\n    Snap.flat.orange = \"#f39c12\";\n    Snap.flat.emerland = \"#2ecc71\";\n    Snap.flat.nephritis = \"#27ae60\";\n    Snap.flat.carrot = \"#e67e22\";\n    Snap.flat.pumpkin = \"#d35400\";\n    Snap.flat.peterriver = \"#3498db\";\n    Snap.flat.belizehole = \"#2980b9\";\n    Snap.flat.alizarin = \"#e74c3c\";\n    Snap.flat.pomegranate = \"#c0392b\";\n    Snap.flat.amethyst = \"#9b59b6\";\n    Snap.flat.wisteria = \"#8e44ad\";\n    Snap.flat.clouds = \"#ecf0f1\";\n    Snap.flat.silver = \"#bdc3c7\";\n    Snap.flat.wetasphalt = \"#34495e\";\n    Snap.flat.midnightblue = \"#2c3e50\";\n    Snap.flat.concrete = \"#95a5a6\";\n    Snap.flat.asbestos = \"#7f8c8d\";\n    /*\\\n     * Snap.importMUIColors\n     [ method ]\n     **\n     * Imports Material UI colours into global object.\n     | Snap.importMUIColors();\n     | Snap().rect(0, 0, 10, 10).attr({fill: deeppurple, stroke: amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.importMUIColors = function () {\n        for (var color in Snap.mui) {\n            if (Snap.mui.hasOwnProperty(color)) {\n                window[color] = Snap.mui[color];\n            }\n        }\n    };\n});\n\nmodule.exports = Snap\n","// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.5.4 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n\n(function (glob) {\n    var version = \"0.5.4\",\n        has = \"hasOwnProperty\",\n        separator = /[\\.\\/]/,\n        comaseparator = /\\s*,\\s*/,\n        wildcard = \"*\",\n        numsort = function (a, b) {\n            return a - b;\n        },\n        current_event,\n        stop,\n        events = {n: {}},\n        firstDefined = function () {\n            for (var i = 0, ii = this.length; i < ii; i++) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        lastDefined = function () {\n            var i = this.length;\n            while (--i) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        objtos = Object.prototype.toString,\n        Str = String,\n        isArray = Array.isArray || function (ar) {\n            return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\n        },\n    /*\\\n     * eve\n     [ method ]\n\n     * Fires event with given `name`, given scope and other parameters.\n\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n     - scope (object) context for the event handlers\n     - varargs (...) the rest of arguments will be sent to event handlers\n\n     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n    \\*/\n        eve = function (name, scope) {\n            var oldstop = stop,\n                args = Array.prototype.slice.call(arguments, 2),\n                listeners = eve.listeners(name),\n                z = 0,\n                l,\n                indexed = [],\n                queue = {},\n                out = [],\n                ce = current_event;\n            out.firstDefined = firstDefined;\n            out.lastDefined = lastDefined;\n            current_event = name;\n            stop = 0;\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n                indexed.push(listeners[i].zIndex);\n                if (listeners[i].zIndex < 0) {\n                    queue[listeners[i].zIndex] = listeners[i];\n                }\n            }\n            indexed.sort(numsort);\n            while (indexed[z] < 0) {\n                l = queue[indexed[z++]];\n                out.push(l.apply(scope, args));\n                if (stop) {\n                    stop = oldstop;\n                    return out;\n                }\n            }\n            for (i = 0; i < ii; i++) {\n                l = listeners[i];\n                if (\"zIndex\" in l) {\n                    if (l.zIndex == indexed[z]) {\n                        out.push(l.apply(scope, args));\n                        if (stop) {\n                            break;\n                        }\n                        do {\n                            z++;\n                            l = queue[indexed[z]];\n                            l && out.push(l.apply(scope, args));\n                            if (stop) {\n                                break;\n                            }\n                        } while (l)\n                    } else {\n                        queue[l.zIndex] = l;\n                    }\n                } else {\n                    out.push(l.apply(scope, args));\n                    if (stop) {\n                        break;\n                    }\n                }\n            }\n            stop = oldstop;\n            current_event = ce;\n            return out;\n        };\n    // Undocumented. Debug only.\n    eve._events = events;\n    /*\\\n     * eve.listeners\n     [ method ]\n\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\n     = (array) array of event handlers\n    \\*/\n    eve.listeners = function (name) {\n        var names = isArray(name) ? name : name.split(separator),\n            e = events,\n            item,\n            items,\n            k,\n            i,\n            ii,\n            j,\n            jj,\n            nes,\n            es = [e],\n            out = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            nes = [];\n            for (j = 0, jj = es.length; j < jj; j++) {\n                e = es[j].n;\n                items = [e[names[i]], e[wildcard]];\n                k = 2;\n                while (k--) {\n                    item = items[k];\n                    if (item) {\n                        nes.push(item);\n                        out = out.concat(item.f || []);\n                    }\n                }\n            }\n            es = nes;\n        }\n        return out;\n    };\n    /*\\\n     * eve.separator\n     [ method ]\n\n     * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\n     * here. Be aware that if you pass a string longer than one character it will be treated as\n     * a list of characters.\n\n     - separator (string) new separator. Empty string resets to default: `.` or `/`.\n    \\*/\n    eve.separator = function (sep) {\n        if (sep) {\n            sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\n            sep = \"[\" + sep + \"]\";\n            separator = new RegExp(sep);\n        } else {\n            separator = /[\\.\\/]/;\n        }\n    };\n    /*\\\n     * eve.on\n     [ method ]\n     **\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n     | eve.on(\"*.under.*\", f);\n     | eve(\"mouse.under.floor\"); // triggers f\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     - name (array) if you don’t want to use separators, you can use array of strings\n     - f (function) event handler function\n     **\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment.\n     > Example:\n     | eve.on(\"mouse\", eatIt)(2);\n     | eve.on(\"mouse\", scream);\n     | eve.on(\"mouse\", catchIt)(1);\n     * This will ensure that `catchIt` function will be called before `eatIt`.\n     *\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n    \\*/\n    eve.on = function (name, f) {\n        if (typeof f != \"function\") {\n            return function () {};\n        }\n        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n        for (var i = 0, ii = names.length; i < ii; i++) {\n            (function (name) {\n                var names = isArray(name) ? name : Str(name).split(separator),\n                    e = events,\n                    exist;\n                for (var i = 0, ii = names.length; i < ii; i++) {\n                    e = e.n;\n                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n                }\n                e.f = e.f || [];\n                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n                    exist = true;\n                    break;\n                }\n                !exist && e.f.push(f);\n            }(names[i]));\n        }\n        return function (zIndex) {\n            if (+zIndex == +zIndex) {\n                f.zIndex = +zIndex;\n            }\n        };\n    };\n    /*\\\n     * eve.f\n     [ method ]\n     **\n     * Returns function that will fire given event with optional arguments.\n     * Arguments that will be passed to the result function will be also\n     * concated to the list of final arguments.\n     | el.onclick = eve.f(\"click\", 1, 2);\n     | eve.on(\"click\", function (a, b, c) {\n     |     console.log(a, b, c); // 1, 2, [event object]\n     | });\n     - event (string) event name\n     - varargs (…) and any other arguments\n     = (function) possible event handler function\n    \\*/\n    eve.f = function (event) {\n        var attrs = [].slice.call(arguments, 1);\n        return function () {\n            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n        };\n    };\n    /*\\\n     * eve.stop\n     [ method ]\n     **\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n    \\*/\n    eve.stop = function () {\n        stop = 1;\n    };\n    /*\\\n     * eve.nt\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     - subname (string) #optional subname of the event\n     **\n     = (string) name of the event, if `subname` is not specified\n     * or\n     = (boolean) `true`, if current event’s name contains `subname`\n    \\*/\n    eve.nt = function (subname) {\n        var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\n        if (subname) {\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\n        }\n        return cur;\n    };\n    /*\\\n     * eve.nts\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     **\n     = (array) names of the event\n    \\*/\n    eve.nts = function () {\n        return isArray(current_event) ? current_event : current_event.split(separator);\n    };\n    /*\\\n     * eve.off\n     [ method ]\n     **\n     * Removes given function from the list of event listeners assigned to given name.\n     * If no arguments specified all the events will be cleared.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n    \\*/\n    /*\\\n     * eve.unbind\n     [ method ]\n     **\n     * See @eve.off\n    \\*/\n    eve.off = eve.unbind = function (name, f) {\n        if (!name) {\n            eve._events = events = {n: {}};\n            return;\n        }\n        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n        if (names.length > 1) {\n            for (var i = 0, ii = names.length; i < ii; i++) {\n                eve.off(names[i], f);\n            }\n            return;\n        }\n        names = isArray(name) ? name : Str(name).split(separator);\n        var e,\n            key,\n            splice,\n            i, ii, j, jj,\n            cur = [events],\n            inodes = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            for (j = 0; j < cur.length; j += splice.length - 2) {\n                splice = [j, 1];\n                e = cur[j].n;\n                if (names[i] != wildcard) {\n                    if (e[names[i]]) {\n                        splice.push(e[names[i]]);\n                        inodes.unshift({\n                            n: e,\n                            name: names[i]\n                        });\n                    }\n                } else {\n                    for (key in e) if (e[has](key)) {\n                        splice.push(e[key]);\n                        inodes.unshift({\n                            n: e,\n                            name: key\n                        });\n                    }\n                }\n                cur.splice.apply(cur, splice);\n            }\n        }\n        for (i = 0, ii = cur.length; i < ii; i++) {\n            e = cur[i];\n            while (e.n) {\n                if (f) {\n                    if (e.f) {\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n                            e.f.splice(j, 1);\n                            break;\n                        }\n                        !e.f.length && delete e.f;\n                    }\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        var funcs = e.n[key].f;\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n                            funcs.splice(j, 1);\n                            break;\n                        }\n                        !funcs.length && delete e.n[key].f;\n                    }\n                } else {\n                    delete e.f;\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        delete e.n[key].f;\n                    }\n                }\n                e = e.n;\n            }\n        }\n        // prune inner nodes in path\n        prune: for (i = 0, ii = inodes.length; i < ii; i++) {\n            e = inodes[i];\n            for (key in e.n[e.name].f) {\n                // not empty (has listeners)\n                continue prune;\n            }\n            for (key in e.n[e.name].n) {\n                // not empty (has children)\n                continue prune;\n            }\n            // is empty\n            delete e.n[e.name];\n        }\n    };\n    /*\\\n     * eve.once\n     [ method ]\n     **\n     * Binds given event handler with a given name to only run once then unbind itself.\n     | eve.once(\"login\", f);\n     | eve(\"login\"); // triggers f\n     | eve(\"login\"); // no listeners\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     = (function) same return function as @eve.on\n    \\*/\n    eve.once = function (name, f) {\n        var f2 = function () {\n            eve.off(name, f2);\n            return f.apply(this, arguments);\n        };\n        return eve.on(name, f2);\n    };\n    /*\\\n     * eve.version\n     [ property (string) ]\n     **\n     * Current version of the library.\n    \\*/\n    eve.version = version;\n    eve.toString = function () {\n        return \"You are running Eve \" + version;\n    };\n    glob.eve = eve;\n    typeof module != \"undefined\" && module.exports ? module.exports = eve : typeof define === \"function\" && define.amd ? define(\"eve\", [], function () { return eve; }) : glob.eve = eve;\n})(typeof window != \"undefined\" ? window : this);\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _snapsvgImporter = require('../snapsvgImporter');\n\nvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  svg: {\n    lib: _snapsvgImporter2['default'],\n    pathInitial: 'M-7.312,0H0c0,0,0,113.839,0,400c0,264.506,0,400,0,400h-7.312V0z',\n    pathOpen: 'M-7.312,0H15c0,0,66,113.339,66,399.5C81,664.006,15,800,15,800H-7.312V0z;M-7.312,0H100c0,0,0,113.839,0,400c0,264.506,0,400,0,400H-7.312V0z',\n    animate: function animate(path) {\n      var pos = 0;\n      var steps = this.pathOpen.split(';');\n      var stepsTotal = steps.length;\n      var mina = window.mina;\n\n      var nextStep = function nextStep() {\n        if (pos > stepsTotal - 1) return;\n\n        path.animate({ path: steps[pos] }, pos === 0 ? 400 : 500, pos === 0 ? mina.easein : mina.elastic, function () {\n          nextStep();\n        });\n\n        pos++;\n      };\n\n      nextStep();\n    }\n  },\n\n  morphShape: function morphShape(isOpen, width, right) {\n    return {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      right: right ? 'inherit' : 0,\n      left: right ? 0 : 'inherit',\n      MozTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      MsTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      OTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      WebkitTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      transform: right ? 'rotateY(180deg)' : 'rotateY(0deg)'\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: isOpen ? 'transform 0.4s 0s' : 'transform 0.4s'\n    };\n  },\n\n  menu: function menu(isOpen, width, right) {\n    width -= 140;\n    return {\n      position: 'fixed',\n      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  },\n\n  item: function item(isOpen, width, right, nthChild) {\n    width -= 140;\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.3s 0.4s, transform 0.3s 0.4s' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  },\n\n  closeButton: function closeButton(isOpen, width, right) {\n    width -= 140;\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      transformOrigin: right ? '100% 50%' : '0% 50%',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      MsTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      OTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      transform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      transformOrigin: '100%',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer() {\n    return {\n      perspective: '1500px'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      OTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      transform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      transition: 'all 0.5s ease-in-out'\n    };\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      perspectiveOrigin: '0% 50%',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      visibility: isOpen ? 'visible' : 'hidden',\n      MozTransform: 'translate3d(0, 0, 0)',\n      MsTransform: 'translate3d(0, 0, 0)',\n      OTransform: 'translate3d(0, 0, 0)',\n      WebkitTransform: 'translate3d(0, 0, 0)',\n      transform: 'translate3d(0, 0, 0)',\n      zIndex: 1000\n    };\n  },\n\n  overlay: function overlay(isOpen, width, right) {\n    return {\n      zIndex: 1400,\n      MozTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      MsTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      OTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      WebkitTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transition: 'all 0.5s',\n      visibility: isOpen ? 'visible' : 'hidden'\n    };\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s',\n      zIndex: 1200,\n      position: 'relative'\n    };\n  },\n\n  burgerIcon: function burgerIcon(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      MsTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      OTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      WebkitTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transition: 'all 0.1s',\n      position: 'relative',\n      zIndex: 1300\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];"],"sourceRoot":""}